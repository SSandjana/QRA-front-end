{"ast":null,"code":"import * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ChangeDetectionStrategy, Input, Output, ViewChild, ViewChildren, HostListener, Pipe, TemplateRef, ContentChild, NgModule } from '@angular/core';\nimport * as i4 from '@angular/cdk/drag-drop';\nimport { moveItemInArray, DragDropModule } from '@angular/cdk/drag-drop';\nimport { from, Subject } from 'rxjs';\nimport { groupBy, mergeMap, reduce, takeUntil, throttleTime, filter } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as i1 from 'ngx-pagination';\nimport { NgxPaginationModule } from 'ngx-pagination';\nconst _c0 = [\"th\"];\nconst _c1 = [\"additionalActionMenu\"];\nconst _c2 = [\"headerDropdown\"];\nconst _c3 = [\"table-thead\", \"\"];\n\nconst _c4 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction TableTHeadComponent_tr_0_th_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.selectAllTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c4, ctx_r7.onSelectAllBinded));\n  }\n}\n\nfunction TableTHeadComponent_tr_0_th_1_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"label\", 11)(1, \"input\", 12);\n    i0.ɵɵlistener(\"change\", function TableTHeadComponent_tr_0_th_1_label_2_Template_input_change_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(3);\n      return ctx_r9.onSelectAll();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(2, \"em\", 13);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TableTHeadComponent_tr_0_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtemplate(1, TableTHeadComponent_tr_0_th_1_ng_container_1_Template, 1, 4, \"ng-container\", 8);\n    i0.ɵɵtemplate(2, TableTHeadComponent_tr_0_th_1_label_2_Template, 3, 0, \"label\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"width\", \"3%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.selectAllTemplate && ctx_r4.config.checkboxes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.selectAllTemplate && ctx_r4.config.checkboxes);\n  }\n}\n\nfunction TableTHeadComponent_tr_0_ng_container_2_em_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"em\", 23);\n  }\n}\n\nfunction TableTHeadComponent_tr_0_ng_container_2_em_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"em\", 24);\n  }\n}\n\nfunction TableTHeadComponent_tr_0_ng_container_2_em_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"em\", 25);\n  }\n}\n\nfunction TableTHeadComponent_tr_0_ng_container_2_div_12_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵelementContainer(1, 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r11 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", column_r11.headerActionTemplate);\n  }\n}\n\nfunction TableTHeadComponent_tr_0_ng_container_2_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 26, 27)(2, \"a\", 28);\n    i0.ɵɵlistener(\"click\", function TableTHeadComponent_tr_0_ng_container_2_div_12_Template_a_click_2_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const column_r11 = i0.ɵɵnextContext().$implicit;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return ctx_r23.showHeaderActionTemplateMenu(column_r11);\n    });\n    i0.ɵɵelement(3, \"span\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, TableTHeadComponent_tr_0_ng_container_2_div_12_div_4_Template, 2, 1, \"div\", 30);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r11 = i0.ɵɵnextContext().$implicit;\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", column_r11.key === ctx_r18.openedHeaderActionTemplate);\n  }\n}\n\nfunction TableTHeadComponent_tr_0_ng_container_2_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 33);\n  }\n}\n\nfunction TableTHeadComponent_tr_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"th\", 14, 15);\n    i0.ɵɵlistener(\"mousedown\", function TableTHeadComponent_tr_0_ng_container_2_Template_th_mousedown_1_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n\n      const _r14 = i0.ɵɵreference(2);\n\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return ctx_r27.onMouseDown($event, _r14);\n    })(\"mouseup\", function TableTHeadComponent_tr_0_ng_container_2_Template_th_mouseup_1_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return ctx_r29.onMouseUp($event);\n    })(\"mousemove\", function TableTHeadComponent_tr_0_ng_container_2_Template_th_mousemove_1_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return ctx_r30.onMouseMove($event);\n    });\n    i0.ɵɵelementStart(3, \"div\", 16);\n    i0.ɵɵlistener(\"click\", function TableTHeadComponent_tr_0_ng_container_2_Template_div_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r28);\n      const column_r11 = restoredCtx.$implicit;\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return ctx_r31.orderBy(column_r11);\n    });\n    i0.ɵɵelementStart(4, \"div\", 17);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7, \"\\xA0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, TableTHeadComponent_tr_0_ng_container_2_em_8_Template, 1, 0, \"em\", 18);\n    i0.ɵɵelementStart(9, \"div\");\n    i0.ɵɵtemplate(10, TableTHeadComponent_tr_0_ng_container_2_em_10_Template, 1, 0, \"em\", 19);\n    i0.ɵɵtemplate(11, TableTHeadComponent_tr_0_ng_container_2_em_11_Template, 1, 0, \"em\", 20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(12, TableTHeadComponent_tr_0_ng_container_2_div_12_Template, 5, 1, \"div\", 21);\n    i0.ɵɵtemplate(13, TableTHeadComponent_tr_0_ng_container_2_div_13_Template, 1, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r11 = ctx.$implicit;\n    const colIndex_r12 = ctx.index;\n    const last_r13 = ctx.last;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"left\", ctx_r5.styleService.pinnedWidth(column_r11.pinned, colIndex_r12))(\"width\", ctx_r5.getColumnWidth(column_r11));\n    i0.ɵɵclassProp(\"pinned-left\", column_r11.pinned);\n    i0.ɵɵproperty(\"ngClass\", column_r11.cssClass && column_r11.cssClass.includeHeader ? column_r11.cssClass.name : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"pointer\", ctx_r5.isOrderEnabled(column_r11));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", column_r11.title, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", column_r11.pinned);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"display\", ctx_r5.config.orderEnabled ? \"inline\" : \"none\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.sortKey === column_r11.key && ctx_r5.sortState.get(ctx_r5.sortKey) === \"asc\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.sortKey === column_r11.key && ctx_r5.sortState.get(ctx_r5.sortKey) === \"desc\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !!column_r11.headerActionTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.config.resizeColumn && !last_r13);\n  }\n}\n\nfunction TableTHeadComponent_tr_0_th_3_div_1_ul_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 32);\n  }\n\n  if (rf & 2) {\n    const ctx_r35 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r35.additionalActionsTemplate);\n  }\n}\n\nfunction TableTHeadComponent_tr_0_th_3_div_1_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 31);\n    i0.ɵɵtemplate(1, TableTHeadComponent_tr_0_th_3_div_1_ul_4_ng_container_1_Template, 1, 1, \"ng-container\", 37);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r34 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r34.additionalActionsTemplate);\n  }\n}\n\nfunction TableTHeadComponent_tr_0_th_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 26, 35)(2, \"a\", 28);\n    i0.ɵɵlistener(\"click\", function TableTHeadComponent_tr_0_th_3_div_1_Template_a_click_2_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r36 = i0.ɵɵnextContext(3);\n      return ctx_r36.showMenu();\n    });\n    i0.ɵɵelement(3, \"span\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, TableTHeadComponent_tr_0_th_3_div_1_ul_4_Template, 2, 1, \"ul\", 30);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.menuActive);\n  }\n}\n\nfunction TableTHeadComponent_tr_0_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 34);\n    i0.ɵɵtemplate(1, TableTHeadComponent_tr_0_th_3_div_1_Template, 5, 1, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.config.additionalActions);\n  }\n}\n\nfunction TableTHeadComponent_tr_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 4);\n    i0.ɵɵtemplate(1, TableTHeadComponent_tr_0_th_1_Template, 3, 4, \"th\", 5);\n    i0.ɵɵtemplate(2, TableTHeadComponent_tr_0_ng_container_2_Template, 14, 17, \"ng-container\", 6);\n    i0.ɵɵtemplate(3, TableTHeadComponent_tr_0_th_3_Template, 2, 1, \"th\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.config.checkboxes || ctx_r0.config.radio);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.columns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.config.additionalActions || ctx_r0.config.detailsTemplate || ctx_r0.config.collapseAllRows || ctx_r0.config.groupRows);\n  }\n}\n\nfunction TableTHeadComponent_tr_1_th_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r41 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r41.selectAllTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c4, ctx_r41.onSelectAllBinded));\n  }\n}\n\nfunction TableTHeadComponent_tr_1_th_1_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"label\", 11)(1, \"input\", 39);\n    i0.ɵɵlistener(\"change\", function TableTHeadComponent_tr_1_th_1_label_2_Template_input_change_1_listener() {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r43 = i0.ɵɵnextContext(3);\n      return ctx_r43.onSelectAll();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(2, \"em\", 40);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TableTHeadComponent_tr_1_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtemplate(1, TableTHeadComponent_tr_1_th_1_ng_container_1_Template, 1, 4, \"ng-container\", 8);\n    i0.ɵɵtemplate(2, TableTHeadComponent_tr_1_th_1_label_2_Template, 3, 0, \"label\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r38 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"width\", \"3%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r38.selectAllTemplate && ctx_r38.config.checkboxes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r38.selectAllTemplate && ctx_r38.config.checkboxes);\n  }\n}\n\nfunction TableTHeadComponent_tr_1_ng_container_2_em_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"em\", 23);\n  }\n}\n\nfunction TableTHeadComponent_tr_1_ng_container_2_em_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"em\", 24);\n  }\n}\n\nfunction TableTHeadComponent_tr_1_ng_container_2_em_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"em\", 25);\n  }\n}\n\nfunction TableTHeadComponent_tr_1_ng_container_2_div_12_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵelementContainer(1, 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r45 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", column_r45.headerActionTemplate);\n  }\n}\n\nfunction TableTHeadComponent_tr_1_ng_container_2_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r59 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 26, 27)(2, \"a\", 28);\n    i0.ɵɵlistener(\"click\", function TableTHeadComponent_tr_1_ng_container_2_div_12_Template_a_click_2_listener() {\n      i0.ɵɵrestoreView(_r59);\n      const column_r45 = i0.ɵɵnextContext().$implicit;\n      const ctx_r57 = i0.ɵɵnextContext(2);\n      return ctx_r57.showHeaderActionTemplateMenu(column_r45);\n    });\n    i0.ɵɵelement(3, \"span\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, TableTHeadComponent_tr_1_ng_container_2_div_12_div_4_Template, 2, 1, \"div\", 30);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r45 = i0.ɵɵnextContext().$implicit;\n    const ctx_r52 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", column_r45.key === ctx_r52.openedHeaderActionTemplate);\n  }\n}\n\nfunction TableTHeadComponent_tr_1_ng_container_2_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 33);\n  }\n}\n\nfunction TableTHeadComponent_tr_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r62 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"th\", 41, 15);\n    i0.ɵɵlistener(\"mousedown\", function TableTHeadComponent_tr_1_ng_container_2_Template_th_mousedown_1_listener($event) {\n      i0.ɵɵrestoreView(_r62);\n\n      const _r48 = i0.ɵɵreference(2);\n\n      const ctx_r61 = i0.ɵɵnextContext(2);\n      return ctx_r61.onMouseDown($event, _r48);\n    })(\"mouseup\", function TableTHeadComponent_tr_1_ng_container_2_Template_th_mouseup_1_listener($event) {\n      i0.ɵɵrestoreView(_r62);\n      const ctx_r63 = i0.ɵɵnextContext(2);\n      return ctx_r63.onMouseUp($event);\n    })(\"mousemove\", function TableTHeadComponent_tr_1_ng_container_2_Template_th_mousemove_1_listener($event) {\n      i0.ɵɵrestoreView(_r62);\n      const ctx_r64 = i0.ɵɵnextContext(2);\n      return ctx_r64.onMouseMove($event);\n    });\n    i0.ɵɵelementStart(3, \"div\", 42);\n    i0.ɵɵlistener(\"click\", function TableTHeadComponent_tr_1_ng_container_2_Template_div_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r62);\n      const column_r45 = restoredCtx.$implicit;\n      const ctx_r65 = i0.ɵɵnextContext(2);\n      return ctx_r65.orderBy(column_r45);\n    });\n    i0.ɵɵelementStart(4, \"div\", 17);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7, \"\\xA0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, TableTHeadComponent_tr_1_ng_container_2_em_8_Template, 1, 0, \"em\", 18);\n    i0.ɵɵelementStart(9, \"div\");\n    i0.ɵɵtemplate(10, TableTHeadComponent_tr_1_ng_container_2_em_10_Template, 1, 0, \"em\", 19);\n    i0.ɵɵtemplate(11, TableTHeadComponent_tr_1_ng_container_2_em_11_Template, 1, 0, \"em\", 20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(12, TableTHeadComponent_tr_1_ng_container_2_div_12_Template, 5, 1, \"div\", 21);\n    i0.ɵɵtemplate(13, TableTHeadComponent_tr_1_ng_container_2_div_13_Template, 1, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r45 = ctx.$implicit;\n    const colIndex_r46 = ctx.index;\n    const last_r47 = ctx.last;\n    const ctx_r39 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"left\", ctx_r39.styleService.pinnedWidth(column_r45.pinned, colIndex_r46))(\"width\", ctx_r39.getColumnWidth(column_r45));\n    i0.ɵɵclassProp(\"pinned-left\", column_r45.pinned);\n    i0.ɵɵproperty(\"cdkDragStartDelay\", ctx_r39.config.reorderDelay || 0)(\"ngClass\", column_r45.cssClass && column_r45.cssClass.includeHeader ? column_r45.cssClass.name : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"pointer\", ctx_r39.isOrderEnabled(column_r45));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", column_r45.title, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", column_r45.pinned);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"display\", ctx_r39.config.orderEnabled ? \"inline\" : \"none\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r39.sortKey === column_r45.key && ctx_r39.sortState.get(ctx_r39.sortKey) === \"asc\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r39.sortKey === column_r45.key && ctx_r39.sortState.get(ctx_r39.sortKey) === \"desc\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !!column_r45.headerActionTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r39.config.resizeColumn && !last_r47);\n  }\n}\n\nfunction TableTHeadComponent_tr_1_th_3_div_1_ul_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 32);\n  }\n\n  if (rf & 2) {\n    const ctx_r69 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r69.additionalActionsTemplate);\n  }\n}\n\nfunction TableTHeadComponent_tr_1_th_3_div_1_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 31);\n    i0.ɵɵtemplate(1, TableTHeadComponent_tr_1_th_3_div_1_ul_4_ng_container_1_Template, 1, 1, \"ng-container\", 37);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r68 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r68.additionalActionsTemplate);\n  }\n}\n\nfunction TableTHeadComponent_tr_1_th_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r71 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 26, 35)(2, \"a\", 28);\n    i0.ɵɵlistener(\"click\", function TableTHeadComponent_tr_1_th_3_div_1_Template_a_click_2_listener() {\n      i0.ɵɵrestoreView(_r71);\n      const ctx_r70 = i0.ɵɵnextContext(3);\n      return ctx_r70.showMenu();\n    });\n    i0.ɵɵelement(3, \"span\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, TableTHeadComponent_tr_1_th_3_div_1_ul_4_Template, 2, 1, \"ul\", 30);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r66 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r66.menuActive);\n  }\n}\n\nfunction TableTHeadComponent_tr_1_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 34);\n    i0.ɵɵtemplate(1, TableTHeadComponent_tr_1_th_3_div_1_Template, 5, 1, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r40 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r40.config.additionalActions);\n  }\n}\n\nfunction TableTHeadComponent_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r73 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 38);\n    i0.ɵɵlistener(\"cdkDropListDropped\", function TableTHeadComponent_tr_1_Template_tr_cdkDropListDropped_0_listener($event) {\n      i0.ɵɵrestoreView(_r73);\n      const ctx_r72 = i0.ɵɵnextContext();\n      return ctx_r72.columnDrop($event);\n    });\n    i0.ɵɵtemplate(1, TableTHeadComponent_tr_1_th_1_Template, 3, 4, \"th\", 5);\n    i0.ɵɵtemplate(2, TableTHeadComponent_tr_1_ng_container_2_Template, 14, 18, \"ng-container\", 6);\n    i0.ɵɵtemplate(3, TableTHeadComponent_tr_1_th_3_Template, 2, 1, \"th\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.config.checkboxes || ctx_r1.config.radio);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.columns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.config.additionalActions || ctx_r1.config.detailsTemplate || ctx_r1.config.collapseAllRows || ctx_r1.config.groupRows);\n  }\n}\n\nfunction TableTHeadComponent_tr_2_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\");\n  }\n}\n\nfunction TableTHeadComponent_tr_2_ng_container_2_table_header_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r81 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"table-header\", 46);\n    i0.ɵɵlistener(\"update\", function TableTHeadComponent_tr_2_ng_container_2_table_header_2_Template_table_header_update_0_listener($event) {\n      i0.ɵɵrestoreView(_r81);\n      const ctx_r80 = i0.ɵɵnextContext(3);\n      return ctx_r80.onSearch($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r77 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"column\", column_r77);\n  }\n}\n\nfunction TableTHeadComponent_tr_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"th\", 44);\n    i0.ɵɵtemplate(2, TableTHeadComponent_tr_2_ng_container_2_table_header_2_Template, 1, 1, \"table-header\", 45);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r77 = ctx.$implicit;\n    const colIndex_r78 = ctx.index;\n    const ctx_r75 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"left\", ctx_r75.styleService.pinnedWidth(column_r77.pinned, colIndex_r78));\n    i0.ɵɵclassProp(\"pinned-left\", column_r77.pinned);\n    i0.ɵɵproperty(\"ngClass\", column_r77.cssClass && column_r77.cssClass.includeHeader ? column_r77.cssClass.name : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r75.getColumnDefinition(column_r77));\n  }\n}\n\nfunction TableTHeadComponent_tr_2_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\");\n  }\n}\n\nfunction TableTHeadComponent_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 43);\n    i0.ɵɵtemplate(1, TableTHeadComponent_tr_2_th_1_Template, 1, 0, \"th\", 3);\n    i0.ɵɵtemplate(2, TableTHeadComponent_tr_2_ng_container_2_Template, 3, 6, \"ng-container\", 6);\n    i0.ɵɵtemplate(3, TableTHeadComponent_tr_2_th_3_Template, 1, 0, \"th\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.config.checkboxes || ctx_r2.config.radio);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.columns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.config.additionalActions || ctx_r2.config.detailsTemplate);\n  }\n}\n\nfunction TableTHeadComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementContainer(2, 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.filtersTemplate);\n  }\n}\n\nconst _c5 = [\"paginationDirective\"];\nconst _c6 = [\"paginationRange\"];\n\nfunction PaginationComponent_li_5_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 13);\n    i0.ɵɵlistener(\"keyup.enter\", function PaginationComponent_li_5_a_1_Template_a_keyup_enter_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      i0.ɵɵnextContext(2);\n\n      const _r0 = i0.ɵɵreference(3);\n\n      return _r0.previous();\n    })(\"click\", function PaginationComponent_li_5_a_1_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      i0.ɵɵnextContext(2);\n\n      const _r0 = i0.ɵɵreference(3);\n\n      return _r0.previous();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"aria-label\", ctx_r5.previousLabel + \" \" + ctx_r5.screenReaderPageLabel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.previousLabel, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r5.screenReaderPageLabel);\n  }\n}\n\nfunction PaginationComponent_li_5_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.previousLabel, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6.screenReaderPageLabel);\n  }\n}\n\nfunction PaginationComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 10);\n    i0.ɵɵtemplate(1, PaginationComponent_li_5_a_1_Template, 4, 3, \"a\", 11);\n    i0.ɵɵtemplate(2, PaginationComponent_li_5_span_2_Template, 4, 2, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(3);\n\n    i0.ɵɵclassProp(\"disabled\", _r0.isFirstPage());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", 1 < _r0.getCurrent());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.isFirstPage());\n  }\n}\n\nfunction PaginationComponent_li_8_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 13);\n    i0.ɵɵlistener(\"keyup.enter\", function PaginationComponent_li_8_a_1_Template_a_keyup_enter_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const page_r10 = i0.ɵɵnextContext().$implicit;\n      i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(3);\n\n      return _r0.setCurrent(page_r10.value);\n    })(\"click\", function PaginationComponent_li_8_a_1_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const page_r10 = i0.ɵɵnextContext().$implicit;\n      i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(3);\n\n      return _r0.setCurrent(page_r10.value);\n    });\n    i0.ɵɵelementStart(1, \"span\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const page_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r11.screenReaderPageLabel, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(page_r10.label);\n  }\n}\n\nfunction PaginationComponent_li_8_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const page_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r12.screenReaderCurrentLabel, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(page_r10.label);\n  }\n}\n\nfunction PaginationComponent_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtemplate(1, PaginationComponent_li_8_a_1_Template, 5, 2, \"a\", 11);\n    i0.ɵɵtemplate(2, PaginationComponent_li_8_ng_container_2_Template, 5, 2, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const page_r10 = ctx.$implicit;\n    i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(3);\n\n    i0.ɵɵclassProp(\"current\", _r0.getCurrent() === page_r10.value)(\"ellipsis\", page_r10.label === \"...\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.getCurrent() !== page_r10.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.getCurrent() === page_r10.value);\n  }\n}\n\nfunction PaginationComponent_li_9_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 13);\n    i0.ɵɵlistener(\"keyup.enter\", function PaginationComponent_li_9_a_1_Template_a_keyup_enter_0_listener() {\n      i0.ɵɵrestoreView(_r23);\n      i0.ɵɵnextContext(2);\n\n      const _r0 = i0.ɵɵreference(3);\n\n      return _r0.next();\n    })(\"click\", function PaginationComponent_li_9_a_1_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r23);\n      i0.ɵɵnextContext(2);\n\n      const _r0 = i0.ɵɵreference(3);\n\n      return _r0.next();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"aria-label\", ctx_r20.nextLabel + \" \" + ctx_r20.screenReaderPageLabel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r20.nextLabel, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r20.screenReaderPageLabel);\n  }\n}\n\nfunction PaginationComponent_li_9_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r21.nextLabel, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r21.screenReaderPageLabel);\n  }\n}\n\nfunction PaginationComponent_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 15);\n    i0.ɵɵtemplate(1, PaginationComponent_li_9_a_1_Template, 4, 3, \"a\", 11);\n    i0.ɵɵtemplate(2, PaginationComponent_li_9_span_2_Template, 4, 2, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(3);\n\n    i0.ɵɵclassProp(\"disabled\", _r0.isLastPage());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !_r0.isLastPage());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.isLastPage());\n  }\n}\n\nfunction PaginationComponent_div_10_ul_7_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 25);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_div_10_ul_7_li_1_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r30);\n      const limit_r28 = restoredCtx.$implicit;\n      const ctx_r29 = i0.ɵɵnextContext(3);\n      return ctx_r29.changeLimit(limit_r28, false);\n    });\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const limit_r28 = ctx.$implicit;\n    const ctx_r27 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassProp(\"ngx-pagination-range--selected\", limit_r28 === ctx_r27.selectedLimit);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(limit_r28);\n  }\n}\n\nfunction PaginationComponent_div_10_ul_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 23);\n    i0.ɵɵtemplate(1, PaginationComponent_div_10_ul_7_li_1_Template, 3, 3, \"li\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r26.ranges);\n  }\n}\n\nfunction PaginationComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 16, 17)(2, \"div\", 18)(3, \"div\", 19)(4, \"div\", 20);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_div_10_Template_div_click_4_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.showRange = !ctx_r31.showRange;\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelement(6, \"i\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, PaginationComponent_div_10_ul_7_Template, 2, 1, \"ul\", 22);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ngx-table__table--dark-pagination-range\", ctx_r4.config.tableLayout.theme === \"dark\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.selectedLimit, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showRange);\n  }\n}\n\nconst _c7 = [\"paginationComponent\"];\nconst _c8 = [\"contextMenu\"];\n\nconst _c9 = function (a1, a2) {\n  return {\n    position: \"absolute\",\n    top: a1,\n    left: a2\n  };\n};\n\nfunction BaseComponent_tbody_3_ng_container_1_ul_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 9);\n    i0.ɵɵelementContainer(1, 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(3, _c9, ctx_r9.rowContextMenuPosition.top, ctx_r9.rowContextMenuPosition.left));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r9.rowContextMenu)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c4, ctx_r9.rowContextMenuPosition.value));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_td_4_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵlistener(\"click\", function BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_td_4_span_1_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const rowIndex_r14 = i0.ɵɵnextContext(2).index;\n      const ctx_r19 = i0.ɵɵnextContext(4);\n      return ctx_r19.collapseRow(rowIndex_r14);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const rowIndex_r14 = i0.ɵɵnextContext(2).index;\n    const ctx_r18 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngClass\", ctx_r18.isRowCollapsed(rowIndex_r14) ? \"ngx-icon-arrow-down\" : \"ngx-icon-arrow-right\");\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_td_4_span_1_Template, 1, 1, \"span\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.arrowDefinition);\n  }\n}\n\nconst _c10 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    index: a1\n  };\n};\n\nfunction BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵelementContainer(2, 10);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext();\n    const row_r13 = ctx_r23.$implicit;\n    const rowIndex_r14 = ctx_r23.index;\n    const ctx_r17 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r17.columns.length + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r17.detailsTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(3, _c10, row_r13, rowIndex_r14));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\", 12, 13);\n    i0.ɵɵlistener(\"click\", function BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_Template_tr_click_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const row_r13 = restoredCtx.$implicit;\n      const rowIndex_r14 = restoredCtx.index;\n      const ctx_r24 = i0.ɵɵnextContext(4);\n      return ctx_r24.onClick($event, row_r13, \"\", null, rowIndex_r14);\n    })(\"contextmenu\", function BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_Template_tr_contextmenu_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const row_r13 = restoredCtx.$implicit;\n      const rowIndex_r14 = restoredCtx.index;\n      const ctx_r26 = i0.ɵɵnextContext(4);\n      return ctx_r26.onRowContextMenu($event, row_r13, \"\", null, rowIndex_r14);\n    })(\"dblclick\", function BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_Template_tr_dblclick_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const row_r13 = restoredCtx.$implicit;\n      const rowIndex_r14 = restoredCtx.index;\n      const ctx_r27 = i0.ɵɵnextContext(4);\n      return ctx_r27.onDoubleClick($event, row_r13, \"\", null, rowIndex_r14);\n    });\n    i0.ɵɵelementContainer(3, 10);\n    i0.ɵɵtemplate(4, BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_td_4_Template, 2, 1, \"td\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_tr_5_Template, 3, 6, \"tr\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const row_r13 = ctx.$implicit;\n    const rowIndex_r14 = ctx.index;\n    const ctx_r12 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"ngx-table__table-row--selected\", rowIndex_r14 === ctx_r12.selectedRow && !ctx_r12.config.selectCell);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r12.rowTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(6, _c10, row_r13, rowIndex_r14));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.config.detailsTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.config.detailsTemplate && ctx_r12.selectedDetailsTemplateRowId.has(rowIndex_r14) || ctx_r12.config.collapseAllRows);\n  }\n}\n\nconst _c11 = function (a0, a1, a2, a3) {\n  return {\n    itemsPerPage: a0,\n    currentPage: a1,\n    totalItems: a2,\n    id: a3\n  };\n};\n\nfunction BaseComponent_tbody_3_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_Template, 6, 9, \"ng-container\", 11);\n    i0.ɵɵpipe(2, \"paginate\");\n    i0.ɵɵpipe(3, \"global\");\n    i0.ɵɵpipe(4, \"search\");\n    i0.ɵɵpipe(5, \"sort\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(2, 1, i0.ɵɵpipeBind3(3, 4, i0.ɵɵpipeBind3(4, 8, i0.ɵɵpipeBind2(5, 12, ctx_r10.data, ctx_r10.sortBy), ctx_r10.term, ctx_r10.filteredCountSubject), ctx_r10.globalSearchTerm, ctx_r10.filteredCountSubject), i0.ɵɵpureFunction4(15, _c11, ctx_r10.limit, ctx_r10.page, ctx_r10.count, ctx_r10.id)));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_td_4_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵlistener(\"click\", function BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_td_4_span_1_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const rowIndex_r30 = i0.ɵɵnextContext(2).index;\n      const ctx_r35 = i0.ɵɵnextContext(4);\n      return ctx_r35.collapseRow(rowIndex_r30);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const rowIndex_r30 = i0.ɵɵnextContext(2).index;\n    const ctx_r34 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngClass\", ctx_r34.isRowCollapsed(rowIndex_r30) ? \"ngx-icon-arrow-down\" : \"ngx-icon-arrow-right\");\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_td_4_span_1_Template, 1, 1, \"span\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.arrowDefinition);\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵelementContainer(2, 10);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r39 = i0.ɵɵnextContext();\n    const row_r29 = ctx_r39.$implicit;\n    const rowIndex_r30 = ctx_r39.index;\n    const ctx_r33 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r33.columns.length + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r33.detailsTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(3, _c10, row_r29, rowIndex_r30));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r41 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\", 12, 13);\n    i0.ɵɵlistener(\"click\", function BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_Template_tr_click_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r41);\n      const row_r29 = restoredCtx.$implicit;\n      const rowIndex_r30 = restoredCtx.index;\n      const ctx_r40 = i0.ɵɵnextContext(4);\n      return ctx_r40.onClick($event, row_r29, \"\", null, rowIndex_r30);\n    })(\"contextmenu\", function BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_Template_tr_contextmenu_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r41);\n      const row_r29 = restoredCtx.$implicit;\n      const rowIndex_r30 = restoredCtx.index;\n      const ctx_r42 = i0.ɵɵnextContext(4);\n      return ctx_r42.onRowContextMenu($event, row_r29, \"\", null, rowIndex_r30);\n    })(\"dblclick\", function BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_Template_tr_dblclick_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r41);\n      const row_r29 = restoredCtx.$implicit;\n      const rowIndex_r30 = restoredCtx.index;\n      const ctx_r43 = i0.ɵɵnextContext(4);\n      return ctx_r43.onDoubleClick($event, row_r29, \"\", null, rowIndex_r30);\n    });\n    i0.ɵɵelementContainer(3, 10);\n    i0.ɵɵtemplate(4, BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_td_4_Template, 2, 1, \"td\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_tr_5_Template, 3, 6, \"tr\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const row_r29 = ctx.$implicit;\n    const rowIndex_r30 = ctx.index;\n    const ctx_r28 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"ngx-table__table-row--selected\", rowIndex_r30 === ctx_r28.selectedRow && !ctx_r28.config.selectCell);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r28.rowTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(6, _c10, row_r29, rowIndex_r30));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.config.detailsTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.config.detailsTemplate && ctx_r28.selectedDetailsTemplateRowId.has(rowIndex_r30) || ctx_r28.config.collapseAllRows);\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 16);\n    i0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_Template, 6, 9, \"ng-container\", 17);\n    i0.ɵɵpipe(2, \"global\");\n    i0.ɵɵpipe(3, \"search\");\n    i0.ɵɵpipe(4, \"sort\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cdkVirtualForOf\", i0.ɵɵpipeBind3(2, 1, i0.ɵɵpipeBind3(3, 5, i0.ɵɵpipeBind2(4, 9, ctx_r11.data, ctx_r11.sortBy), ctx_r11.term, ctx_r11.filteredCountSubject), ctx_r11.globalSearchTerm, ctx_r11.filteredCountSubject));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_1_ul_1_Template, 2, 8, \"ul\", 7);\n    i0.ɵɵtemplate(2, BaseComponent_tbody_3_ng_container_1_ng_container_2_Template, 6, 20, \"ng-container\", 3);\n    i0.ɵɵtemplate(3, BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_Template, 5, 12, \"cdk-virtual-scroll-viewport\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.rowContextMenuPosition.top);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.config.infiniteScroll);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.config.infiniteScroll);\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_ul_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 9);\n    i0.ɵɵelementContainer(1, 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r44 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(3, _c9, ctx_r44.rowContextMenuPosition.top, ctx_r44.rowContextMenuPosition.left));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r44.rowContextMenu)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c4, ctx_r44.rowContextMenuPosition.value));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r57 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"label\", 18)(2, \"input\", 19);\n    i0.ɵɵlistener(\"change\", function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_2_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r56 = i0.ɵɵnextContext();\n      const row_r48 = ctx_r56.$implicit;\n      const rowIndex_r49 = ctx_r56.index;\n      const ctx_r55 = i0.ɵɵnextContext(4);\n      return ctx_r55.onCheckboxSelect($event, row_r48, rowIndex_r49);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"em\", 20);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const rowIndex_r49 = i0.ɵɵnextContext().index;\n    const ctx_r50 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"checkbox-\", rowIndex_r49, \"\");\n    i0.ɵɵproperty(\"checked\", ctx_r50.isSelected || ctx_r50.selectedCheckboxes.has(rowIndex_r49));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r61 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"label\")(2, \"input\", 21);\n    i0.ɵɵlistener(\"change\", function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_3_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r60 = i0.ɵɵnextContext();\n      const row_r48 = ctx_r60.$implicit;\n      const rowIndex_r49 = ctx_r60.index;\n      const ctx_r59 = i0.ɵɵnextContext(4);\n      return ctx_r59.onRadioSelect($event, row_r48, rowIndex_r49);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const rowIndex_r49 = i0.ɵɵnextContext().index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"radio-\", rowIndex_r49, \"\");\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"render\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r63 = i0.ɵɵnextContext().$implicit;\n    const row_r48 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, row_r48, column_r63.key));\n  }\n}\n\nconst _c12 = function (a0, a1, a2) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    column: a2\n  };\n};\n\nfunction BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 10);\n  }\n\n  if (rf & 2) {\n    const column_r63 = i0.ɵɵnextContext().$implicit;\n    const ctx_r71 = i0.ɵɵnextContext();\n    const row_r48 = ctx_r71.$implicit;\n    const rowIndex_r49 = ctx_r71.index;\n    i0.ɵɵproperty(\"ngTemplateOutlet\", column_r63.cellTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(2, _c12, row_r48, rowIndex_r49, column_r63));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r74 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\", 22, 13);\n    i0.ɵɵlistener(\"click\", function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_Template_td_click_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r74);\n      const column_r63 = restoredCtx.$implicit;\n      const colIndex_r64 = restoredCtx.index;\n      const ctx_r73 = i0.ɵɵnextContext();\n      const row_r48 = ctx_r73.$implicit;\n      const rowIndex_r49 = ctx_r73.index;\n      const ctx_r72 = i0.ɵɵnextContext(4);\n      return ctx_r72.onClick($event, row_r48, column_r63.key, colIndex_r64, rowIndex_r49);\n    })(\"contextmenu\", function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_Template_td_contextmenu_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r74);\n      const column_r63 = restoredCtx.$implicit;\n      const colIndex_r64 = restoredCtx.index;\n      const ctx_r76 = i0.ɵɵnextContext();\n      const row_r48 = ctx_r76.$implicit;\n      const rowIndex_r49 = ctx_r76.index;\n      const ctx_r75 = i0.ɵɵnextContext(4);\n      return ctx_r75.onRowContextMenu($event, row_r48, column_r63.key, colIndex_r64, rowIndex_r49);\n    })(\"dblclick\", function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_Template_td_dblclick_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r74);\n      const column_r63 = restoredCtx.$implicit;\n      const colIndex_r64 = restoredCtx.index;\n      const ctx_r78 = i0.ɵɵnextContext();\n      const row_r48 = ctx_r78.$implicit;\n      const rowIndex_r49 = ctx_r78.index;\n      const ctx_r77 = i0.ɵɵnextContext(4);\n      return ctx_r77.onDoubleClick($event, row_r48, column_r63.key, colIndex_r64, rowIndex_r49);\n    });\n    i0.ɵɵtemplate(3, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_div_3_Template, 3, 4, \"div\", 3);\n    i0.ɵɵtemplate(4, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_ng_container_4_Template, 1, 6, \"ng-container\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r63 = ctx.$implicit;\n    const colIndex_r64 = ctx.index;\n    const rowIndex_r49 = i0.ɵɵnextContext().index;\n    const ctx_r52 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"left\", ctx_r52.styleService.pinnedWidth(column_r63.pinned, colIndex_r64));\n    i0.ɵɵclassProp(\"pinned-left\", column_r63.pinned)(\"ngx-table__table-col--selected\", colIndex_r64 === ctx_r52.selectedCol && !ctx_r52.config.selectCell)(\"ngx-table__table-cell--selected\", colIndex_r64 === ctx_r52.selectedCol && rowIndex_r49 === ctx_r52.selectedRow && !ctx_r52.config.selectCol && !ctx_r52.config.selectRow);\n    i0.ɵɵproperty(\"ngClass\", column_r63.cssClass ? column_r63.cssClass.name : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !column_r63.cellTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", column_r63.cellTemplate);\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_5_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r83 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵlistener(\"click\", function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_5_span_1_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r83);\n      const rowIndex_r49 = i0.ɵɵnextContext(2).index;\n      const ctx_r81 = i0.ɵɵnextContext(4);\n      return ctx_r81.collapseRow(rowIndex_r49);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const rowIndex_r49 = i0.ɵɵnextContext(2).index;\n    const ctx_r80 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngClass\", ctx_r80.isRowCollapsed(rowIndex_r49) ? \"ngx-icon-arrow-down\" : \"ngx-icon-arrow-right\");\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_5_span_1_Template, 1, 1, \"span\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r53 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r53.arrowDefinition);\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_tr_6_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_tr_6_td_1_Template, 1, 0, \"td\", 3);\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵelementContainer(3, 10);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r86 = i0.ɵɵnextContext();\n    const row_r48 = ctx_r86.$implicit;\n    const rowIndex_r49 = ctx_r86.index;\n    const ctx_r54 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r54.config.checkboxes || ctx_r54.config.radio);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r54.columns.length + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r54.detailsTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c10, row_r48, rowIndex_r49));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtemplate(2, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_2_Template, 4, 2, \"td\", 3);\n    i0.ɵɵtemplate(3, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_3_Template, 3, 1, \"td\", 3);\n    i0.ɵɵtemplate(4, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_Template, 5, 11, \"ng-container\", 11);\n    i0.ɵɵtemplate(5, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_5_Template, 2, 1, \"td\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_tr_6_Template, 4, 7, \"tr\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const rowIndex_r49 = ctx.index;\n    const ctx_r47 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"ngx-table__table-row--selected\", rowIndex_r49 === ctx_r47.selectedRow && !ctx_r47.config.selectCell);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r47.config.checkboxes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r47.config.radio);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r47.columns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r47.config.additionalActions || ctx_r47.config.detailsTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r47.config.detailsTemplate && ctx_r47.selectedDetailsTemplateRowId.has(rowIndex_r49) || ctx_r47.config.collapseAllRows);\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_Template, 7, 7, \"ng-container\", 11);\n    i0.ɵɵpipe(2, \"paginate\");\n    i0.ɵɵpipe(3, \"global\");\n    i0.ɵɵpipe(4, \"search\");\n    i0.ɵɵpipe(5, \"sort\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r45 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(2, 1, i0.ɵɵpipeBind3(3, 4, i0.ɵɵpipeBind3(4, 8, i0.ɵɵpipeBind2(5, 12, ctx_r45.data, ctx_r45.sortBy), ctx_r45.term, ctx_r45.filteredCountSubject), ctx_r45.globalSearchTerm, ctx_r45.filteredCountSubject), i0.ɵɵpureFunction4(15, _c11, ctx_r45.limit, ctx_r45.page, ctx_r45.count, ctx_r45.id)));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r97 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"label\", 18)(2, \"input\", 19);\n    i0.ɵɵlistener(\"change\", function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_2_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r97);\n      const ctx_r96 = i0.ɵɵnextContext();\n      const row_r88 = ctx_r96.$implicit;\n      const rowIndex_r89 = ctx_r96.index;\n      const ctx_r95 = i0.ɵɵnextContext(4);\n      return ctx_r95.onCheckboxSelect($event, row_r88, rowIndex_r89);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"em\", 20);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const rowIndex_r89 = i0.ɵɵnextContext().index;\n    const ctx_r90 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"checkbox-infinite-scroll-\", rowIndex_r89, \"\");\n    i0.ɵɵproperty(\"checked\", ctx_r90.isSelected || ctx_r90.selectedCheckboxes.has(rowIndex_r89));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r101 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"label\")(2, \"input\", 21);\n    i0.ɵɵlistener(\"change\", function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_3_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r101);\n      const ctx_r100 = i0.ɵɵnextContext();\n      const row_r88 = ctx_r100.$implicit;\n      const rowIndex_r89 = ctx_r100.index;\n      const ctx_r99 = i0.ɵɵnextContext(4);\n      return ctx_r99.onRadioSelect($event, row_r88, rowIndex_r89);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const rowIndex_r89 = i0.ɵɵnextContext().index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"radio-infinite-scroll-\", rowIndex_r89, \"\");\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"render\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r103 = i0.ɵɵnextContext().$implicit;\n    const row_r88 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, row_r88, column_r103.key));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 10);\n  }\n\n  if (rf & 2) {\n    const column_r103 = i0.ɵɵnextContext().$implicit;\n    const ctx_r111 = i0.ɵɵnextContext();\n    const row_r88 = ctx_r111.$implicit;\n    const rowIndex_r89 = ctx_r111.index;\n    i0.ɵɵproperty(\"ngTemplateOutlet\", column_r103.cellTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(2, _c12, row_r88, rowIndex_r89, column_r103));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r114 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\", 22, 13);\n    i0.ɵɵlistener(\"click\", function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_Template_td_click_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r114);\n      const column_r103 = restoredCtx.$implicit;\n      const colIndex_r104 = restoredCtx.index;\n      const ctx_r113 = i0.ɵɵnextContext();\n      const row_r88 = ctx_r113.$implicit;\n      const rowIndex_r89 = ctx_r113.index;\n      const ctx_r112 = i0.ɵɵnextContext(4);\n      return ctx_r112.onClick($event, row_r88, column_r103.key, colIndex_r104, rowIndex_r89);\n    })(\"contextmenu\", function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_Template_td_contextmenu_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r114);\n      const column_r103 = restoredCtx.$implicit;\n      const colIndex_r104 = restoredCtx.index;\n      const ctx_r116 = i0.ɵɵnextContext();\n      const row_r88 = ctx_r116.$implicit;\n      const rowIndex_r89 = ctx_r116.index;\n      const ctx_r115 = i0.ɵɵnextContext(4);\n      return ctx_r115.onRowContextMenu($event, row_r88, column_r103.key, colIndex_r104, rowIndex_r89);\n    })(\"dblclick\", function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_Template_td_dblclick_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r114);\n      const column_r103 = restoredCtx.$implicit;\n      const colIndex_r104 = restoredCtx.index;\n      const ctx_r118 = i0.ɵɵnextContext();\n      const row_r88 = ctx_r118.$implicit;\n      const rowIndex_r89 = ctx_r118.index;\n      const ctx_r117 = i0.ɵɵnextContext(4);\n      return ctx_r117.onDoubleClick($event, row_r88, column_r103.key, colIndex_r104, rowIndex_r89);\n    });\n    i0.ɵɵtemplate(3, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_div_3_Template, 3, 4, \"div\", 3);\n    i0.ɵɵtemplate(4, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_ng_container_4_Template, 1, 6, \"ng-container\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r103 = ctx.$implicit;\n    const colIndex_r104 = ctx.index;\n    const rowIndex_r89 = i0.ɵɵnextContext().index;\n    const ctx_r92 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"left\", ctx_r92.styleService.pinnedWidth(column_r103.pinned, colIndex_r104));\n    i0.ɵɵclassProp(\"pinned-left\", column_r103.pinned)(\"ngx-table__table-col--selected\", colIndex_r104 === ctx_r92.selectedCol && !ctx_r92.config.selectCell)(\"ngx-table__table-cell--selected\", colIndex_r104 === ctx_r92.selectedCol && rowIndex_r89 === ctx_r92.selectedRow && !ctx_r92.config.selectCol && !ctx_r92.config.selectRow);\n    i0.ɵɵproperty(\"ngClass\", column_r103.cssClass ? column_r103.cssClass.name : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !column_r103.cellTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", column_r103.cellTemplate);\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_5_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r123 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵlistener(\"click\", function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_5_span_1_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r123);\n      const rowIndex_r89 = i0.ɵɵnextContext(2).index;\n      const ctx_r121 = i0.ɵɵnextContext(4);\n      return ctx_r121.collapseRow(rowIndex_r89);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const rowIndex_r89 = i0.ɵɵnextContext(2).index;\n    const ctx_r120 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngClass\", ctx_r120.isRowCollapsed(rowIndex_r89) ? \"ngx-icon-arrow-down\" : \"ngx-icon-arrow-right\");\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_5_span_1_Template, 1, 1, \"span\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r93 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r93.arrowDefinition);\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_tr_6_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_tr_6_td_1_Template, 1, 0, \"td\", 3);\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵelementContainer(3, 10);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r126 = i0.ɵɵnextContext();\n    const row_r88 = ctx_r126.$implicit;\n    const rowIndex_r89 = ctx_r126.index;\n    const ctx_r94 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r94.config.checkboxes || ctx_r94.config.radio);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r94.columns.length + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r94.detailsTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c10, row_r88, rowIndex_r89));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtemplate(2, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_2_Template, 4, 2, \"td\", 3);\n    i0.ɵɵtemplate(3, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_3_Template, 3, 1, \"td\", 3);\n    i0.ɵɵtemplate(4, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_Template, 5, 11, \"ng-container\", 11);\n    i0.ɵɵtemplate(5, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_5_Template, 2, 1, \"td\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_tr_6_Template, 4, 7, \"tr\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const rowIndex_r89 = ctx.index;\n    const ctx_r87 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"ngx-table__table-row--selected\", rowIndex_r89 === ctx_r87.selectedRow && !ctx_r87.config.selectCell);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r87.config.checkboxes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r87.config.radio);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r87.columns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r87.config.additionalActions || ctx_r87.config.detailsTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r87.config.detailsTemplate && ctx_r87.selectedDetailsTemplateRowId.has(rowIndex_r89) || ctx_r87.config.collapseAllRows);\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 16);\n    i0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_Template, 7, 7, \"ng-container\", 17);\n    i0.ɵɵpipe(2, \"global\");\n    i0.ɵɵpipe(3, \"search\");\n    i0.ɵɵpipe(4, \"sort\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cdkVirtualForOf\", i0.ɵɵpipeBind3(2, 1, i0.ɵɵpipeBind3(3, 5, i0.ɵɵpipeBind2(4, 9, ctx_r46.data, ctx_r46.sortBy), ctx_r46.term, ctx_r46.filteredCountSubject), ctx_r46.globalSearchTerm, ctx_r46.filteredCountSubject));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_2_ul_1_Template, 2, 8, \"ul\", 7);\n    i0.ɵɵtemplate(2, BaseComponent_tbody_3_ng_container_2_ng_container_2_Template, 6, 20, \"ng-container\", 3);\n    i0.ɵɵtemplate(3, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_Template, 5, 12, \"cdk-virtual-scroll-viewport\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.rowContextMenuPosition.top);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.config.infiniteScroll);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.config.infiniteScroll);\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\")(2, \"div\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const group_r128 = i0.ɵɵnextContext().$implicit;\n    const ctx_r130 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r130.columns.length);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", group_r128[0][ctx_r130.groupRowsBy], \" (\", group_r128.length, \")\");\n  }\n}\n\nconst _c13 = function (a0, a1, a2, a3, a4) {\n  return {\n    total: a0,\n    key: a1,\n    value: a2,\n    group: a3,\n    index: a4\n  };\n};\n\nfunction BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r135 = i0.ɵɵnextContext();\n    const group_r128 = ctx_r135.$implicit;\n    const rowIndex_r129 = ctx_r135.index;\n    const ctx_r131 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r131.groupRowsHeaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(2, _c13, group_r128.length, ctx_r131.groupRowsBy, group_r128[0] ? group_r128[0][ctx_r131.groupRowsBy] : \"\", group_r128, rowIndex_r129));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_3_ng_container_1_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r138 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵlistener(\"click\", function BaseComponent_tbody_3_ng_container_3_ng_container_1_span_5_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r138);\n      const rowIndex_r129 = i0.ɵɵnextContext().index;\n      const ctx_r136 = i0.ɵɵnextContext(3);\n      return ctx_r136.collapseRow(rowIndex_r129);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const rowIndex_r129 = i0.ɵɵnextContext().index;\n    const ctx_r132 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r132.isRowCollapsed(rowIndex_r129) ? \"ngx-icon-arrow-down\" : \"ngx-icon-arrow-right\");\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_6_tr_1_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"render\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r143 = ctx.$implicit;\n    const row_r141 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, row_r141, column_r143.key), \" \");\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_6_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_6_tr_1_td_1_Template, 3, 4, \"td\", 11);\n    i0.ɵɵelement(2, \"td\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r140 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r140.columns);\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_6_tr_1_Template, 3, 1, \"tr\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const group_r128 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", group_r128);\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtemplate(2, BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_2_Template, 4, 3, \"ng-container\", 3);\n    i0.ɵɵtemplate(3, BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_3_Template, 1, 8, \"ng-container\", 23);\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtemplate(5, BaseComponent_tbody_3_ng_container_3_ng_container_1_span_5_Template, 1, 1, \"span\", 14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_6_Template, 2, 1, \"ng-container\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const rowIndex_r129 = ctx.index;\n    const ctx_r127 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r127.groupRowsHeaderTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r127.groupRowsHeaderTemplate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r127.arrowDefinition);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r127.selectedDetailsTemplateRowId.has(rowIndex_r129));\n  }\n}\n\nfunction BaseComponent_tbody_3_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_3_ng_container_1_Template, 7, 4, \"ng-container\", 11);\n    i0.ɵɵpipe(2, \"paginate\");\n    i0.ɵɵpipe(3, \"global\");\n    i0.ɵɵpipe(4, \"search\");\n    i0.ɵɵpipe(5, \"sort\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(2, 1, i0.ɵɵpipeBind3(3, 4, i0.ɵɵpipeBind4(4, 8, i0.ɵɵpipeBind3(5, 13, ctx_r8.grouped, ctx_r8.sortBy, ctx_r8.config), ctx_r8.term, ctx_r8.filteredCountSubject, ctx_r8.config), ctx_r8.globalSearchTerm, ctx_r8.filteredCountSubject), i0.ɵɵpureFunction4(17, _c11, ctx_r8.limit, ctx_r8.page, ctx_r8.count, ctx_r8.id)));\n  }\n}\n\nfunction BaseComponent_tbody_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_1_Template, 4, 3, \"ng-container\", 3);\n    i0.ɵɵtemplate(2, BaseComponent_tbody_3_ng_container_2_Template, 4, 3, \"ng-container\", 3);\n    i0.ɵɵtemplate(3, BaseComponent_tbody_3_ng_container_3_Template, 6, 22, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.rowTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.rowTemplate && !ctx_r0.config.groupRows);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.rowTemplate && ctx_r0.config.groupRows);\n  }\n}\n\nfunction BaseComponent_tbody_4_ng_container_1_ng_container_1_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r155 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"label\", 18)(2, \"input\", 19);\n    i0.ɵɵlistener(\"change\", function BaseComponent_tbody_4_ng_container_1_ng_container_1_td_2_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r155);\n      const ctx_r154 = i0.ɵɵnextContext();\n      const row_r148 = ctx_r154.$implicit;\n      const rowIndex_r149 = ctx_r154.index;\n      const ctx_r153 = i0.ɵɵnextContext(3);\n      return ctx_r153.onCheckboxSelect($event, row_r148, rowIndex_r149);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"em\", 20);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const rowIndex_r149 = i0.ɵɵnextContext().index;\n    const ctx_r150 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"checkbox-draggable-\", rowIndex_r149, \"\");\n    i0.ɵɵproperty(\"checked\", ctx_r150.isSelected || ctx_r150.selectedCheckboxes.has(rowIndex_r149));\n  }\n}\n\nfunction BaseComponent_tbody_4_ng_container_1_ng_container_1_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r159 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"label\")(2, \"input\", 21);\n    i0.ɵɵlistener(\"change\", function BaseComponent_tbody_4_ng_container_1_ng_container_1_td_3_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r159);\n      const ctx_r158 = i0.ɵɵnextContext();\n      const row_r148 = ctx_r158.$implicit;\n      const rowIndex_r149 = ctx_r158.index;\n      const ctx_r157 = i0.ɵɵnextContext(3);\n      return ctx_r157.onRadioSelect($event, row_r148, rowIndex_r149);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const rowIndex_r149 = i0.ɵɵnextContext().index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"radio-draggable-\", rowIndex_r149, \"\");\n  }\n}\n\nfunction BaseComponent_tbody_4_ng_container_1_ng_container_1_ng_container_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"render\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r161 = i0.ɵɵnextContext().$implicit;\n    const row_r148 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, row_r148, column_r161.key));\n  }\n}\n\nfunction BaseComponent_tbody_4_ng_container_1_ng_container_1_ng_container_4_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 10);\n  }\n\n  if (rf & 2) {\n    const column_r161 = i0.ɵɵnextContext().$implicit;\n    const ctx_r168 = i0.ɵɵnextContext();\n    const row_r148 = ctx_r168.$implicit;\n    const rowIndex_r149 = ctx_r168.index;\n    i0.ɵɵproperty(\"ngTemplateOutlet\", column_r161.cellTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(2, _c12, row_r148, rowIndex_r149, column_r161));\n  }\n}\n\nfunction BaseComponent_tbody_4_ng_container_1_ng_container_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r171 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\", 26);\n    i0.ɵɵlistener(\"click\", function BaseComponent_tbody_4_ng_container_1_ng_container_1_ng_container_4_Template_td_click_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r171);\n      const column_r161 = restoredCtx.$implicit;\n      const colIndex_r162 = restoredCtx.index;\n      const ctx_r170 = i0.ɵɵnextContext();\n      const row_r148 = ctx_r170.$implicit;\n      const rowIndex_r149 = ctx_r170.index;\n      const ctx_r169 = i0.ɵɵnextContext(3);\n      return ctx_r169.onClick($event, row_r148, column_r161.key, colIndex_r162, rowIndex_r149);\n    })(\"dblclick\", function BaseComponent_tbody_4_ng_container_1_ng_container_1_ng_container_4_Template_td_dblclick_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r171);\n      const column_r161 = restoredCtx.$implicit;\n      const colIndex_r162 = restoredCtx.index;\n      const ctx_r173 = i0.ɵɵnextContext();\n      const row_r148 = ctx_r173.$implicit;\n      const rowIndex_r149 = ctx_r173.index;\n      const ctx_r172 = i0.ɵɵnextContext(3);\n      return ctx_r172.onDoubleClick($event, row_r148, column_r161.key, colIndex_r162, rowIndex_r149);\n    });\n    i0.ɵɵtemplate(2, BaseComponent_tbody_4_ng_container_1_ng_container_1_ng_container_4_div_2_Template, 3, 4, \"div\", 3);\n    i0.ɵɵtemplate(3, BaseComponent_tbody_4_ng_container_1_ng_container_1_ng_container_4_ng_container_3_Template, 1, 6, \"ng-container\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r161 = ctx.$implicit;\n    const colIndex_r162 = ctx.index;\n    const rowIndex_r149 = i0.ɵɵnextContext().index;\n    const ctx_r152 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"ngx-table__table-col--selected\", colIndex_r162 === ctx_r152.selectedCol && !ctx_r152.config.selectCell)(\"ngx-table__table-cell--selected\", colIndex_r162 === ctx_r152.selectedCol && rowIndex_r149 === ctx_r152.selectedRow && !ctx_r152.config.selectCol && !ctx_r152.config.selectRow);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !column_r161.cellTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", column_r161.cellTemplate);\n  }\n}\n\nfunction BaseComponent_tbody_4_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r176 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\", 25);\n    i0.ɵɵlistener(\"cdkDragStarted\", function BaseComponent_tbody_4_ng_container_1_ng_container_1_Template_tr_cdkDragStarted_1_listener($event) {\n      i0.ɵɵrestoreView(_r176);\n      const ctx_r175 = i0.ɵɵnextContext(3);\n      return ctx_r175.onDragStart($event);\n    });\n    i0.ɵɵtemplate(2, BaseComponent_tbody_4_ng_container_1_ng_container_1_td_2_Template, 4, 2, \"td\", 3);\n    i0.ɵɵtemplate(3, BaseComponent_tbody_4_ng_container_1_ng_container_1_td_3_Template, 3, 1, \"td\", 3);\n    i0.ɵɵtemplate(4, BaseComponent_tbody_4_ng_container_1_ng_container_1_ng_container_4_Template, 4, 6, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r147 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cdkDragStartDelay\", ctx_r147.config.reorderDelay || 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r147.config.checkboxes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r147.config.radio);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r147.columns);\n  }\n}\n\nfunction BaseComponent_tbody_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BaseComponent_tbody_4_ng_container_1_ng_container_1_Template, 5, 4, \"ng-container\", 11);\n    i0.ɵɵpipe(2, \"paginate\");\n    i0.ɵɵpipe(3, \"global\");\n    i0.ɵɵpipe(4, \"search\");\n    i0.ɵɵpipe(5, \"sort\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r146 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(2, 1, i0.ɵɵpipeBind3(3, 4, i0.ɵɵpipeBind3(4, 8, i0.ɵɵpipeBind2(5, 12, ctx_r146.data, ctx_r146.sortBy), ctx_r146.term, ctx_r146.filteredCountSubject), ctx_r146.globalSearchTerm, ctx_r146.filteredCountSubject), i0.ɵɵpureFunction4(15, _c11, ctx_r146.limit, ctx_r146.page, ctx_r146.count, ctx_r146.id)));\n  }\n}\n\nfunction BaseComponent_tbody_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r178 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tbody\", 24);\n    i0.ɵɵlistener(\"cdkDropListDropped\", function BaseComponent_tbody_4_Template_tbody_cdkDropListDropped_0_listener($event) {\n      i0.ɵɵrestoreView(_r178);\n      const ctx_r177 = i0.ɵɵnextContext();\n      return ctx_r177.onDrop($event);\n    });\n    i0.ɵɵtemplate(1, BaseComponent_tbody_4_ng_container_1_Template, 6, 20, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.rowTemplate && !ctx_r1.config.groupRows);\n  }\n}\n\nfunction BaseComponent_tbody_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 29);\n  }\n\n  if (rf & 2) {\n    const ctx_r179 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r179.noResultsTemplate);\n  }\n}\n\nfunction BaseComponent_tbody_5_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\")(1, \"div\", 30);\n    i0.ɵɵtext(2, \"No results\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r180 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"colspan\", ctx_r180.columns && ctx_r180.columns.length + 1);\n  }\n}\n\nfunction BaseComponent_tbody_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\", 27);\n    i0.ɵɵtemplate(2, BaseComponent_tbody_5_ng_container_2_Template, 1, 1, \"ng-container\", 28);\n    i0.ɵɵtemplate(3, BaseComponent_tbody_5_td_3_Template, 3, 1, \"td\", 3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.noResultsTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.noResultsTemplate);\n  }\n}\n\nfunction BaseComponent_tbody_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 29);\n  }\n\n  if (rf & 2) {\n    const ctx_r181 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r181.loadingTemplate);\n  }\n}\n\nfunction BaseComponent_tbody_6_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\")(1, \"div\", 32);\n    i0.ɵɵelement(2, \"div\", 33);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r182 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"colspan\", ctx_r182.columns && ctx_r182.columns.length + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"height\", ctx_r182.loadingHeight, \"px\");\n  }\n}\n\nfunction BaseComponent_tbody_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\", 31);\n    i0.ɵɵtemplate(2, BaseComponent_tbody_6_ng_container_2_Template, 1, 1, \"ng-container\", 28);\n    i0.ɵɵtemplate(3, BaseComponent_tbody_6_td_3_Template, 3, 3, \"td\", 3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.loadingTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.loadingTemplate);\n  }\n}\n\nconst _c14 = function (a0, a1, a2) {\n  return {\n    total: a0,\n    limit: a1,\n    page: a2\n  };\n};\n\nfunction BaseComponent_tfoot_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tfoot\")(1, \"tr\");\n    i0.ɵɵelementContainer(2, 10);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.summaryTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(2, _c14, ctx_r4.data.length, ctx_r4.limit, ctx_r4.page));\n  }\n}\n\nvar STYLE;\n\n(function (STYLE) {\n  STYLE[\"TINY\"] = \"tiny\";\n  STYLE[\"BIG\"] = \"big\";\n  STYLE[\"NORMAL\"] = \"normal\";\n})(STYLE || (STYLE = {}));\n\nvar THEME;\n\n(function (THEME) {\n  THEME[\"LIGHT\"] = \"light\";\n  THEME[\"DARK\"] = \"dark\";\n})(THEME || (THEME = {}));\n\nvar Event;\n\n(function (Event) {\n  Event[\"onPagination\"] = \"onPagination\";\n  Event[\"onOrder\"] = \"onOrder\";\n  Event[\"onGlobalSearch\"] = \"onGlobalSearch\";\n  Event[\"onSearch\"] = \"onSearch\";\n  Event[\"onClick\"] = \"onClick\";\n  Event[\"onDoubleClick\"] = \"onDoubleClick\";\n  Event[\"onCheckboxSelect\"] = \"onCheckboxSelect\";\n  Event[\"onRadioSelect\"] = \"onRadioSelect\";\n  Event[\"onCheckboxToggle\"] = \"onCheckboxToggle\";\n  Event[\"onSelectAll\"] = \"onSelectAll\";\n  Event[\"onInfiniteScrollEnd\"] = \"onInfiniteScrollEnd\";\n  Event[\"onColumnResizeMouseDown\"] = \"onColumnResizeMouseDown\";\n  Event[\"onColumnResizeMouseUp\"] = \"onColumnResizeMouseUp\";\n  Event[\"onRowDrop\"] = \"onRowDrop\";\n  Event[\"onReorderStart\"] = \"onReorderStart\";\n  Event[\"onRowCollapsedShow\"] = \"onRowCollapsedShow\";\n  Event[\"onRowCollapsedHide\"] = \"onRowCollapsedHide\";\n  Event[\"onRowContextMenu\"] = \"onRowContextMenu\";\n})(Event || (Event = {}));\n\nvar API;\n\n(function (API) {\n  API[\"rowContextMenuClicked\"] = \"rowContextMenuClicked\";\n  API[\"setInputValue\"] = \"setInputValue\";\n  API[\"toolPanelClicked\"] = \"toolPanelClicked\";\n  API[\"toggleRowIndex\"] = \"toggleRowIndex\";\n  API[\"toggleCheckbox\"] = \"toggleCheckbox\";\n  API[\"onGlobalSearch\"] = \"onGlobalSearch\";\n  API[\"setPaginationCurrentPage\"] = \"setPaginationCurrentPage\";\n  API[\"getPaginationCurrentPage\"] = \"getPaginationCurrentPage\";\n  API[\"getPaginationTotalItems\"] = \"getPaginationTotalItems\";\n  API[\"getNumberOfRowsPerPage\"] = \"getNumberOfRowsPerPage\";\n  API[\"getPaginationLastPage\"] = \"getPaginationLastPage\";\n  API[\"setPaginationRange\"] = \"setPaginationRange\";\n  API[\"setPaginationPreviousLabel\"] = \"setPaginationPreviousLabel\";\n  API[\"setPaginationNextLabel\"] = \"setPaginationNextLabel\";\n  API[\"setPaginationDisplayLimit\"] = \"setPaginationDisplayLimit\";\n  API[\"setTableClass\"] = \"setTableClass\";\n  API[\"setRowClass\"] = \"setRowClass\";\n  API[\"setCellClass\"] = \"setCellClass\";\n  API[\"setRowStyle\"] = \"setRowStyle\";\n  API[\"setCellStyle\"] = \"setCellStyle\";\n  API[\"sortBy\"] = \"sortBy\";\n})(API || (API = {})); // eslint-disable-next-line @typescript-eslint/naming-convention, no-underscore-dangle, id-blacklist, id-match\n\n\nconst DefaultConfig = {\n  searchEnabled: false,\n  headerEnabled: true,\n  orderEnabled: true,\n  orderEventOnly: false,\n  paginationEnabled: true,\n  exportEnabled: false,\n  clickEvent: true,\n  selectRow: false,\n  selectCol: false,\n  selectCell: false,\n  rows: 10,\n  additionalActions: false,\n  serverPagination: false,\n  isLoading: false,\n  detailsTemplate: false,\n  groupRows: false,\n  paginationRangeEnabled: true,\n  collapseAllRows: false,\n  checkboxes: false,\n  radio: false,\n  resizeColumn: false,\n  fixedColumnWidth: true,\n  horizontalScroll: false,\n  draggable: false,\n  logger: false,\n  showDetailsArrow: false,\n  showContextMenu: false,\n  persistState: false,\n  paginationMaxSize: 5,\n  threeWaySort: false,\n  tableLayout: {\n    style: STYLE.NORMAL,\n    theme: THEME.LIGHT,\n    borderless: false,\n    hover: true,\n    striped: false\n  }\n};\n\nclass DefaultConfigService {}\n\nDefaultConfigService.config = DefaultConfig;\n\nDefaultConfigService.ɵfac = function DefaultConfigService_Factory(t) {\n  return new (t || DefaultConfigService)();\n};\n\nDefaultConfigService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DefaultConfigService,\n  factory: DefaultConfigService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultConfigService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass GroupRowsService {\n  static doGroupRows(data, groupRowsBy) {\n    const grouped = [];\n    from(data).pipe(groupBy(row => row[groupRowsBy]), mergeMap(group => group.pipe(reduce((acc, curr) => [...acc, curr], [])))).subscribe(row => grouped.push(row));\n    return grouped;\n  }\n\n}\n\nGroupRowsService.ɵfac = function GroupRowsService_Factory(t) {\n  return new (t || GroupRowsService)();\n};\n\nGroupRowsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GroupRowsService,\n  factory: GroupRowsService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupRowsService, [{\n    type: Injectable\n  }], null, null);\n})();\n/* eslint-disable */\n\n\nclass StyleService {\n  setRowClass(val) {\n    const selector = `#table > tbody > tr:nth-child(${val.row})`;\n    const row = document.querySelector(selector);\n\n    if (row) {\n      row.classList.add(val.className);\n    }\n  }\n\n  setCellClass(val) {\n    const selector = `#table > tbody > tr:nth-child(${val.row}) > td:nth-child(${val.cell})`;\n    const cell = document.querySelector(selector);\n\n    if (cell) {\n      cell.classList.add(val.className);\n    }\n  }\n\n  setRowStyle(val) {\n    const selector = `#table > tbody > tr:nth-child(${val.row})`;\n    const row = document.querySelector(selector);\n\n    if (row) {\n      // eslint-disable-next-line @typescript-eslint/dot-notation\n      row.style[val.attr] = val.value;\n    }\n  }\n\n  setCellStyle(val) {\n    const selector = `#table > tbody > tr:nth-child(${val.row}) > td:nth-child(${val.cell})`;\n    const cell = document.querySelector(selector);\n\n    if (cell) {\n      // eslint-disable-next-line @typescript-eslint/dot-notation\n      cell.style[val.attr] = val.value;\n    }\n  }\n\n  pinnedWidth(pinned, column) {\n    if (pinned) {\n      return 150 * column + 'px';\n    }\n  }\n\n}\n\nStyleService.ɵfac = function StyleService_Factory(t) {\n  return new (t || StyleService)();\n};\n\nStyleService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StyleService,\n  factory: StyleService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StyleService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass HeaderComponent {\n  constructor() {\n    this.update = new EventEmitter();\n  }\n\n  unifyKey(key) {\n    return key.replace('.', '_');\n  }\n\n  onSearch(input) {\n    this.update.emit([{\n      value: input.value,\n      key: this.column.key\n    }]);\n  }\n\n}\n\nHeaderComponent.ɵfac = function HeaderComponent_Factory(t) {\n  return new (t || HeaderComponent)();\n};\n\nHeaderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeaderComponent,\n  selectors: [[\"table-header\"]],\n  inputs: {\n    column: \"column\"\n  },\n  outputs: {\n    update: \"update\"\n  },\n  decls: 3,\n  vars: 3,\n  consts: [[3, \"for\"], [\"type\", \"text\", \"aria-label\", \"Search\", 1, \"ngx-table__header-search\", 3, \"id\", \"placeholder\", \"input\"], [\"input\", \"\"]],\n  template: function HeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"label\", 0)(1, \"input\", 1, 2);\n      i0.ɵɵlistener(\"input\", function HeaderComponent_Template_input_input_1_listener() {\n        i0.ɵɵrestoreView(_r1);\n\n        const _r0 = i0.ɵɵreference(2);\n\n        return ctx.onSearch(_r0);\n      });\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵpropertyInterpolate1(\"for\", \"search_\", ctx.unifyKey(ctx.column.key), \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate1(\"id\", \"search_\", ctx.unifyKey(ctx.column.key), \"\");\n      i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.column.placeholder ? ctx.column.placeholder : ctx.column.title);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeaderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'table-header',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<label for=\\\"search_{{ unifyKey(column.key) }}\\\">\\n  <input\\n    type=\\\"text\\\"\\n    id=\\\"search_{{ unifyKey(column.key) }}\\\"\\n    aria-label=\\\"Search\\\"\\n    placeholder=\\\"{{ column.placeholder ? column.placeholder : column.title }}\\\"\\n    class=\\\"ngx-table__header-search\\\"\\n    #input\\n    (input)=\\\"onSearch(input)\\\"\\n  />\\n</label>\\n\"\n    }]\n  }], null, {\n    column: [{\n      type: Input\n    }],\n    update: [{\n      type: Output\n    }]\n  });\n})();\n\nclass TableTHeadComponent {\n  constructor(styleService) {\n    this.styleService = styleService;\n    this.menuActive = false;\n    this.openedHeaderActionTemplate = null;\n    this.onSelectAllBinded = this.onSelectAll.bind(this);\n    this.filter = new EventEmitter();\n    this.order = new EventEmitter();\n    this.selectAll = new EventEmitter();\n    this.event = new EventEmitter();\n  }\n\n  onClick(targetElement) {\n    if (this.additionalActionMenu && !this.additionalActionMenu.nativeElement.contains(targetElement)) {\n      this.menuActive = false;\n    } // if click outside the header then close opened Header Action Template\n\n\n    if (this.openedHeaderActionTemplate && // if no header have the clicked point\n    !this.headerDropdown.toArray().some(ref => ref.nativeElement.contains(targetElement))) {\n      this.openedHeaderActionTemplate = null;\n    }\n  }\n\n  getColumnDefinition(column) {\n    return column.searchEnabled || typeof column.searchEnabled === 'undefined';\n  }\n\n  orderBy(column) {\n    this.order.emit(column);\n  }\n\n  isOrderEnabled(column) {\n    const columnOrderEnabled = column.orderEnabled === undefined ? true : !!column.orderEnabled;\n    return this.config.orderEnabled && columnOrderEnabled;\n  }\n\n  columnDrop(event) {\n    moveItemInArray(this.columns, event.previousIndex, event.currentIndex);\n  }\n\n  onSearch($event) {\n    this.filter.emit($event);\n  }\n\n  getColumnWidth(column) {\n    if (column.width) {\n      return column.width;\n    }\n\n    return this.config.fixedColumnWidth ? 100 / this.columns.length + '%' : null;\n  }\n\n  onSelectAll() {\n    this.selectAll.emit();\n  }\n\n  onMouseDown(event, th) {\n    if (!this.config.resizeColumn) {\n      return;\n    }\n\n    this.th = th;\n    this.startOffset = th.offsetWidth - event.pageX;\n    this.event.emit({\n      event: Event.onColumnResizeMouseDown,\n      value: event\n    });\n  }\n\n  onMouseMove(event) {\n    if (!this.config.resizeColumn) {\n      return;\n    }\n\n    if (this.th && this.th.style) {\n      this.th.style.width = this.startOffset + event.pageX + 'px';\n      this.th.style.cursor = 'col-resize';\n      this.th.style['user-select'] = 'none';\n    }\n  }\n\n  onMouseUp(event) {\n    if (!this.config.resizeColumn) {\n      return;\n    }\n\n    this.event.emit({\n      event: Event.onColumnResizeMouseUp,\n      value: event\n    });\n    this.th.style.cursor = 'default';\n    this.th = undefined;\n  }\n\n  showHeaderActionTemplateMenu(column) {\n    if (!column.headerActionTemplate) {\n      console.error('Column [headerActionTemplate] property not defined');\n    }\n\n    if (this.openedHeaderActionTemplate === column.key) {\n      this.openedHeaderActionTemplate = null;\n      return;\n    }\n\n    this.openedHeaderActionTemplate = column.key;\n  }\n\n  showMenu() {\n    if (!this.additionalActionsTemplate) {\n      console.error('[additionalActionsTemplate] property not defined');\n    }\n\n    this.menuActive = !this.menuActive;\n  }\n\n}\n\nTableTHeadComponent.ɵfac = function TableTHeadComponent_Factory(t) {\n  return new (t || TableTHeadComponent)(i0.ɵɵdirectiveInject(StyleService));\n};\n\nTableTHeadComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TableTHeadComponent,\n  selectors: [[\"\", \"table-thead\", \"\"]],\n  viewQuery: function TableTHeadComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.th = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.additionalActionMenu = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerDropdown = _t);\n    }\n  },\n  hostBindings: function TableTHeadComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function TableTHeadComponent_click_HostBindingHandler($event) {\n        return ctx.onClick($event.target);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  inputs: {\n    config: \"config\",\n    columns: \"columns\",\n    sortKey: \"sortKey\",\n    sortState: \"sortState\",\n    selectAllTemplate: \"selectAllTemplate\",\n    filtersTemplate: \"filtersTemplate\",\n    additionalActionsTemplate: \"additionalActionsTemplate\"\n  },\n  outputs: {\n    filter: \"filter\",\n    order: \"order\",\n    selectAll: \"selectAll\",\n    event: \"event\"\n  },\n  features: [i0.ɵɵProvidersFeature([StyleService])],\n  attrs: _c3,\n  decls: 4,\n  vars: 4,\n  consts: [[\"class\", \"ngx-table__header\", 4, \"ngIf\"], [\"class\", \"ngx-table__header ngx-table__header--draggable\", \"cdkDropList\", \"\", \"cdkDropListOrientation\", \"horizontal\", 3, \"cdkDropListDropped\", 4, \"ngIf\"], [\"class\", \"ngx-table__sort-header\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"ngx-table__header\"], [3, \"width\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"ngx-table__header-cell-additional-actions\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [\"class\", \"ngx-form-checkbox\", \"for\", \"selectAllCheckboxes\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"for\", \"selectAllCheckboxes\", 1, \"ngx-form-checkbox\"], [\"type\", \"checkbox\", \"id\", \"selectAllCheckboxes\", 3, \"change\"], [\"id\", \"selectAllCheckbox\", 1, \"ngx-form-icon\"], [1, \"ngx-table__header-cell\", 3, \"ngClass\", \"mousedown\", \"mouseup\", \"mousemove\"], [\"th\", \"\"], [2, \"display\", \"inline\", 3, \"click\"], [1, \"ngx-table__header-title\"], [\"class\", \"ngx-icon ngx-icon-pin\", 4, \"ngIf\"], [\"class\", \"ngx-icon ngx-icon-arrow-up\", 4, \"ngIf\"], [\"class\", \"ngx-icon ngx-icon-arrow-down\", 4, \"ngIf\"], [\"class\", \"ngx-dropdown\", 4, \"ngIf\"], [\"class\", \"ngx-table__column-resizer\", 4, \"ngIf\"], [1, \"ngx-icon\", \"ngx-icon-pin\"], [1, \"ngx-icon\", \"ngx-icon-arrow-up\"], [1, \"ngx-icon\", \"ngx-icon-arrow-down\"], [1, \"ngx-dropdown\"], [\"headerDropdown\", \"\"], [1, \"ngx-btn\", \"ngx-btn-link\", 3, \"click\"], [1, \"ngx-icon\", \"ngx-icon-more\"], [\"class\", \"ngx-menu ngx-table__table-menu\", 4, \"ngIf\"], [1, \"ngx-menu\", \"ngx-table__table-menu\"], [3, \"ngTemplateOutlet\"], [1, \"ngx-table__column-resizer\"], [1, \"ngx-table__header-cell-additional-actions\"], [\"additionalActionMenu\", \"\"], [1, \"ngx-icon\", \"ngx-icon-menu\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [\"cdkDropList\", \"\", \"cdkDropListOrientation\", \"horizontal\", 1, \"ngx-table__header\", \"ngx-table__header--draggable\", 3, \"cdkDropListDropped\"], [\"type\", \"checkbox\", \"id\", \"selectAllCheckboxesDrag\", 3, \"change\"], [\"id\", \"selectAllCheckboxDrag\", 1, \"ngx-form-icon\"], [\"cdkDragLockAxis\", \"x\", \"cdkDrag\", \"\", 1, \"ngx-table__header-cell\", \"ngx-table__header-cell--draggable\", 3, \"cdkDragStartDelay\", \"ngClass\", \"mousedown\", \"mouseup\", \"mousemove\"], [\"cdkDragHandle\", \"\", 2, \"display\", \"inline\", 3, \"click\"], [1, \"ngx-table__sort-header\"], [3, \"ngClass\"], [3, \"column\", \"update\", 4, \"ngIf\"], [3, \"column\", \"update\"]],\n  template: function TableTHeadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TableTHeadComponent_tr_0_Template, 4, 3, \"tr\", 0);\n      i0.ɵɵtemplate(1, TableTHeadComponent_tr_1_Template, 4, 3, \"tr\", 1);\n      i0.ɵɵtemplate(2, TableTHeadComponent_tr_2_Template, 4, 3, \"tr\", 2);\n      i0.ɵɵtemplate(3, TableTHeadComponent_ng_container_3_Template, 3, 1, \"ng-container\", 3);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.config.headerEnabled && !ctx.config.columnReorder);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.config.headerEnabled && ctx.config.columnReorder);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.config.searchEnabled && !ctx.filtersTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.filtersTemplate);\n    }\n  },\n  directives: [HeaderComponent, i5.NgIf, i5.NgTemplateOutlet, i5.NgForOf, i5.NgClass, i4.CdkDropList, i4.CdkDrag, i4.CdkDragHandle],\n  styles: [\".cdk-drag-preview[_ngcontent-%COMP%]{text-align:left;padding-top:9px;padding-left:4px;color:#50596c;border:1px solid #e7e9ed}\"],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableTHeadComponent, [{\n    type: Component,\n    args: [{\n      selector: '[table-thead]',\n      styles: [`\n      .cdk-drag-preview {\n        text-align: left;\n        padding-top: 9px;\n        padding-left: 4px;\n        color: #50596c;\n        border: 1px solid #e7e9ed;\n      }\n    `],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [StyleService],\n      template: \"<tr class=\\\"ngx-table__header\\\" *ngIf=\\\"config.headerEnabled && !config.columnReorder\\\">\\n  <th *ngIf=\\\"config.checkboxes || config.radio\\\" [style.width]=\\\"'3%'\\\">\\n    <ng-container\\n      *ngIf=\\\"selectAllTemplate && config.checkboxes\\\"\\n      [ngTemplateOutlet]=\\\"selectAllTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: onSelectAllBinded }\\\"\\n    >\\n    </ng-container>\\n    <label\\n      class=\\\"ngx-form-checkbox\\\"\\n      for=\\\"selectAllCheckboxes\\\"\\n      *ngIf=\\\"!selectAllTemplate && config.checkboxes\\\"\\n    >\\n      <input type=\\\"checkbox\\\" id=\\\"selectAllCheckboxes\\\" (change)=\\\"onSelectAll()\\\" />\\n      <em class=\\\"ngx-form-icon\\\" id=\\\"selectAllCheckbox\\\"></em>\\n    </label>\\n  </th>\\n  <ng-container *ngFor=\\\"let column of columns; let colIndex = index; let last = last\\\">\\n    <th\\n      class=\\\"ngx-table__header-cell\\\"\\n      [class.pinned-left]=\\\"column.pinned\\\"\\n      [ngClass]=\\\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\\\"\\n      [style.left]=\\\"styleService.pinnedWidth(column.pinned, colIndex)\\\"\\n      #th\\n      [style.width]=\\\"getColumnWidth(column)\\\"\\n      (mousedown)=\\\"onMouseDown($event, th)\\\"\\n      (mouseup)=\\\"onMouseUp($event)\\\"\\n      (mousemove)=\\\"onMouseMove($event)\\\"\\n    >\\n      <div\\n        (click)=\\\"orderBy(column)\\\"\\n        style=\\\"display: inline\\\"\\n        [class.pointer]=\\\"isOrderEnabled(column)\\\"\\n      >\\n        <div class=\\\"ngx-table__header-title\\\">\\n          {{ column.title }}<span>&nbsp;</span>\\n          <em class=\\\"ngx-icon ngx-icon-pin\\\" *ngIf=\\\"column.pinned\\\"></em>\\n          <div [style.display]=\\\"config.orderEnabled ? 'inline' : 'none'\\\">\\n            <em\\n              *ngIf=\\\"sortKey === column.key && this.sortState.get(sortKey) === 'asc'\\\"\\n              class=\\\"ngx-icon ngx-icon-arrow-up\\\"\\n            >\\n            </em>\\n            <em\\n              *ngIf=\\\"sortKey === column.key && this.sortState.get(sortKey) === 'desc'\\\"\\n              class=\\\"ngx-icon ngx-icon-arrow-down\\\"\\n            >\\n            </em>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"ngx-dropdown\\\" *ngIf=\\\"!!column.headerActionTemplate\\\" #headerDropdown>\\n        <a class=\\\"ngx-btn ngx-btn-link\\\" (click)=\\\"showHeaderActionTemplateMenu(column)\\\">\\n          <span class=\\\"ngx-icon ngx-icon-more\\\"></span>\\n        </a>\\n        <div\\n          class=\\\"ngx-menu ngx-table__table-menu\\\"\\n          *ngIf=\\\"column.key === openedHeaderActionTemplate\\\"\\n        >\\n          <ng-container [ngTemplateOutlet]=\\\"column.headerActionTemplate\\\"> </ng-container>\\n        </div>\\n      </div>\\n      <div class=\\\"ngx-table__column-resizer\\\" *ngIf=\\\"config.resizeColumn && !last\\\"></div>\\n    </th>\\n  </ng-container>\\n  <th\\n    *ngIf=\\\"\\n      config.additionalActions ||\\n      config.detailsTemplate ||\\n      config.collapseAllRows ||\\n      config.groupRows\\n    \\\"\\n    class=\\\"ngx-table__header-cell-additional-actions\\\"\\n  >\\n    <div class=\\\"ngx-dropdown\\\" #additionalActionMenu *ngIf=\\\"config.additionalActions\\\">\\n      <a class=\\\"ngx-btn ngx-btn-link\\\" (click)=\\\"showMenu()\\\">\\n        <span class=\\\"ngx-icon ngx-icon-menu\\\"></span>\\n      </a>\\n      <ul class=\\\"ngx-menu ngx-table__table-menu\\\" *ngIf=\\\"menuActive\\\">\\n        <ng-container\\n          *ngIf=\\\"additionalActionsTemplate\\\"\\n          [ngTemplateOutlet]=\\\"additionalActionsTemplate\\\"\\n        >\\n        </ng-container>\\n      </ul>\\n    </div>\\n  </th>\\n</tr>\\n<tr\\n  class=\\\"ngx-table__header ngx-table__header--draggable\\\"\\n  *ngIf=\\\"config.headerEnabled && config.columnReorder\\\"\\n  cdkDropList\\n  cdkDropListOrientation=\\\"horizontal\\\"\\n  (cdkDropListDropped)=\\\"columnDrop($event)\\\"\\n>\\n  <th *ngIf=\\\"config.checkboxes || config.radio\\\" [style.width]=\\\"'3%'\\\">\\n    <ng-container\\n      *ngIf=\\\"selectAllTemplate && config.checkboxes\\\"\\n      [ngTemplateOutlet]=\\\"selectAllTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: onSelectAllBinded }\\\"\\n    >\\n    </ng-container>\\n    <label\\n      class=\\\"ngx-form-checkbox\\\"\\n      for=\\\"selectAllCheckboxes\\\"\\n      *ngIf=\\\"!selectAllTemplate && config.checkboxes\\\"\\n    >\\n      <input type=\\\"checkbox\\\" id=\\\"selectAllCheckboxesDrag\\\" (change)=\\\"onSelectAll()\\\" />\\n      <em class=\\\"ngx-form-icon\\\" id=\\\"selectAllCheckboxDrag\\\"></em>\\n    </label>\\n  </th>\\n  <ng-container *ngFor=\\\"let column of columns; let colIndex = index; let last = last\\\">\\n    <th\\n      class=\\\"ngx-table__header-cell ngx-table__header-cell--draggable\\\"\\n      cdkDragLockAxis=\\\"x\\\"\\n      cdkDrag\\n      [cdkDragStartDelay]=\\\"config.reorderDelay || 0\\\"\\n      [class.pinned-left]=\\\"column.pinned\\\"\\n      [ngClass]=\\\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\\\"\\n      [style.left]=\\\"styleService.pinnedWidth(column.pinned, colIndex)\\\"\\n      #th\\n      [style.width]=\\\"getColumnWidth(column)\\\"\\n      (mousedown)=\\\"onMouseDown($event, th)\\\"\\n      (mouseup)=\\\"onMouseUp($event)\\\"\\n      (mousemove)=\\\"onMouseMove($event)\\\"\\n    >\\n      <div\\n        (click)=\\\"orderBy(column)\\\"\\n        style=\\\"display: inline\\\"\\n        cdkDragHandle\\n        [class.pointer]=\\\"isOrderEnabled(column)\\\"\\n      >\\n        <div class=\\\"ngx-table__header-title\\\">\\n          {{ column.title }}<span>&nbsp;</span>\\n          <em class=\\\"ngx-icon ngx-icon-pin\\\" *ngIf=\\\"column.pinned\\\"></em>\\n          <div [style.display]=\\\"config.orderEnabled ? 'inline' : 'none'\\\">\\n            <em\\n              *ngIf=\\\"sortKey === column.key && this.sortState.get(sortKey) === 'asc'\\\"\\n              class=\\\"ngx-icon ngx-icon-arrow-up\\\"\\n            >\\n            </em>\\n            <em\\n              *ngIf=\\\"sortKey === column.key && this.sortState.get(sortKey) === 'desc'\\\"\\n              class=\\\"ngx-icon ngx-icon-arrow-down\\\"\\n            >\\n            </em>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"ngx-dropdown\\\" *ngIf=\\\"!!column.headerActionTemplate\\\" #headerDropdown>\\n        <a class=\\\"ngx-btn ngx-btn-link\\\" (click)=\\\"showHeaderActionTemplateMenu(column)\\\">\\n          <span class=\\\"ngx-icon ngx-icon-more\\\"></span>\\n        </a>\\n        <div\\n          class=\\\"ngx-menu ngx-table__table-menu\\\"\\n          *ngIf=\\\"column.key === openedHeaderActionTemplate\\\"\\n        >\\n          <ng-container [ngTemplateOutlet]=\\\"column.headerActionTemplate\\\"> </ng-container>\\n        </div>\\n      </div>\\n      <div class=\\\"ngx-table__column-resizer\\\" *ngIf=\\\"config.resizeColumn && !last\\\"></div>\\n    </th>\\n  </ng-container>\\n  <th\\n    *ngIf=\\\"\\n      config.additionalActions ||\\n      config.detailsTemplate ||\\n      config.collapseAllRows ||\\n      config.groupRows\\n    \\\"\\n    class=\\\"ngx-table__header-cell-additional-actions\\\"\\n  >\\n    <div class=\\\"ngx-dropdown\\\" #additionalActionMenu *ngIf=\\\"config.additionalActions\\\">\\n      <a class=\\\"ngx-btn ngx-btn-link\\\" (click)=\\\"showMenu()\\\">\\n        <span class=\\\"ngx-icon ngx-icon-menu\\\"></span>\\n      </a>\\n      <ul class=\\\"ngx-menu ngx-table__table-menu\\\" *ngIf=\\\"menuActive\\\">\\n        <ng-container\\n          *ngIf=\\\"additionalActionsTemplate\\\"\\n          [ngTemplateOutlet]=\\\"additionalActionsTemplate\\\"\\n        >\\n        </ng-container>\\n      </ul>\\n    </div>\\n  </th>\\n</tr>\\n<tr *ngIf=\\\"config.searchEnabled && !filtersTemplate\\\" class=\\\"ngx-table__sort-header\\\">\\n  <th *ngIf=\\\"config.checkboxes || config.radio\\\"></th>\\n  <ng-container *ngFor=\\\"let column of columns; let colIndex = index\\\">\\n    <th\\n      [ngClass]=\\\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\\\"\\n      [class.pinned-left]=\\\"column.pinned\\\"\\n      [style.left]=\\\"styleService.pinnedWidth(column.pinned, colIndex)\\\"\\n    >\\n      <table-header\\n        *ngIf=\\\"getColumnDefinition(column)\\\"\\n        (update)=\\\"onSearch($event)\\\"\\n        [column]=\\\"column\\\"\\n      >\\n      </table-header>\\n    </th>\\n  </ng-container>\\n  <th *ngIf=\\\"config.additionalActions || config.detailsTemplate\\\"></th>\\n</tr>\\n<ng-container *ngIf=\\\"filtersTemplate\\\">\\n  <tr>\\n    <ng-container [ngTemplateOutlet]=\\\"filtersTemplate\\\"> </ng-container>\\n  </tr>\\n</ng-container>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: StyleService\n    }];\n  }, {\n    config: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    sortKey: [{\n      type: Input\n    }],\n    sortState: [{\n      type: Input\n    }],\n    selectAllTemplate: [{\n      type: Input\n    }],\n    filtersTemplate: [{\n      type: Input\n    }],\n    additionalActionsTemplate: [{\n      type: Input\n    }],\n    filter: [{\n      type: Output\n    }],\n    order: [{\n      type: Output\n    }],\n    selectAll: [{\n      type: Output\n    }],\n    event: [{\n      type: Output\n    }],\n    th: [{\n      type: ViewChild,\n      args: ['th']\n    }],\n    headerDropdown: [{\n      type: ViewChildren,\n      args: ['headerDropdown']\n    }],\n    additionalActionMenu: [{\n      type: ViewChild,\n      args: ['additionalActionMenu']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['document:click', ['$event.target']]\n    }]\n  });\n})();\n\nclass PaginationComponent {\n  constructor() {\n    this.updateRange = new EventEmitter();\n    this.ranges = [5, 10, 25, 50, 100];\n    this.showRange = false;\n    this.screenReaderPaginationLabel = 'Pagination';\n    this.screenReaderPageLabel = 'page';\n    this.screenReaderCurrentLabel = 'You are on page';\n    this.previousLabel = '';\n    this.nextLabel = '';\n    this.directionLinks = true;\n  }\n\n  onClick(targetElement) {\n    if (this.paginationRange && !this.paginationRange.nativeElement.contains(targetElement)) {\n      this.showRange = false;\n    }\n  }\n\n  ngOnChanges(changes) {\n    const {\n      config\n    } = changes;\n\n    if (config && config.currentValue) {\n      this.selectedLimit = this.config.rows;\n    }\n  }\n\n  onPageChange(page) {\n    this.updateRange.emit({\n      page,\n      limit: this.selectedLimit\n    });\n  }\n\n  changeLimit(limit, callFromAPI) {\n    if (!callFromAPI) {\n      this.showRange = !this.showRange;\n    }\n\n    this.selectedLimit = limit;\n    this.updateRange.emit({\n      page: 1,\n      limit\n    });\n  }\n\n}\n\nPaginationComponent.ɵfac = function PaginationComponent_Factory(t) {\n  return new (t || PaginationComponent)();\n};\n\nPaginationComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PaginationComponent,\n  selectors: [[\"pagination\"]],\n  viewQuery: function PaginationComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c5, 7);\n      i0.ɵɵviewQuery(_c6, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginationDirective = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginationRange = _t.first);\n    }\n  },\n  hostBindings: function PaginationComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function PaginationComponent_click_HostBindingHandler($event) {\n        return ctx.onClick($event.target);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  inputs: {\n    pagination: \"pagination\",\n    config: \"config\",\n    id: \"id\"\n  },\n  outputs: {\n    updateRange: \"updateRange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 11,\n  vars: 17,\n  consts: [[1, \"ngx-pagination-wrapper\"], [1, \"ngx-pagination-steps\"], [\"id\", \"pagination-controls\", 3, \"id\", \"maxSize\", \"pageChange\"], [\"paginationDirective\", \"paginationApi\"], [\"role\", \"navigation\", 1, \"ngx-pagination\"], [\"class\", \"pagination-previous\", 3, \"disabled\", 4, \"ngIf\"], [1, \"small-screen\"], [3, \"current\", \"ellipsis\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"pagination-next\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"ngx-pagination-range\", 3, \"ngx-table__table--dark-pagination-range\", 4, \"ngIf\"], [1, \"pagination-previous\"], [\"tabindex\", \"0\", 3, \"keyup.enter\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"tabindex\", \"0\", 3, \"keyup.enter\", \"click\"], [1, \"show-for-sr\"], [1, \"pagination-next\"], [1, \"ngx-pagination-range\"], [\"paginationRange\", \"\"], [\"id\", \"rowAmount\", 1, \"ngx-dropdown\", \"ngx-pagination-range-dropdown\"], [1, \"ngx-btn-group\"], [1, \"ngx-pagination-range-dropdown-button\", 3, \"click\"], [1, \"ngx-icon\", \"ngx-icon-arrow-down\"], [\"class\", \"ngx-menu\", 4, \"ngIf\"], [1, \"ngx-menu\"], [\"class\", \"ngx-pagination-range-dropdown-button-item\", 3, \"ngx-pagination-range--selected\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngx-pagination-range-dropdown-button-item\", 3, \"click\"]],\n  template: function PaginationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"pagination-template\", 2, 3);\n      i0.ɵɵlistener(\"pageChange\", function PaginationComponent_Template_pagination_template_pageChange_2_listener($event) {\n        return ctx.onPageChange($event);\n      });\n      i0.ɵɵelementStart(4, \"ul\", 4);\n      i0.ɵɵtemplate(5, PaginationComponent_li_5_Template, 3, 4, \"li\", 5);\n      i0.ɵɵelementStart(6, \"li\", 6);\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, PaginationComponent_li_8_Template, 3, 6, \"li\", 7);\n      i0.ɵɵtemplate(9, PaginationComponent_li_9_Template, 3, 4, \"li\", 8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(10, PaginationComponent_div_10_Template, 8, 4, \"div\", 9);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(3);\n\n      i0.ɵɵstyleProp(\"display\", ctx.config.paginationEnabled ? \"\" : \"none\");\n      i0.ɵɵclassProp(\"ngx-table__table--dark-pagination-wrapper\", ctx.config.tableLayout.theme === \"dark\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"ngx-table__table--dark-pagination\", ctx.config.tableLayout.theme === \"dark\");\n      i0.ɵɵproperty(\"id\", ctx.id)(\"maxSize\", ctx.config.paginationMaxSize || 5);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"responsive\", true);\n      i0.ɵɵattribute(\"aria-label\", ctx.screenReaderPaginationLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate2(\" \", _r0.getCurrent(), \" / \", _r0.getLastPage(), \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", _r0.pages);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.config.paginationRangeEnabled);\n    }\n  },\n  directives: [i1.PaginationControlsDirective, i5.NgIf, i5.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaginationComponent, [{\n    type: Component,\n    args: [{\n      selector: 'pagination',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div\\n  class=\\\"ngx-pagination-wrapper\\\"\\n  [style.display]=\\\"config.paginationEnabled ? '' : 'none'\\\"\\n  [class.ngx-table__table--dark-pagination-wrapper]=\\\"config.tableLayout.theme === 'dark'\\\"\\n>\\n  <div class=\\\"ngx-pagination-steps\\\">\\n    <pagination-template\\n      #paginationDirective=\\\"paginationApi\\\"\\n      id=\\\"pagination-controls\\\"\\n      [id]=\\\"id\\\"\\n      [class.ngx-table__table--dark-pagination]=\\\"config.tableLayout.theme === 'dark'\\\"\\n      [maxSize]=\\\"config.paginationMaxSize || 5\\\"\\n      (pageChange)=\\\"onPageChange($event)\\\"\\n    >\\n      <ul\\n        class=\\\"ngx-pagination\\\"\\n        role=\\\"navigation\\\"\\n        [attr.aria-label]=\\\"screenReaderPaginationLabel\\\"\\n        [class.responsive]=\\\"true\\\"\\n      >\\n        <li\\n          class=\\\"pagination-previous\\\"\\n          [class.disabled]=\\\"paginationDirective.isFirstPage()\\\"\\n          *ngIf=\\\"directionLinks\\\"\\n        >\\n          <a\\n            tabindex=\\\"0\\\"\\n            *ngIf=\\\"1 < paginationDirective.getCurrent()\\\"\\n            (keyup.enter)=\\\"paginationDirective.previous()\\\"\\n            (click)=\\\"paginationDirective.previous()\\\"\\n            [attr.aria-label]=\\\"previousLabel + ' ' + screenReaderPageLabel\\\"\\n          >\\n            {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n          </a>\\n          <span *ngIf=\\\"paginationDirective.isFirstPage()\\\">\\n            {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n          </span>\\n        </li>\\n        <li class=\\\"small-screen\\\">\\n          {{ paginationDirective.getCurrent() }} / {{ paginationDirective.getLastPage() }}\\n        </li>\\n        <li\\n          [class.current]=\\\"paginationDirective.getCurrent() === page.value\\\"\\n          [class.ellipsis]=\\\"page.label === '...'\\\"\\n          *ngFor=\\\"let page of paginationDirective.pages\\\"\\n        >\\n          <a\\n            tabindex=\\\"0\\\"\\n            (keyup.enter)=\\\"paginationDirective.setCurrent(page.value)\\\"\\n            (click)=\\\"paginationDirective.setCurrent(page.value)\\\"\\n            *ngIf=\\\"paginationDirective.getCurrent() !== page.value\\\"\\n          >\\n            <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n            <span>{{ page.label }}</span>\\n          </a>\\n          <ng-container *ngIf=\\\"paginationDirective.getCurrent() === page.value\\\">\\n            <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n            <span>{{ page.label }}</span>\\n          </ng-container>\\n        </li>\\n        <li\\n          class=\\\"pagination-next\\\"\\n          [class.disabled]=\\\"paginationDirective.isLastPage()\\\"\\n          *ngIf=\\\"directionLinks\\\"\\n        >\\n          <a\\n            tabindex=\\\"0\\\"\\n            *ngIf=\\\"!paginationDirective.isLastPage()\\\"\\n            (keyup.enter)=\\\"paginationDirective.next()\\\"\\n            (click)=\\\"paginationDirective.next()\\\"\\n            [attr.aria-label]=\\\"nextLabel + ' ' + screenReaderPageLabel\\\"\\n          >\\n            {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n          </a>\\n          <span *ngIf=\\\"paginationDirective.isLastPage()\\\">\\n            {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n          </span>\\n        </li>\\n      </ul>\\n    </pagination-template>\\n  </div>\\n  <div\\n    class=\\\"ngx-pagination-range\\\"\\n    #paginationRange\\n    [class.ngx-table__table--dark-pagination-range]=\\\"config.tableLayout.theme === 'dark'\\\"\\n    *ngIf=\\\"config.paginationRangeEnabled\\\"\\n  >\\n    <div class=\\\"ngx-dropdown ngx-pagination-range-dropdown\\\" id=\\\"rowAmount\\\">\\n      <div class=\\\"ngx-btn-group\\\">\\n        <div class=\\\"ngx-pagination-range-dropdown-button\\\" (click)=\\\"showRange = !showRange\\\">\\n          {{selectedLimit}} <i class=\\\"ngx-icon ngx-icon-arrow-down\\\"></i>\\n        </div>\\n        <ul class=\\\"ngx-menu\\\" *ngIf=\\\"showRange\\\">\\n          <li\\n            class=\\\"ngx-pagination-range-dropdown-button-item\\\"\\n            [class.ngx-pagination-range--selected]=\\\"limit === selectedLimit\\\"\\n            (click)=\\\"changeLimit(limit, false)\\\"\\n            *ngFor=\\\"let limit of ranges\\\"\\n          >\\n            <span>{{limit}}</span>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n    }]\n  }], null, {\n    paginationDirective: [{\n      type: ViewChild,\n      args: ['paginationDirective', {\n        static: true\n      }]\n    }],\n    paginationRange: [{\n      type: ViewChild,\n      args: ['paginationRange']\n    }],\n    pagination: [{\n      type: Input\n    }],\n    config: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    updateRange: [{\n      type: Output\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['document:click', ['$event.target']]\n    }]\n  });\n})();\n\nclass GlobalSearchPipe {\n  transform(array, filter, filteredCountSubject) {\n    filteredCountSubject.next(0);\n\n    if (typeof array === 'undefined') {\n      return;\n    }\n\n    if (typeof filter === 'undefined' || Object.keys(filter).length === 0 || filter === '') {\n      filteredCountSubject.next(array.length);\n      return array;\n    }\n\n    const arr = array.filter(row => {\n      const element = JSON.stringify(Object.values(row));\n      const strings = filter.split(',');\n      return strings.some(s => element.toLocaleLowerCase().indexOf(s.trim().toLocaleLowerCase()) > -1);\n    });\n    filteredCountSubject.next(arr.length);\n    return arr;\n  }\n\n}\n\nGlobalSearchPipe.ɵfac = function GlobalSearchPipe_Factory(t) {\n  return new (t || GlobalSearchPipe)();\n};\n\nGlobalSearchPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"global\",\n  type: GlobalSearchPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GlobalSearchPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'global'\n    }]\n  }], null, null);\n})();\n\nclass FiltersService {\n  static getPath(p, o) {\n    // https://github.com/dherges/ng-packagr/issues/696\n\n    /* eslint-disable-next-line */\n    const result = p.reduce((xs, x) => xs && typeof xs[x] !== 'undefined' ? xs[x] : null, o);\n    return result;\n  }\n\n}\n\nFiltersService.ɵfac = function FiltersService_Factory(t) {\n  return new (t || FiltersService)();\n};\n\nFiltersService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: FiltersService,\n  factory: FiltersService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FiltersService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass SearchPipe {\n  constructor() {\n    this.filters = {};\n  }\n\n  transform(array, filter, filteredCountSubject, config) {\n    filteredCountSubject.next(0);\n\n    if (typeof array === 'undefined') {\n      return;\n    }\n\n    if (typeof filter === 'undefined') {\n      filteredCountSubject.next(array.length);\n      return array;\n    }\n\n    filter.forEach(f => {\n      this.filters[f.key] = f.value.toString().toLocaleLowerCase();\n\n      if (Object.keys(f).length === 0 || f.value === '') {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete this.filters[f.key];\n      }\n    });\n\n    if (config && config.groupRows) {\n      return array.map(arr => this.filterGroup(arr, filteredCountSubject));\n    }\n\n    return this.filterGroup(array, filteredCountSubject);\n  }\n\n  filterGroup(array, filteredCountSubject) {\n    const arr = array.filter(obj => {\n      return Object.keys(this.filters).every(c => {\n        const split = c.split('.');\n        const val = FiltersService.getPath(split, obj);\n        const element = typeof val === 'object' ? JSON.stringify(val) : val.toString().toLocaleLowerCase();\n        const strings = this.filters[c].split(',');\n        return strings.some(s => element.indexOf(s.trim()) > -1);\n      });\n    });\n    filteredCountSubject.next(arr.length);\n    return arr;\n  }\n\n}\n\nSearchPipe.ɵfac = function SearchPipe_Factory(t) {\n  return new (t || SearchPipe)();\n};\n\nSearchPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"search\",\n  type: SearchPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SearchPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'search'\n    }]\n  }], null, null);\n})();\n\nclass SortPipe {\n  constructor() {\n    this.defaultArray = [];\n  }\n\n  static isNaN(aV, bV) {\n    return isNaN(parseFloat(aV)) || !isFinite(aV) || isNaN(parseFloat(bV)) || !isFinite(bV);\n  }\n\n  static compare(a, b, key) {\n    const split = key.split('.');\n    const aPath = FiltersService.getPath(split, a);\n    const bPath = FiltersService.getPath(split, b);\n    const aValue = (aPath + '').toLowerCase();\n    const bValue = (bPath + '').toLowerCase();\n\n    if (SortPipe.isNaN(aPath, bPath)) {\n      return aValue.localeCompare(bValue);\n    }\n\n    if (parseFloat(aPath) < parseFloat(bPath)) {\n      return -1;\n    }\n\n    if (parseFloat(aPath) > parseFloat(bPath)) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  transform(array, filter, config) {\n    if (this.defaultArray.length === 0) {\n      this.defaultArray = array;\n    }\n\n    if (!filter.key || filter.key === '') {\n      return array;\n    }\n\n    if (filter.order === '') {\n      return this.defaultArray;\n    }\n\n    if (filter.order === 'asc') {\n      return this.sortAsc(array, filter, config);\n    }\n\n    return this.sortDesc(array, filter, config);\n  }\n\n  sortAsc(array, filter, config) {\n    if (config && config.groupRows) {\n      return array.map(arr => arr.sort((a, b) => SortPipe.compare(a, b, filter.key)));\n    }\n\n    return array.sort((a, b) => SortPipe.compare(a, b, filter.key));\n  }\n\n  sortDesc(array, filter, config) {\n    if (config && config.groupRows) {\n      return array.map(arr => arr.sort((a, b) => SortPipe.compare(b, a, filter.key)));\n    }\n\n    return array.sort((a, b) => SortPipe.compare(b, a, filter.key));\n  }\n\n}\n\nSortPipe.ɵfac = function SortPipe_Factory(t) {\n  return new (t || SortPipe)();\n};\n\nSortPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"sort\",\n  type: SortPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SortPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'sort'\n    }]\n  }], null, null);\n})();\n\nclass RenderPipe {\n  transform(row, key) {\n    const split = key.split('.');\n    return FiltersService.getPath(split, row);\n  }\n\n}\n\nRenderPipe.ɵfac = function RenderPipe_Factory(t) {\n  return new (t || RenderPipe)();\n};\n\nRenderPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"render\",\n  type: RenderPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RenderPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'render'\n    }]\n  }], null, null);\n})();\n\nclass BaseComponent {\n  constructor(cdr, scrollDispatcher, styleService) {\n    this.cdr = cdr;\n    this.scrollDispatcher = scrollDispatcher;\n    this.styleService = styleService;\n    this.unsubscribe = new Subject();\n    this.filterCount = -1;\n    this.filteredCountSubject = new Subject();\n    this.tableClass = null;\n    this.grouped = [];\n    this.isSelected = false;\n    this.page = 1;\n    this.count = 0;\n    this.sortState = new Map();\n    this.sortKey = null;\n    this.rowContextMenuPosition = {\n      top: null,\n      left: null,\n      value: null\n    };\n    this.sortBy = {\n      key: '',\n      order: 'asc'\n    };\n    this.selectedDetailsTemplateRowId = new Set();\n    this.selectedCheckboxes = new Set();\n    this.id = 'table';\n    this.event = new EventEmitter();\n    this.filteredCountSubject.pipe(takeUntil(this.unsubscribe)).subscribe(count => {\n      setTimeout(() => {\n        this.filterCount = count;\n        this.cdr.detectChanges();\n      });\n    });\n  }\n\n  onContextMenuClick(targetElement) {\n    if (this.contextMenu && !this.contextMenu.nativeElement.contains(targetElement)) {\n      this.rowContextMenuPosition = {\n        top: null,\n        left: null,\n        value: null\n      };\n    }\n  }\n\n  ngOnInit() {\n    if (!this.columns) {\n      console.error('[columns] property required!');\n    }\n\n    if (this.configuration) {\n      this.config = this.configuration;\n    } else {\n      this.config = DefaultConfigService.config;\n    }\n\n    this.limit = this.config.rows;\n\n    if (this.groupRowsBy) {\n      this.grouped = GroupRowsService.doGroupRows(this.data, this.groupRowsBy);\n    }\n\n    this.doDecodePersistedState();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  ngAfterViewInit() {\n    const throttleValue = this.config.infiniteScrollThrottleTime ? this.config.infiniteScrollThrottleTime : 200;\n    this.scrollDispatcher.scrolled().pipe(throttleTime(throttleValue), filter(event => {\n      return !!event && this.viewPort && this.viewPort.getRenderedRange().end === this.viewPort.getDataLength();\n    }), takeUntil(this.unsubscribe)).subscribe(() => {\n      this.emitEvent(Event.onInfiniteScrollEnd, null);\n    });\n  }\n\n  ngOnChanges(changes) {\n    const {\n      configuration,\n      data,\n      pagination,\n      groupRowsBy\n    } = changes;\n    this.toggleRowIndex = changes.toggleRowIndex;\n\n    if (configuration && configuration.currentValue) {\n      this.config = configuration.currentValue;\n    }\n\n    if (data && data.currentValue) {\n      this.doApplyData(data);\n    }\n\n    if (pagination && pagination.currentValue) {\n      const {\n        count,\n        limit,\n        offset\n      } = pagination.currentValue;\n      this.count = count;\n      this.limit = limit;\n      this.page = offset;\n    }\n\n    if (groupRowsBy && groupRowsBy.currentValue) {\n      this.grouped = GroupRowsService.doGroupRows(this.data, this.groupRowsBy);\n    }\n\n    if (this.toggleRowIndex && this.toggleRowIndex.currentValue) {\n      const row = this.toggleRowIndex.currentValue;\n      this.collapseRow(row.index);\n    }\n  }\n\n  orderBy(column) {\n    if (typeof column.orderEnabled !== 'undefined' && !column.orderEnabled) {\n      return;\n    }\n\n    this.sortKey = column.key;\n\n    if (!this.config.orderEnabled || this.sortKey === '') {\n      return;\n    }\n\n    this.setColumnOrder(column);\n\n    if (!this.config.orderEventOnly && !column.orderEventOnly) {\n      this.sortBy.key = this.sortKey;\n      this.sortBy.order = this.sortState.get(this.sortKey);\n    } else {\n      this.sortBy.key = '';\n      this.sortBy.order = '';\n    }\n\n    if (!this.config.serverPagination) {\n      this.data = [...this.data];\n      this.sortBy = Object.assign({}, this.sortBy);\n    }\n\n    const value = {\n      key: this.sortKey,\n      order: this.sortState.get(this.sortKey)\n    };\n    this.emitEvent(Event.onOrder, value);\n  }\n\n  onClick($event, row, key, colIndex, rowIndex) {\n    if (this.config.selectRow) {\n      this.selectedRow = rowIndex;\n    }\n\n    if (this.config.selectCol && colIndex) {\n      this.selectedCol = colIndex;\n    }\n\n    if (this.config.selectCell && colIndex) {\n      this.selectedRow = rowIndex;\n      this.selectedCol = colIndex;\n    }\n\n    if (this.config.clickEvent) {\n      const value = {\n        event: $event,\n        row,\n        key,\n        rowId: rowIndex,\n        colId: colIndex\n      };\n      this.emitEvent(Event.onClick, value);\n    }\n  }\n\n  onDoubleClick($event, row, key, colIndex, rowIndex) {\n    const value = {\n      event: $event,\n      row,\n      key,\n      rowId: rowIndex,\n      colId: colIndex\n    };\n    this.emitEvent(Event.onDoubleClick, value);\n  }\n\n  onCheckboxSelect($event, row, rowIndex) {\n    const value = {\n      event: $event,\n      row,\n      rowId: rowIndex\n    };\n    this.emitEvent(Event.onCheckboxSelect, value);\n  }\n\n  onRadioSelect($event, row, rowIndex) {\n    const value = {\n      event: $event,\n      row,\n      rowId: rowIndex\n    };\n    this.emitEvent(Event.onRadioSelect, value);\n  }\n\n  onSelectAll() {\n    this.isSelected = !this.isSelected;\n    this.emitEvent(Event.onSelectAll, this.isSelected);\n  }\n\n  onSearch($event) {\n    if (!this.config.serverPagination) {\n      this.term = $event;\n    }\n\n    this.emitEvent(Event.onSearch, $event);\n  }\n\n  onGlobalSearch(value) {\n    if (!this.config.serverPagination) {\n      this.globalSearchTerm = value;\n    }\n\n    this.emitEvent(Event.onGlobalSearch, value);\n  }\n\n  onPagination(pagination) {\n    this.page = pagination.page;\n    this.limit = pagination.limit;\n    this.emitEvent(Event.onPagination, pagination);\n  }\n\n  toggleCheckbox(rowIndex) {\n    /* eslint-disable @typescript-eslint/no-unused-expressions */\n    this.selectedCheckboxes.has(rowIndex) ? this.selectedCheckboxes.delete(rowIndex) : this.selectedCheckboxes.add(rowIndex);\n  }\n\n  collapseRow(rowIndex) {\n    if (this.selectedDetailsTemplateRowId.has(rowIndex)) {\n      this.selectedDetailsTemplateRowId.delete(rowIndex);\n      this.emitEvent(Event.onRowCollapsedHide, rowIndex);\n    } else {\n      this.selectedDetailsTemplateRowId.add(rowIndex);\n      this.emitEvent(Event.onRowCollapsedShow, rowIndex);\n    }\n  }\n\n  doDecodePersistedState() {\n    if (!this.config.persistState) {\n      return;\n    }\n\n    const pagination = localStorage.getItem(Event.onPagination);\n    const sort = localStorage.getItem(Event.onOrder);\n    const search = localStorage.getItem(Event.onSearch);\n\n    if (pagination) {\n      this.onPagination(JSON.parse(pagination));\n    }\n\n    if (sort) {\n      const {\n        key,\n        order\n      } = JSON.parse(sort);\n      this.bindApi({\n        type: API.sortBy,\n        value: {\n          column: key,\n          order\n        }\n      });\n    }\n\n    if (search) {\n      this.bindApi({\n        type: API.setInputValue,\n        value: JSON.parse(search)\n      });\n    }\n  }\n\n  isRowCollapsed(rowIndex) {\n    if (this.config.collapseAllRows) {\n      return true;\n    }\n\n    return this.selectedDetailsTemplateRowId.has(rowIndex);\n  }\n\n  get loadingHeight() {\n    const table = document.getElementById(this.id);\n\n    if (table && table.rows && table.rows.length > 3) {\n      const searchEnabled = this.config.searchEnabled ? 1 : 0;\n      const headerEnabled = this.config.headerEnabled ? 1 : 0;\n      const borderTrHeight = 1;\n      const borderDivHeight = 2;\n      return (table.rows.length - searchEnabled - headerEnabled) * (table.rows[3].offsetHeight - borderTrHeight) - borderDivHeight;\n    }\n\n    return 30;\n  }\n\n  get arrowDefinition() {\n    return this.config.showDetailsArrow || typeof this.config.showDetailsArrow === 'undefined';\n  }\n\n  onRowContextMenu($event, row, key, colIndex, rowIndex) {\n    if (!this.config.showContextMenu) {\n      return;\n    }\n\n    $event.preventDefault();\n    const value = {\n      event: $event,\n      row,\n      key,\n      rowId: rowIndex,\n      colId: colIndex\n    };\n    this.rowContextMenuPosition = {\n      top: `${$event.pageY - 10}px`,\n      left: `${$event.pageX - 10}px`,\n      value\n    };\n    this.emitEvent(Event.onRowContextMenu, value);\n  }\n\n  doApplyData(data) {\n    const order = this.columns.find(c => !!c.orderBy);\n\n    if (order) {\n      this.sortState.set(this.sortKey, order.orderBy === 'asc' ? 'desc' : 'asc');\n      this.orderBy(order);\n    } else {\n      this.data = [...data.currentValue];\n    }\n  }\n\n  onDragStart(event) {\n    this.emitEvent(Event.onReorderStart, event);\n  }\n\n  onDrop(event) {\n    this.emitEvent(Event.onRowDrop, event);\n    moveItemInArray(this.data, event.previousIndex, event.currentIndex);\n  } // DO NOT REMOVE. It is called from parent component. See src/app/demo/api-doc/api-doc.component.ts\n\n\n  apiEvent(event) {\n    return this.bindApi(event);\n  }\n  /* eslint-disable */\n\n\n  bindApi(event) {\n    switch (event.type) {\n      case API.rowContextMenuClicked:\n        this.rowContextMenuPosition = {\n          top: null,\n          left: null,\n          value: null\n        };\n        break;\n\n      case API.toolPanelClicked:\n        // TODO\n        break;\n\n      case API.toggleRowIndex:\n        this.collapseRow(event.value);\n        break;\n\n      case API.toggleCheckbox:\n        this.toggleCheckbox(event.value);\n        break;\n\n      case API.setInputValue:\n        if (this.config.searchEnabled) {\n          event.value.forEach(input => {\n            const element = document.getElementById(`search_${input.key}`);\n\n            if (!element) {\n              console.error(`Column '${input.key}' not available in the DOM. Have you misspelled a name?`);\n            } else {\n              element.value = input.value;\n            }\n          });\n        }\n\n        this.onSearch(event.value);\n        this.cdr.detectChanges();\n        break;\n\n      case API.onGlobalSearch:\n        this.onGlobalSearch(event.value);\n        this.cdr.detectChanges();\n        break;\n\n      case API.setRowClass:\n        if (Array.isArray(event.value)) {\n          event.value.forEach(val => this.styleService.setRowClass(val));\n          break;\n        }\n\n        this.styleService.setRowClass(event.value);\n        this.cdr.detectChanges();\n        break;\n\n      case API.setCellClass:\n        if (Array.isArray(event.value)) {\n          event.value.forEach(val => this.styleService.setCellClass(val));\n          break;\n        }\n\n        this.styleService.setCellClass(event.value);\n        break;\n\n      case API.setRowStyle:\n        if (Array.isArray(event.value)) {\n          event.value.forEach(val => this.styleService.setRowStyle(val));\n          break;\n        }\n\n        this.styleService.setRowStyle(event.value);\n        break;\n\n      case API.setCellStyle:\n        if (Array.isArray(event.value)) {\n          event.value.forEach(val => this.styleService.setCellStyle(val));\n          break;\n        }\n\n        this.styleService.setCellStyle(event.value);\n        break;\n\n      case API.setTableClass:\n        this.tableClass = event.value;\n        this.cdr.detectChanges();\n        break;\n\n      case API.getPaginationTotalItems:\n        return this.paginationComponent.paginationDirective.getTotalItems();\n\n      case API.getPaginationCurrentPage:\n        return this.paginationComponent.paginationDirective.getCurrent();\n\n      case API.getPaginationLastPage:\n        return this.paginationComponent.paginationDirective.getLastPage();\n\n      case API.getNumberOfRowsPerPage:\n        return this.paginationComponent.paginationDirective.isLastPage() ? this.paginationComponent.paginationDirective.getTotalItems() % this.limit : this.limit;\n\n      case API.setPaginationCurrentPage:\n        this.paginationComponent.paginationDirective.setCurrent(event.value);\n        break;\n\n      case API.setPaginationRange:\n        this.paginationComponent.ranges = event.value;\n        break;\n\n      case API.setPaginationPreviousLabel:\n        this.paginationComponent.previousLabel = event.value;\n        break;\n\n      case API.setPaginationNextLabel:\n        this.paginationComponent.nextLabel = event.value;\n        break;\n\n      case API.setPaginationDisplayLimit:\n        this.paginationComponent.changeLimit(event.value, true);\n        break;\n\n      case API.sortBy:\n        const column = {\n          title: '',\n          key: event.value.column,\n          orderBy: event.value.order\n        };\n        this.orderBy(column);\n        this.cdr.detectChanges();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  setColumnOrder(column) {\n    const key = column.key;\n\n    switch (this.sortState.get(key)) {\n      case '':\n      case undefined:\n        this.sortState.set(key, column.orderBy || 'desc');\n        break;\n\n      case 'asc':\n        this.config.threeWaySort ? this.sortState.set(key, '') : this.sortState.set(key, 'desc');\n        break;\n\n      case 'desc':\n        this.sortState.set(key, 'asc');\n        break;\n    }\n\n    if (this.sortState.size > 1) {\n      const temp = this.sortState.get(key);\n      this.sortState.clear();\n      this.sortState.set(key, temp);\n    }\n  }\n\n  emitEvent(event, value) {\n    this.event.emit({\n      event,\n      value\n    });\n\n    if (this.config.persistState) {\n      localStorage.setItem(event, JSON.stringify(value));\n    }\n\n    if (this.config.logger) {\n      // eslint-disable-next-line no-console\n      console.log({\n        event,\n        value\n      });\n    }\n  }\n\n}\n\nBaseComponent.ɵfac = function BaseComponent_Factory(t) {\n  return new (t || BaseComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ScrollDispatcher), i0.ɵɵdirectiveInject(StyleService));\n};\n\nBaseComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BaseComponent,\n  selectors: [[\"ngx-table\"]],\n  contentQueries: function BaseComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, TemplateRef, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.rowTemplate = _t.first);\n    }\n  },\n  viewQuery: function BaseComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c7, 5);\n      i0.ɵɵviewQuery(_c8, 5);\n      i0.ɵɵviewQuery(CdkVirtualScrollViewport, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginationComponent = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contextMenu = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.viewPort = _t.first);\n    }\n  },\n  hostBindings: function BaseComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function BaseComponent_click_HostBindingHandler($event) {\n        return ctx.onContextMenuClick($event.target);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  inputs: {\n    configuration: \"configuration\",\n    data: \"data\",\n    pagination: \"pagination\",\n    groupRowsBy: \"groupRowsBy\",\n    id: \"id\",\n    toggleRowIndex: \"toggleRowIndex\",\n    detailsTemplate: \"detailsTemplate\",\n    summaryTemplate: \"summaryTemplate\",\n    groupRowsHeaderTemplate: \"groupRowsHeaderTemplate\",\n    filtersTemplate: \"filtersTemplate\",\n    selectAllTemplate: \"selectAllTemplate\",\n    noResultsTemplate: \"noResultsTemplate\",\n    loadingTemplate: \"loadingTemplate\",\n    additionalActionsTemplate: \"additionalActionsTemplate\",\n    rowContextMenu: \"rowContextMenu\",\n    columns: \"columns\"\n  },\n  outputs: {\n    event: \"event\"\n  },\n  features: [i0.ɵɵProvidersFeature([DefaultConfigService, GroupRowsService, StyleService]), i0.ɵɵNgOnChangesFeature],\n  decls: 10,\n  vars: 38,\n  consts: [[1, \"ngx-container\"], [3, \"id\", \"ngClass\"], [\"table-thead\", \"\", 3, \"config\", \"sortKey\", \"sortState\", \"selectAllTemplate\", \"filtersTemplate\", \"additionalActionsTemplate\", \"columns\", \"selectAll\", \"filter\", \"order\", \"event\"], [4, \"ngIf\"], [\"class\", \"ngx-draggable-row-area\", \"cdkDropList\", \"\", 3, \"cdkDropListDropped\", 4, \"ngIf\"], [3, \"id\", \"config\", \"pagination\", \"updateRange\"], [\"paginationComponent\", \"\"], [\"class\", \"ngx-table__table-row-context-menu\", 3, \"ngStyle\", 4, \"ngIf\"], [\"itemSize\", \"50\", \"class\", \"ngx-infinite-scroll-viewport\", 4, \"ngIf\"], [1, \"ngx-table__table-row-context-menu\", 3, \"ngStyle\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\", \"contextmenu\", \"dblclick\"], [\"contextMenu\", \"\"], [\"class\", \"ngx-icon\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [1, \"ngx-icon\", 3, \"ngClass\", \"click\"], [\"itemSize\", \"50\", 1, \"ngx-infinite-scroll-viewport\"], [4, \"cdkVirtualFor\", \"cdkVirtualForOf\"], [1, \"ngx-form-checkbox\"], [\"type\", \"checkbox\", 3, \"id\", \"checked\", \"change\"], [1, \"ngx-form-icon\"], [\"type\", \"radio\", \"name\", \"radio\", 3, \"id\", \"change\"], [3, \"ngClass\", \"click\", \"contextmenu\", \"dblclick\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [\"cdkDropList\", \"\", 1, \"ngx-draggable-row-area\", 3, \"cdkDropListDropped\"], [\"cdkDrag\", \"\", \"cdkDragLockAxis\", \"y\", 1, \"ngx-draggable-row\", 3, \"cdkDragStartDelay\", \"cdkDragStarted\"], [3, \"click\", \"dblclick\"], [1, \"ngx-table__body-empty\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [1, \"ngx-table__table-no-results\"], [1, \"ngx-table__body-loading\"], [1, \"ngx-table__table-loader-wrapper\"], [1, \"ngx-table__table-loader\"]],\n  template: function BaseComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\", 2);\n      i0.ɵɵlistener(\"selectAll\", function BaseComponent_Template_thead_selectAll_2_listener() {\n        return ctx.onSelectAll();\n      })(\"filter\", function BaseComponent_Template_thead_filter_2_listener($event) {\n        return ctx.onSearch($event);\n      })(\"order\", function BaseComponent_Template_thead_order_2_listener($event) {\n        return ctx.orderBy($event);\n      })(\"event\", function BaseComponent_Template_thead_event_2_listener($event) {\n        return ctx.emitEvent($event.event, $event.value);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, BaseComponent_tbody_3_Template, 4, 3, \"tbody\", 3);\n      i0.ɵɵtemplate(4, BaseComponent_tbody_4_Template, 2, 1, \"tbody\", 4);\n      i0.ɵɵtemplate(5, BaseComponent_tbody_5_Template, 4, 2, \"tbody\", 3);\n      i0.ɵɵtemplate(6, BaseComponent_tbody_6_Template, 4, 2, \"tbody\", 3);\n      i0.ɵɵtemplate(7, BaseComponent_tfoot_7_Template, 3, 6, \"tfoot\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"pagination\", 5, 6);\n      i0.ɵɵlistener(\"updateRange\", function BaseComponent_Template_pagination_updateRange_8_listener($event) {\n        return ctx.onPagination($event);\n      });\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ngx-container--dark\", ctx.config.tableLayout.theme === \"dark\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"ngx-table__table--tiny\", ctx.config.tableLayout.style === \"tiny\")(\"ngx-table__table--normal\", ctx.config.tableLayout.style === \"normal\")(\"ngx-table__table--big\", ctx.config.tableLayout.style === \"big\")(\"ngx-table__table--borderless\", ctx.config.tableLayout.borderless)(\"ngx-table__table--dark\", ctx.config.tableLayout.theme === \"dark\")(\"ngx-table__table--hoverable\", ctx.config.tableLayout.hover)(\"ngx-table__table--striped\", ctx.config.tableLayout.striped)(\"ngx-table__horizontal-scroll\", ctx.config.horizontalScroll && !ctx.config.isLoading);\n      i0.ɵɵproperty(\"id\", ctx.id)(\"ngClass\", ctx.tableClass === null || ctx.tableClass === \"\" ? \"ngx-table\" : ctx.tableClass);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"ngx-infinite-scroll-viewport-thead\", ctx.config.infiniteScroll);\n      i0.ɵɵproperty(\"config\", ctx.config)(\"sortKey\", ctx.sortKey)(\"sortState\", ctx.sortState)(\"selectAllTemplate\", ctx.selectAllTemplate)(\"filtersTemplate\", ctx.filtersTemplate)(\"additionalActionsTemplate\", ctx.additionalActionsTemplate)(\"columns\", ctx.columns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.data && !ctx.config.isLoading && !ctx.config.rowReorder);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.data && !ctx.config.isLoading && ctx.config.rowReorder);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.filterCount === 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.config.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.summaryTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"id\", ctx.id)(\"config\", ctx.config)(\"pagination\", ctx.pagination);\n      i0.ɵɵattribute(\"id\", \"pagination\" + ctx.id);\n    }\n  },\n  directives: [TableTHeadComponent, i1$1.CdkVirtualScrollViewport, PaginationComponent, i5.NgClass, i5.NgIf, i5.NgStyle, i5.NgTemplateOutlet, i5.NgForOf, i1$1.CdkFixedSizeVirtualScroll, i1$1.CdkVirtualForOf, i4.CdkDropList, i4.CdkDrag],\n  pipes: [i1.PaginatePipe, GlobalSearchPipe, SearchPipe, SortPipe, RenderPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-table',\n      providers: [DefaultConfigService, GroupRowsService, StyleService],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div class=\\\"ngx-container\\\" [class.ngx-container--dark]=\\\"config.tableLayout.theme === 'dark'\\\">\\n  <table\\n    [id]=\\\"id\\\"\\n    [ngClass]=\\\"tableClass === null || tableClass === '' ? 'ngx-table' : tableClass\\\"\\n    [class.ngx-table__table--tiny]=\\\"config.tableLayout.style === 'tiny'\\\"\\n    [class.ngx-table__table--normal]=\\\"config.tableLayout.style === 'normal'\\\"\\n    [class.ngx-table__table--big]=\\\"config.tableLayout.style === 'big'\\\"\\n    [class.ngx-table__table--borderless]=\\\"config.tableLayout.borderless\\\"\\n    [class.ngx-table__table--dark]=\\\"config.tableLayout.theme === 'dark'\\\"\\n    [class.ngx-table__table--hoverable]=\\\"config.tableLayout.hover\\\"\\n    [class.ngx-table__table--striped]=\\\"config.tableLayout.striped\\\"\\n    [class.ngx-table__horizontal-scroll]=\\\"config.horizontalScroll && !config.isLoading\\\"\\n  >\\n    <thead\\n      [class.ngx-infinite-scroll-viewport-thead]=\\\"config.infiniteScroll\\\"\\n      table-thead\\n      [config]=\\\"config\\\"\\n      [sortKey]=\\\"sortKey\\\"\\n      [sortState]=\\\"sortState\\\"\\n      [selectAllTemplate]=\\\"selectAllTemplate\\\"\\n      [filtersTemplate]=\\\"filtersTemplate\\\"\\n      [additionalActionsTemplate]=\\\"additionalActionsTemplate\\\"\\n      [columns]=\\\"columns\\\"\\n      (selectAll)=\\\"onSelectAll()\\\"\\n      (filter)=\\\"onSearch($event)\\\"\\n      (order)=\\\"orderBy($event)\\\"\\n      (event)=\\\"emitEvent($event.event, $event.value)\\\"\\n    ></thead>\\n    <tbody *ngIf=\\\"data && !config.isLoading && !config.rowReorder\\\">\\n      <ng-container *ngIf=\\\"rowTemplate\\\">\\n        <ul\\n          class=\\\"ngx-table__table-row-context-menu\\\"\\n          [ngStyle]=\\\"{\\n            position: 'absolute',\\n            top: rowContextMenuPosition.top,\\n            left: rowContextMenuPosition.left\\n          }\\\"\\n          *ngIf=\\\"rowContextMenuPosition.top\\\"\\n        >\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"rowContextMenu\\\"\\n            [ngTemplateOutletContext]=\\\"{ $implicit: rowContextMenuPosition.value }\\\"\\n          >\\n          </ng-container>\\n        </ul>\\n        <ng-container *ngIf=\\\"!config.infiniteScroll\\\">\\n          <ng-container\\n            *ngFor=\\\"\\n              let row of data\\n                | sort: sortBy\\n                | search: term:filteredCountSubject\\n                | global: globalSearchTerm:filteredCountSubject\\n                | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\\n              let rowIndex = index\\n            \\\"\\n          >\\n            <tr\\n              (click)=\\\"onClick($event, row, '', null, rowIndex)\\\"\\n              #contextMenu\\n              (contextmenu)=\\\"onRowContextMenu($event, row, '', null, rowIndex)\\\"\\n              (dblclick)=\\\"onDoubleClick($event, row, '', null, rowIndex)\\\"\\n              [class.ngx-table__table-row--selected]=\\\"\\n                rowIndex === selectedRow && !config.selectCell\\n              \\\"\\n            >\\n              <ng-container\\n                [ngTemplateOutlet]=\\\"rowTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n              >\\n              </ng-container>\\n              <td *ngIf=\\\"config.detailsTemplate\\\">\\n                <span\\n                  class=\\\"ngx-icon\\\"\\n                  *ngIf=\\\"arrowDefinition\\\"\\n                  [ngClass]=\\\"\\n                    isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\\n                  \\\"\\n                  (click)=\\\"collapseRow(rowIndex)\\\"\\n                >\\n                </span>\\n              </td>\\n            </tr>\\n            <tr\\n              *ngIf=\\\"\\n                (config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) ||\\n                config.collapseAllRows\\n              \\\"\\n            >\\n              <td [attr.colspan]=\\\"columns.length + 1\\\">\\n                <ng-container\\n                  [ngTemplateOutlet]=\\\"detailsTemplate\\\"\\n                  [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n                >\\n                </ng-container>\\n              </td>\\n            </tr>\\n          </ng-container>\\n        </ng-container>\\n        <cdk-virtual-scroll-viewport\\n          itemSize=\\\"50\\\"\\n          *ngIf=\\\"config.infiniteScroll\\\"\\n          class=\\\"ngx-infinite-scroll-viewport\\\"\\n        >\\n          <ng-container\\n            *cdkVirtualFor=\\\"\\n              let row of data\\n                | sort: sortBy\\n                | search: term:filteredCountSubject\\n                | global: globalSearchTerm:filteredCountSubject;\\n              let rowIndex = index\\n            \\\"\\n          >\\n            <tr\\n              (click)=\\\"onClick($event, row, '', null, rowIndex)\\\"\\n              #contextMenu\\n              (contextmenu)=\\\"onRowContextMenu($event, row, '', null, rowIndex)\\\"\\n              (dblclick)=\\\"onDoubleClick($event, row, '', null, rowIndex)\\\"\\n              [class.ngx-table__table-row--selected]=\\\"\\n                rowIndex === selectedRow && !config.selectCell\\n              \\\"\\n            >\\n              <ng-container\\n                [ngTemplateOutlet]=\\\"rowTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n              >\\n              </ng-container>\\n              <td *ngIf=\\\"config.detailsTemplate\\\">\\n                <span\\n                  class=\\\"ngx-icon\\\"\\n                  *ngIf=\\\"arrowDefinition\\\"\\n                  [ngClass]=\\\"\\n                    isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\\n                  \\\"\\n                  (click)=\\\"collapseRow(rowIndex)\\\"\\n                >\\n                </span>\\n              </td>\\n            </tr>\\n            <tr\\n              *ngIf=\\\"\\n                (config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) ||\\n                config.collapseAllRows\\n              \\\"\\n            >\\n              <td [attr.colspan]=\\\"columns.length + 1\\\">\\n                <ng-container\\n                  [ngTemplateOutlet]=\\\"detailsTemplate\\\"\\n                  [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n                >\\n                </ng-container>\\n              </td>\\n            </tr>\\n          </ng-container>\\n        </cdk-virtual-scroll-viewport>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"!rowTemplate && !config.groupRows\\\">\\n        <ul\\n          class=\\\"ngx-table__table-row-context-menu\\\"\\n          [ngStyle]=\\\"{\\n            position: 'absolute',\\n            top: rowContextMenuPosition.top,\\n            left: rowContextMenuPosition.left\\n          }\\\"\\n          *ngIf=\\\"rowContextMenuPosition.top\\\"\\n        >\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"rowContextMenu\\\"\\n            [ngTemplateOutletContext]=\\\"{ $implicit: rowContextMenuPosition.value }\\\"\\n          >\\n          </ng-container>\\n        </ul>\\n        <ng-container *ngIf=\\\"!config.infiniteScroll\\\">\\n          <ng-container\\n            *ngFor=\\\"\\n              let row of data\\n                | sort: sortBy\\n                | search: term:filteredCountSubject\\n                | global: globalSearchTerm:filteredCountSubject\\n                | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\\n              let rowIndex = index\\n            \\\"\\n          >\\n            <tr\\n              [class.ngx-table__table-row--selected]=\\\"\\n                rowIndex === selectedRow && !config.selectCell\\n              \\\"\\n            >\\n              <td *ngIf=\\\"config.checkboxes\\\">\\n                <label class=\\\"ngx-form-checkbox\\\">\\n                  <input\\n                    type=\\\"checkbox\\\"\\n                    id=\\\"checkbox-{{ rowIndex }}\\\"\\n                    [checked]=\\\"isSelected || selectedCheckboxes.has(rowIndex)\\\"\\n                    (change)=\\\"onCheckboxSelect($event, row, rowIndex)\\\"\\n                  />\\n                  <em class=\\\"ngx-form-icon\\\"></em>\\n                </label>\\n              </td>\\n              <td *ngIf=\\\"config.radio\\\">\\n                <label>\\n                  <input\\n                    type=\\\"radio\\\"\\n                    id=\\\"radio-{{ rowIndex }}\\\"\\n                    name=\\\"radio\\\"\\n                    (change)=\\\"onRadioSelect($event, row, rowIndex)\\\"\\n                  />\\n                </label>\\n              </td>\\n              <ng-container *ngFor=\\\"let column of columns; let colIndex = index\\\">\\n                <td\\n                  (click)=\\\"onClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                  #contextMenu\\n                  (contextmenu)=\\\"onRowContextMenu($event, row, column.key, colIndex, rowIndex)\\\"\\n                  (dblclick)=\\\"onDoubleClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                  [class.pinned-left]=\\\"column.pinned\\\"\\n                  [ngClass]=\\\"column.cssClass ? column.cssClass.name : ''\\\"\\n                  [style.left]=\\\"styleService.pinnedWidth(column.pinned, colIndex)\\\"\\n                  [class.ngx-table__table-col--selected]=\\\"\\n                    colIndex === selectedCol && !config.selectCell\\n                  \\\"\\n                  [class.ngx-table__table-cell--selected]=\\\"\\n                    colIndex === selectedCol &&\\n                    rowIndex === selectedRow &&\\n                    !config.selectCol &&\\n                    !config.selectRow\\n                  \\\"\\n                >\\n                  <div *ngIf=\\\"!column.cellTemplate\\\">{{ row | render: column.key }}</div>\\n                  <ng-container\\n                    *ngIf=\\\"column.cellTemplate\\\"\\n                    [ngTemplateOutlet]=\\\"column.cellTemplate\\\"\\n                    [ngTemplateOutletContext]=\\\"{\\n                      $implicit: row,\\n                      rowIndex: rowIndex,\\n                      column: column\\n                    }\\\"\\n                  >\\n                  </ng-container>\\n                </td>\\n              </ng-container>\\n              <td *ngIf=\\\"config.additionalActions || config.detailsTemplate\\\">\\n                <span\\n                  class=\\\"ngx-icon\\\"\\n                  *ngIf=\\\"arrowDefinition\\\"\\n                  [ngClass]=\\\"\\n                    isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\\n                  \\\"\\n                  (click)=\\\"collapseRow(rowIndex)\\\"\\n                >\\n                </span>\\n              </td>\\n            </tr>\\n            <tr\\n              *ngIf=\\\"\\n                (config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) ||\\n                config.collapseAllRows\\n              \\\"\\n            >\\n              <td *ngIf=\\\"config.checkboxes || config.radio\\\"></td>\\n              <td [attr.colspan]=\\\"columns.length + 1\\\">\\n                <ng-container\\n                  [ngTemplateOutlet]=\\\"detailsTemplate\\\"\\n                  [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n                >\\n                </ng-container>\\n              </td>\\n            </tr>\\n          </ng-container>\\n        </ng-container>\\n        <!-- infinite scroll -->\\n        <cdk-virtual-scroll-viewport\\n          itemSize=\\\"50\\\"\\n          *ngIf=\\\"config.infiniteScroll\\\"\\n          class=\\\"ngx-infinite-scroll-viewport\\\"\\n        >\\n          <ng-container\\n            *cdkVirtualFor=\\\"\\n              let row of data\\n                | sort: sortBy\\n                | search: term:filteredCountSubject\\n                | global: globalSearchTerm:filteredCountSubject;\\n              let rowIndex = index\\n            \\\"\\n          >\\n            <tr\\n              [class.ngx-table__table-row--selected]=\\\"\\n                rowIndex === selectedRow && !config.selectCell\\n              \\\"\\n            >\\n              <td *ngIf=\\\"config.checkboxes\\\">\\n                <label class=\\\"ngx-form-checkbox\\\">\\n                  <input\\n                    type=\\\"checkbox\\\"\\n                    id=\\\"checkbox-infinite-scroll-{{ rowIndex }}\\\"\\n                    [checked]=\\\"isSelected || selectedCheckboxes.has(rowIndex)\\\"\\n                    (change)=\\\"onCheckboxSelect($event, row, rowIndex)\\\"\\n                  />\\n                  <em class=\\\"ngx-form-icon\\\"></em>\\n                </label>\\n              </td>\\n              <td *ngIf=\\\"config.radio\\\">\\n                <label>\\n                  <input\\n                    type=\\\"radio\\\"\\n                    id=\\\"radio-infinite-scroll-{{ rowIndex }}\\\"\\n                    name=\\\"radio\\\"\\n                    (change)=\\\"onRadioSelect($event, row, rowIndex)\\\"\\n                  />\\n                </label>\\n              </td>\\n              <ng-container *ngFor=\\\"let column of columns; let colIndex = index\\\">\\n                <td\\n                  (click)=\\\"onClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                  #contextMenu\\n                  (contextmenu)=\\\"onRowContextMenu($event, row, column.key, colIndex, rowIndex)\\\"\\n                  (dblclick)=\\\"onDoubleClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                  [class.pinned-left]=\\\"column.pinned\\\"\\n                  [ngClass]=\\\"column.cssClass ? column.cssClass.name : ''\\\"\\n                  [style.left]=\\\"styleService.pinnedWidth(column.pinned, colIndex)\\\"\\n                  [class.ngx-table__table-col--selected]=\\\"\\n                    colIndex === selectedCol && !config.selectCell\\n                  \\\"\\n                  [class.ngx-table__table-cell--selected]=\\\"\\n                    colIndex === selectedCol &&\\n                    rowIndex === selectedRow &&\\n                    !config.selectCol &&\\n                    !config.selectRow\\n                  \\\"\\n                >\\n                  <div *ngIf=\\\"!column.cellTemplate\\\">{{ row | render: column.key }}</div>\\n                  <ng-container\\n                    *ngIf=\\\"column.cellTemplate\\\"\\n                    [ngTemplateOutlet]=\\\"column.cellTemplate\\\"\\n                    [ngTemplateOutletContext]=\\\"{\\n                      $implicit: row,\\n                      rowIndex: rowIndex,\\n                      column: column\\n                    }\\\"\\n                  >\\n                  </ng-container>\\n                </td>\\n              </ng-container>\\n              <td *ngIf=\\\"config.additionalActions || config.detailsTemplate\\\">\\n                <span\\n                  class=\\\"ngx-icon\\\"\\n                  *ngIf=\\\"arrowDefinition\\\"\\n                  [ngClass]=\\\"\\n                    isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\\n                  \\\"\\n                  (click)=\\\"collapseRow(rowIndex)\\\"\\n                >\\n                </span>\\n              </td>\\n            </tr>\\n            <tr\\n              *ngIf=\\\"\\n                (config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) ||\\n                config.collapseAllRows\\n              \\\"\\n            >\\n              <td *ngIf=\\\"config.checkboxes || config.radio\\\"></td>\\n              <td [attr.colspan]=\\\"columns.length + 1\\\">\\n                <ng-container\\n                  [ngTemplateOutlet]=\\\"detailsTemplate\\\"\\n                  [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n                >\\n                </ng-container>\\n              </td>\\n            </tr>\\n          </ng-container>\\n        </cdk-virtual-scroll-viewport>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"!rowTemplate && config.groupRows\\\">\\n        <ng-container\\n          *ngFor=\\\"\\n            let group of grouped\\n              | sort: sortBy:config\\n              | search: term:filteredCountSubject:config\\n              | global: globalSearchTerm:filteredCountSubject\\n              | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\\n            let rowIndex = index\\n          \\\"\\n        >\\n          <tr>\\n            <ng-container *ngIf=\\\"!groupRowsHeaderTemplate\\\">\\n              <td [attr.colspan]=\\\"columns.length\\\">\\n                <div>{{ group[0][groupRowsBy] }} ({{ group.length }})</div>\\n              </td>\\n            </ng-container>\\n            <ng-container\\n              *ngIf=\\\"groupRowsHeaderTemplate\\\"\\n              [ngTemplateOutlet]=\\\"groupRowsHeaderTemplate\\\"\\n              [ngTemplateOutletContext]=\\\"{\\n                total: group.length,\\n                key: groupRowsBy,\\n                value: group[0] ? group[0][groupRowsBy] : '',\\n                group: group,\\n                index: rowIndex\\n              }\\\"\\n            >\\n            </ng-container>\\n            <td>\\n              <span\\n                class=\\\"ngx-icon\\\"\\n                *ngIf=\\\"arrowDefinition\\\"\\n                [ngClass]=\\\"\\n                  isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\\n                \\\"\\n                (click)=\\\"collapseRow(rowIndex)\\\"\\n              >\\n              </span>\\n            </td>\\n          </tr>\\n          <ng-container *ngIf=\\\"selectedDetailsTemplateRowId.has(rowIndex)\\\">\\n            <tr *ngFor=\\\"let row of group\\\">\\n              <td *ngFor=\\\"let column of columns\\\">\\n                {{ row | render: column.key }}\\n                <!-- TODO allow users to add groupRowsTemplateRef -->\\n              </td>\\n              <td></td>\\n            </tr>\\n          </ng-container>\\n        </ng-container>\\n      </ng-container>\\n    </tbody>\\n    <tbody\\n      *ngIf=\\\"data && !config.isLoading && config.rowReorder\\\"\\n      class=\\\"ngx-draggable-row-area\\\"\\n      cdkDropList\\n      (cdkDropListDropped)=\\\"onDrop($event)\\\"\\n    >\\n      <ng-container *ngIf=\\\"!rowTemplate && !config.groupRows\\\">\\n        <ng-container\\n          *ngFor=\\\"\\n            let row of data\\n              | sort: sortBy\\n              | search: term:filteredCountSubject\\n              | global: globalSearchTerm:filteredCountSubject\\n              | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\\n            let rowIndex = index\\n          \\\"\\n        >\\n          <tr class=\\\"ngx-draggable-row\\\"\\n              cdkDrag\\n              (cdkDragStarted)=\\\"onDragStart($event)\\\"\\n              [cdkDragStartDelay]=\\\"config.reorderDelay || 0\\\"\\n              cdkDragLockAxis=\\\"y\\\">\\n            <td *ngIf=\\\"config.checkboxes\\\">\\n              <label class=\\\"ngx-form-checkbox\\\">\\n                <input\\n                  type=\\\"checkbox\\\"\\n                  id=\\\"checkbox-draggable-{{ rowIndex }}\\\"\\n                  [checked]=\\\"isSelected || selectedCheckboxes.has(rowIndex)\\\"\\n                  (change)=\\\"onCheckboxSelect($event, row, rowIndex)\\\"\\n                />\\n                <em class=\\\"ngx-form-icon\\\"></em>\\n              </label>\\n            </td>\\n            <td *ngIf=\\\"config.radio\\\">\\n              <label>\\n                <input\\n                  type=\\\"radio\\\"\\n                  id=\\\"radio-draggable-{{ rowIndex }}\\\"\\n                  name=\\\"radio\\\"\\n                  (change)=\\\"onRadioSelect($event, row, rowIndex)\\\"\\n                />\\n              </label>\\n            </td>\\n            <ng-container *ngFor=\\\"let column of columns; let colIndex = index\\\">\\n              <td\\n                (click)=\\\"onClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                (dblclick)=\\\"onDoubleClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                [class.ngx-table__table-col--selected]=\\\"\\n                  colIndex === selectedCol && !config.selectCell\\n                \\\"\\n                [class.ngx-table__table-cell--selected]=\\\"\\n                  colIndex === selectedCol &&\\n                  rowIndex === selectedRow &&\\n                  !config.selectCol &&\\n                  !config.selectRow\\n                \\\"\\n              >\\n                <div *ngIf=\\\"!column.cellTemplate\\\">{{ row | render: column.key }}</div>\\n                <ng-container\\n                  *ngIf=\\\"column.cellTemplate\\\"\\n                  [ngTemplateOutlet]=\\\"column.cellTemplate\\\"\\n                  [ngTemplateOutletContext]=\\\"{\\n                    $implicit: row,\\n                    rowIndex: rowIndex,\\n                    column: column\\n                  }\\\"\\n                >\\n                </ng-container>\\n              </td>\\n            </ng-container>\\n          </tr>\\n        </ng-container>\\n      </ng-container>\\n    </tbody>\\n    <tbody *ngIf=\\\"filterCount === 0\\\">\\n      <tr class=\\\"ngx-table__body-empty\\\">\\n        <ng-container *ngIf=\\\"noResultsTemplate\\\" [ngTemplateOutlet]=\\\"noResultsTemplate\\\">\\n        </ng-container>\\n        <td [attr.colspan]=\\\"columns && columns.length + 1\\\" *ngIf=\\\"!noResultsTemplate\\\">\\n          <div class=\\\"ngx-table__table-no-results\\\">No results</div>\\n        </td>\\n      </tr>\\n    </tbody>\\n    <tbody *ngIf=\\\"config.isLoading\\\">\\n      <tr class=\\\"ngx-table__body-loading\\\">\\n        <ng-container *ngIf=\\\"loadingTemplate\\\" [ngTemplateOutlet]=\\\"loadingTemplate\\\"> </ng-container>\\n        <td [attr.colspan]=\\\"columns && columns.length + 1\\\" *ngIf=\\\"!loadingTemplate\\\">\\n          <div [style.height.px]=\\\"loadingHeight\\\" class=\\\"ngx-table__table-loader-wrapper\\\">\\n            <div class=\\\"ngx-table__table-loader\\\"></div>\\n          </div>\\n        </td>\\n      </tr>\\n    </tbody>\\n    <tfoot *ngIf=\\\"summaryTemplate\\\">\\n      <tr>\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"summaryTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{ total: data.length, limit: limit, page: page }\\\"\\n        >\\n        </ng-container>\\n      </tr>\\n    </tfoot>\\n  </table>\\n  <pagination\\n    [attr.id]=\\\"'pagination' + id\\\"\\n    [id]=\\\"id\\\"\\n    #paginationComponent\\n    [config]=\\\"config\\\"\\n    [pagination]=\\\"pagination\\\"\\n    (updateRange)=\\\"onPagination($event)\\\"\\n  >\\n  </pagination>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ScrollDispatcher\n    }, {\n      type: StyleService\n    }];\n  }, {\n    configuration: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    pagination: [{\n      type: Input\n    }],\n    groupRowsBy: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    toggleRowIndex: [{\n      type: Input\n    }],\n    detailsTemplate: [{\n      type: Input\n    }],\n    summaryTemplate: [{\n      type: Input\n    }],\n    groupRowsHeaderTemplate: [{\n      type: Input\n    }],\n    filtersTemplate: [{\n      type: Input\n    }],\n    selectAllTemplate: [{\n      type: Input\n    }],\n    noResultsTemplate: [{\n      type: Input\n    }],\n    loadingTemplate: [{\n      type: Input\n    }],\n    additionalActionsTemplate: [{\n      type: Input\n    }],\n    rowContextMenu: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    event: [{\n      type: Output\n    }],\n    rowTemplate: [{\n      type: ContentChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    paginationComponent: [{\n      type: ViewChild,\n      args: ['paginationComponent']\n    }],\n    contextMenu: [{\n      type: ViewChild,\n      args: ['contextMenu']\n    }],\n    viewPort: [{\n      type: ViewChild,\n      args: [CdkVirtualScrollViewport]\n    }],\n    onContextMenuClick: [{\n      type: HostListener,\n      args: ['document:click', ['$event.target']]\n    }]\n  });\n})();\n\nclass BaseModule {}\n\nBaseModule.ɵfac = function BaseModule_Factory(t) {\n  return new (t || BaseModule)();\n};\n\nBaseModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BaseModule\n});\nBaseModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, NgxPaginationModule, DragDropModule, ScrollingModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [BaseComponent, HeaderComponent, PaginationComponent, TableTHeadComponent, // Pipes\n      SearchPipe, RenderPipe, GlobalSearchPipe, SortPipe],\n      imports: [CommonModule, NgxPaginationModule, DragDropModule, ScrollingModule],\n      exports: [BaseComponent]\n    }]\n  }], null, null);\n})();\n\nclass TableModule {}\n\nTableModule.ɵfac = function TableModule_Factory(t) {\n  return new (t || TableModule)();\n};\n\nTableModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TableModule\n});\nTableModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[CommonModule, BaseModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, BaseModule],\n      exports: [BaseComponent],\n      providers: []\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { API, BaseComponent, DefaultConfig, Event, STYLE, THEME, TableModule };","map":{"version":3,"names":["i5","CommonModule","i0","Injectable","EventEmitter","Component","ChangeDetectionStrategy","Input","Output","ViewChild","ViewChildren","HostListener","Pipe","TemplateRef","ContentChild","NgModule","i4","moveItemInArray","DragDropModule","from","Subject","groupBy","mergeMap","reduce","takeUntil","throttleTime","filter","i1$1","CdkVirtualScrollViewport","ScrollingModule","i1","NgxPaginationModule","STYLE","THEME","Event","API","DefaultConfig","searchEnabled","headerEnabled","orderEnabled","orderEventOnly","paginationEnabled","exportEnabled","clickEvent","selectRow","selectCol","selectCell","rows","additionalActions","serverPagination","isLoading","detailsTemplate","groupRows","paginationRangeEnabled","collapseAllRows","checkboxes","radio","resizeColumn","fixedColumnWidth","horizontalScroll","draggable","logger","showDetailsArrow","showContextMenu","persistState","paginationMaxSize","threeWaySort","tableLayout","style","NORMAL","theme","LIGHT","borderless","hover","striped","DefaultConfigService","config","ɵfac","ɵprov","type","GroupRowsService","doGroupRows","data","groupRowsBy","grouped","pipe","row","group","acc","curr","subscribe","push","StyleService","setRowClass","val","selector","document","querySelector","classList","add","className","setCellClass","cell","setRowStyle","attr","value","setCellStyle","pinnedWidth","pinned","column","HeaderComponent","constructor","update","unifyKey","key","replace","onSearch","input","emit","ɵcmp","args","changeDetection","OnPush","template","TableTHeadComponent","styleService","menuActive","openedHeaderActionTemplate","onSelectAllBinded","onSelectAll","bind","order","selectAll","event","onClick","targetElement","additionalActionMenu","nativeElement","contains","headerDropdown","toArray","some","ref","getColumnDefinition","orderBy","isOrderEnabled","columnOrderEnabled","undefined","columnDrop","columns","previousIndex","currentIndex","$event","getColumnWidth","width","length","onMouseDown","th","startOffset","offsetWidth","pageX","onColumnResizeMouseDown","onMouseMove","cursor","onMouseUp","onColumnResizeMouseUp","showHeaderActionTemplateMenu","headerActionTemplate","console","error","showMenu","additionalActionsTemplate","NgIf","NgTemplateOutlet","NgForOf","NgClass","CdkDropList","CdkDrag","CdkDragHandle","styles","providers","sortKey","sortState","selectAllTemplate","filtersTemplate","PaginationComponent","updateRange","ranges","showRange","screenReaderPaginationLabel","screenReaderPageLabel","screenReaderCurrentLabel","previousLabel","nextLabel","directionLinks","paginationRange","ngOnChanges","changes","currentValue","selectedLimit","onPageChange","page","limit","changeLimit","callFromAPI","PaginationControlsDirective","paginationDirective","static","pagination","id","GlobalSearchPipe","transform","array","filteredCountSubject","next","Object","keys","arr","element","JSON","stringify","values","strings","split","s","toLocaleLowerCase","indexOf","trim","ɵpipe","name","FiltersService","getPath","p","o","result","xs","x","SearchPipe","filters","forEach","f","toString","map","filterGroup","obj","every","c","SortPipe","defaultArray","isNaN","aV","bV","parseFloat","isFinite","compare","a","b","aPath","bPath","aValue","toLowerCase","bValue","localeCompare","sortAsc","sortDesc","sort","RenderPipe","BaseComponent","cdr","scrollDispatcher","unsubscribe","filterCount","tableClass","isSelected","count","Map","rowContextMenuPosition","top","left","sortBy","selectedDetailsTemplateRowId","Set","selectedCheckboxes","setTimeout","detectChanges","onContextMenuClick","contextMenu","ngOnInit","configuration","doDecodePersistedState","ngOnDestroy","complete","ngAfterViewInit","throttleValue","infiniteScrollThrottleTime","scrolled","viewPort","getRenderedRange","end","getDataLength","emitEvent","onInfiniteScrollEnd","toggleRowIndex","doApplyData","offset","collapseRow","index","setColumnOrder","get","assign","onOrder","colIndex","rowIndex","selectedRow","selectedCol","rowId","colId","onDoubleClick","onCheckboxSelect","onRadioSelect","term","onGlobalSearch","globalSearchTerm","onPagination","toggleCheckbox","has","delete","onRowCollapsedHide","onRowCollapsedShow","localStorage","getItem","search","parse","bindApi","setInputValue","isRowCollapsed","loadingHeight","table","getElementById","borderTrHeight","borderDivHeight","offsetHeight","arrowDefinition","onRowContextMenu","preventDefault","pageY","find","set","onDragStart","onReorderStart","onDrop","onRowDrop","apiEvent","rowContextMenuClicked","toolPanelClicked","Array","isArray","setTableClass","getPaginationTotalItems","paginationComponent","getTotalItems","getPaginationCurrentPage","getCurrent","getPaginationLastPage","getLastPage","getNumberOfRowsPerPage","isLastPage","setPaginationCurrentPage","setCurrent","setPaginationRange","setPaginationPreviousLabel","setPaginationNextLabel","setPaginationDisplayLimit","title","size","temp","clear","setItem","log","ChangeDetectorRef","ScrollDispatcher","NgStyle","CdkFixedSizeVirtualScroll","CdkVirtualForOf","PaginatePipe","summaryTemplate","groupRowsHeaderTemplate","noResultsTemplate","loadingTemplate","rowContextMenu","rowTemplate","BaseModule","ɵmod","ɵinj","declarations","imports","exports","TableModule"],"sources":["C:/WorkspaceJava/angular/QRA/node_modules/ngx-easy-table/fesm2015/ngx-easy-table.mjs"],"sourcesContent":["import * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ChangeDetectionStrategy, Input, Output, ViewChild, ViewChildren, HostListener, Pipe, TemplateRef, ContentChild, NgModule } from '@angular/core';\nimport * as i4 from '@angular/cdk/drag-drop';\nimport { moveItemInArray, DragDropModule } from '@angular/cdk/drag-drop';\nimport { from, Subject } from 'rxjs';\nimport { groupBy, mergeMap, reduce, takeUntil, throttleTime, filter } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as i1 from 'ngx-pagination';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\nvar STYLE;\n(function (STYLE) {\n    STYLE[\"TINY\"] = \"tiny\";\n    STYLE[\"BIG\"] = \"big\";\n    STYLE[\"NORMAL\"] = \"normal\";\n})(STYLE || (STYLE = {}));\nvar THEME;\n(function (THEME) {\n    THEME[\"LIGHT\"] = \"light\";\n    THEME[\"DARK\"] = \"dark\";\n})(THEME || (THEME = {}));\n\nvar Event;\n(function (Event) {\n    Event[\"onPagination\"] = \"onPagination\";\n    Event[\"onOrder\"] = \"onOrder\";\n    Event[\"onGlobalSearch\"] = \"onGlobalSearch\";\n    Event[\"onSearch\"] = \"onSearch\";\n    Event[\"onClick\"] = \"onClick\";\n    Event[\"onDoubleClick\"] = \"onDoubleClick\";\n    Event[\"onCheckboxSelect\"] = \"onCheckboxSelect\";\n    Event[\"onRadioSelect\"] = \"onRadioSelect\";\n    Event[\"onCheckboxToggle\"] = \"onCheckboxToggle\";\n    Event[\"onSelectAll\"] = \"onSelectAll\";\n    Event[\"onInfiniteScrollEnd\"] = \"onInfiniteScrollEnd\";\n    Event[\"onColumnResizeMouseDown\"] = \"onColumnResizeMouseDown\";\n    Event[\"onColumnResizeMouseUp\"] = \"onColumnResizeMouseUp\";\n    Event[\"onRowDrop\"] = \"onRowDrop\";\n    Event[\"onReorderStart\"] = \"onReorderStart\";\n    Event[\"onRowCollapsedShow\"] = \"onRowCollapsedShow\";\n    Event[\"onRowCollapsedHide\"] = \"onRowCollapsedHide\";\n    Event[\"onRowContextMenu\"] = \"onRowContextMenu\";\n})(Event || (Event = {}));\n\nvar API;\n(function (API) {\n    API[\"rowContextMenuClicked\"] = \"rowContextMenuClicked\";\n    API[\"setInputValue\"] = \"setInputValue\";\n    API[\"toolPanelClicked\"] = \"toolPanelClicked\";\n    API[\"toggleRowIndex\"] = \"toggleRowIndex\";\n    API[\"toggleCheckbox\"] = \"toggleCheckbox\";\n    API[\"onGlobalSearch\"] = \"onGlobalSearch\";\n    API[\"setPaginationCurrentPage\"] = \"setPaginationCurrentPage\";\n    API[\"getPaginationCurrentPage\"] = \"getPaginationCurrentPage\";\n    API[\"getPaginationTotalItems\"] = \"getPaginationTotalItems\";\n    API[\"getNumberOfRowsPerPage\"] = \"getNumberOfRowsPerPage\";\n    API[\"getPaginationLastPage\"] = \"getPaginationLastPage\";\n    API[\"setPaginationRange\"] = \"setPaginationRange\";\n    API[\"setPaginationPreviousLabel\"] = \"setPaginationPreviousLabel\";\n    API[\"setPaginationNextLabel\"] = \"setPaginationNextLabel\";\n    API[\"setPaginationDisplayLimit\"] = \"setPaginationDisplayLimit\";\n    API[\"setTableClass\"] = \"setTableClass\";\n    API[\"setRowClass\"] = \"setRowClass\";\n    API[\"setCellClass\"] = \"setCellClass\";\n    API[\"setRowStyle\"] = \"setRowStyle\";\n    API[\"setCellStyle\"] = \"setCellStyle\";\n    API[\"sortBy\"] = \"sortBy\";\n})(API || (API = {}));\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, no-underscore-dangle, id-blacklist, id-match\nconst DefaultConfig = {\n    searchEnabled: false,\n    headerEnabled: true,\n    orderEnabled: true,\n    orderEventOnly: false,\n    paginationEnabled: true,\n    exportEnabled: false,\n    clickEvent: true,\n    selectRow: false,\n    selectCol: false,\n    selectCell: false,\n    rows: 10,\n    additionalActions: false,\n    serverPagination: false,\n    isLoading: false,\n    detailsTemplate: false,\n    groupRows: false,\n    paginationRangeEnabled: true,\n    collapseAllRows: false,\n    checkboxes: false,\n    radio: false,\n    resizeColumn: false,\n    fixedColumnWidth: true,\n    horizontalScroll: false,\n    draggable: false,\n    logger: false,\n    showDetailsArrow: false,\n    showContextMenu: false,\n    persistState: false,\n    paginationMaxSize: 5,\n    threeWaySort: false,\n    tableLayout: {\n        style: STYLE.NORMAL,\n        theme: THEME.LIGHT,\n        borderless: false,\n        hover: true,\n        striped: false,\n    },\n};\nclass DefaultConfigService {\n}\nDefaultConfigService.config = DefaultConfig;\nDefaultConfigService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DefaultConfigService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDefaultConfigService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DefaultConfigService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DefaultConfigService, decorators: [{\n            type: Injectable\n        }] });\n\nclass GroupRowsService {\n    static doGroupRows(data, groupRowsBy) {\n        const grouped = [];\n        from(data)\n            .pipe(groupBy((row) => row[groupRowsBy]), mergeMap((group) => group.pipe(reduce((acc, curr) => [...acc, curr], []))))\n            .subscribe((row) => grouped.push(row));\n        return grouped;\n    }\n}\nGroupRowsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: GroupRowsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nGroupRowsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: GroupRowsService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: GroupRowsService, decorators: [{\n            type: Injectable\n        }] });\n\n/* eslint-disable */\nclass StyleService {\n    setRowClass(val) {\n        const selector = `#table > tbody > tr:nth-child(${val.row})`;\n        const row = document.querySelector(selector);\n        if (row) {\n            row.classList.add(val.className);\n        }\n    }\n    setCellClass(val) {\n        const selector = `#table > tbody > tr:nth-child(${val.row}) > td:nth-child(${val.cell})`;\n        const cell = document.querySelector(selector);\n        if (cell) {\n            cell.classList.add(val.className);\n        }\n    }\n    setRowStyle(val) {\n        const selector = `#table > tbody > tr:nth-child(${val.row})`;\n        const row = document.querySelector(selector);\n        if (row) {\n            // eslint-disable-next-line @typescript-eslint/dot-notation\n            row.style[val.attr] = val.value;\n        }\n    }\n    setCellStyle(val) {\n        const selector = `#table > tbody > tr:nth-child(${val.row}) > td:nth-child(${val.cell})`;\n        const cell = document.querySelector(selector);\n        if (cell) {\n            // eslint-disable-next-line @typescript-eslint/dot-notation\n            cell.style[val.attr] = val.value;\n        }\n    }\n    pinnedWidth(pinned, column) {\n        if (pinned) {\n            return 150 * column + 'px';\n        }\n    }\n}\nStyleService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: StyleService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nStyleService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: StyleService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: StyleService, decorators: [{\n            type: Injectable\n        }] });\n\nclass HeaderComponent {\n    constructor() {\n        this.update = new EventEmitter();\n    }\n    unifyKey(key) {\n        return key.replace('.', '_');\n    }\n    onSearch(input) {\n        this.update.emit([{ value: input.value, key: this.column.key }]);\n    }\n}\nHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: HeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: HeaderComponent, selector: \"table-header\", inputs: { column: \"column\" }, outputs: { update: \"update\" }, ngImport: i0, template: \"<label for=\\\"search_{{ unifyKey(column.key) }}\\\">\\n  <input\\n    type=\\\"text\\\"\\n    id=\\\"search_{{ unifyKey(column.key) }}\\\"\\n    aria-label=\\\"Search\\\"\\n    placeholder=\\\"{{ column.placeholder ? column.placeholder : column.title }}\\\"\\n    class=\\\"ngx-table__header-search\\\"\\n    #input\\n    (input)=\\\"onSearch(input)\\\"\\n  />\\n</label>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: HeaderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'table-header', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<label for=\\\"search_{{ unifyKey(column.key) }}\\\">\\n  <input\\n    type=\\\"text\\\"\\n    id=\\\"search_{{ unifyKey(column.key) }}\\\"\\n    aria-label=\\\"Search\\\"\\n    placeholder=\\\"{{ column.placeholder ? column.placeholder : column.title }}\\\"\\n    class=\\\"ngx-table__header-search\\\"\\n    #input\\n    (input)=\\\"onSearch(input)\\\"\\n  />\\n</label>\\n\" }]\n        }], propDecorators: { column: [{\n                type: Input\n            }], update: [{\n                type: Output\n            }] } });\n\nclass TableTHeadComponent {\n    constructor(styleService) {\n        this.styleService = styleService;\n        this.menuActive = false;\n        this.openedHeaderActionTemplate = null;\n        this.onSelectAllBinded = this.onSelectAll.bind(this);\n        this.filter = new EventEmitter();\n        this.order = new EventEmitter();\n        this.selectAll = new EventEmitter();\n        this.event = new EventEmitter();\n    }\n    onClick(targetElement) {\n        if (this.additionalActionMenu &&\n            !this.additionalActionMenu.nativeElement.contains(targetElement)) {\n            this.menuActive = false;\n        }\n        // if click outside the header then close opened Header Action Template\n        if (this.openedHeaderActionTemplate &&\n            // if no header have the clicked point\n            !this.headerDropdown.toArray().some((ref) => ref.nativeElement.contains(targetElement))) {\n            this.openedHeaderActionTemplate = null;\n        }\n    }\n    getColumnDefinition(column) {\n        return column.searchEnabled || typeof column.searchEnabled === 'undefined';\n    }\n    orderBy(column) {\n        this.order.emit(column);\n    }\n    isOrderEnabled(column) {\n        const columnOrderEnabled = column.orderEnabled === undefined ? true : !!column.orderEnabled;\n        return this.config.orderEnabled && columnOrderEnabled;\n    }\n    columnDrop(event) {\n        moveItemInArray(this.columns, event.previousIndex, event.currentIndex);\n    }\n    onSearch($event) {\n        this.filter.emit($event);\n    }\n    getColumnWidth(column) {\n        if (column.width) {\n            return column.width;\n        }\n        return this.config.fixedColumnWidth ? 100 / this.columns.length + '%' : null;\n    }\n    onSelectAll() {\n        this.selectAll.emit();\n    }\n    onMouseDown(event, th) {\n        if (!this.config.resizeColumn) {\n            return;\n        }\n        this.th = th;\n        this.startOffset = th.offsetWidth - event.pageX;\n        this.event.emit({\n            event: Event.onColumnResizeMouseDown,\n            value: event,\n        });\n    }\n    onMouseMove(event) {\n        if (!this.config.resizeColumn) {\n            return;\n        }\n        if (this.th && this.th.style) {\n            this.th.style.width = this.startOffset + event.pageX + 'px';\n            this.th.style.cursor = 'col-resize';\n            this.th.style['user-select'] = 'none';\n        }\n    }\n    onMouseUp(event) {\n        if (!this.config.resizeColumn) {\n            return;\n        }\n        this.event.emit({\n            event: Event.onColumnResizeMouseUp,\n            value: event,\n        });\n        this.th.style.cursor = 'default';\n        this.th = undefined;\n    }\n    showHeaderActionTemplateMenu(column) {\n        if (!column.headerActionTemplate) {\n            console.error('Column [headerActionTemplate] property not defined');\n        }\n        if (this.openedHeaderActionTemplate === column.key) {\n            this.openedHeaderActionTemplate = null;\n            return;\n        }\n        this.openedHeaderActionTemplate = column.key;\n    }\n    showMenu() {\n        if (!this.additionalActionsTemplate) {\n            console.error('[additionalActionsTemplate] property not defined');\n        }\n        this.menuActive = !this.menuActive;\n    }\n}\nTableTHeadComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TableTHeadComponent, deps: [{ token: StyleService }], target: i0.ɵɵFactoryTarget.Component });\nTableTHeadComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: TableTHeadComponent, selector: \"[table-thead]\", inputs: { config: \"config\", columns: \"columns\", sortKey: \"sortKey\", sortState: \"sortState\", selectAllTemplate: \"selectAllTemplate\", filtersTemplate: \"filtersTemplate\", additionalActionsTemplate: \"additionalActionsTemplate\" }, outputs: { filter: \"filter\", order: \"order\", selectAll: \"selectAll\", event: \"event\" }, host: { listeners: { \"document:click\": \"onClick($event.target)\" } }, providers: [StyleService], viewQueries: [{ propertyName: \"th\", first: true, predicate: [\"th\"], descendants: true }, { propertyName: \"additionalActionMenu\", first: true, predicate: [\"additionalActionMenu\"], descendants: true }, { propertyName: \"headerDropdown\", predicate: [\"headerDropdown\"], descendants: true }], ngImport: i0, template: \"<tr class=\\\"ngx-table__header\\\" *ngIf=\\\"config.headerEnabled && !config.columnReorder\\\">\\n  <th *ngIf=\\\"config.checkboxes || config.radio\\\" [style.width]=\\\"'3%'\\\">\\n    <ng-container\\n      *ngIf=\\\"selectAllTemplate && config.checkboxes\\\"\\n      [ngTemplateOutlet]=\\\"selectAllTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: onSelectAllBinded }\\\"\\n    >\\n    </ng-container>\\n    <label\\n      class=\\\"ngx-form-checkbox\\\"\\n      for=\\\"selectAllCheckboxes\\\"\\n      *ngIf=\\\"!selectAllTemplate && config.checkboxes\\\"\\n    >\\n      <input type=\\\"checkbox\\\" id=\\\"selectAllCheckboxes\\\" (change)=\\\"onSelectAll()\\\" />\\n      <em class=\\\"ngx-form-icon\\\" id=\\\"selectAllCheckbox\\\"></em>\\n    </label>\\n  </th>\\n  <ng-container *ngFor=\\\"let column of columns; let colIndex = index; let last = last\\\">\\n    <th\\n      class=\\\"ngx-table__header-cell\\\"\\n      [class.pinned-left]=\\\"column.pinned\\\"\\n      [ngClass]=\\\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\\\"\\n      [style.left]=\\\"styleService.pinnedWidth(column.pinned, colIndex)\\\"\\n      #th\\n      [style.width]=\\\"getColumnWidth(column)\\\"\\n      (mousedown)=\\\"onMouseDown($event, th)\\\"\\n      (mouseup)=\\\"onMouseUp($event)\\\"\\n      (mousemove)=\\\"onMouseMove($event)\\\"\\n    >\\n      <div\\n        (click)=\\\"orderBy(column)\\\"\\n        style=\\\"display: inline\\\"\\n        [class.pointer]=\\\"isOrderEnabled(column)\\\"\\n      >\\n        <div class=\\\"ngx-table__header-title\\\">\\n          {{ column.title }}<span>&nbsp;</span>\\n          <em class=\\\"ngx-icon ngx-icon-pin\\\" *ngIf=\\\"column.pinned\\\"></em>\\n          <div [style.display]=\\\"config.orderEnabled ? 'inline' : 'none'\\\">\\n            <em\\n              *ngIf=\\\"sortKey === column.key && this.sortState.get(sortKey) === 'asc'\\\"\\n              class=\\\"ngx-icon ngx-icon-arrow-up\\\"\\n            >\\n            </em>\\n            <em\\n              *ngIf=\\\"sortKey === column.key && this.sortState.get(sortKey) === 'desc'\\\"\\n              class=\\\"ngx-icon ngx-icon-arrow-down\\\"\\n            >\\n            </em>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"ngx-dropdown\\\" *ngIf=\\\"!!column.headerActionTemplate\\\" #headerDropdown>\\n        <a class=\\\"ngx-btn ngx-btn-link\\\" (click)=\\\"showHeaderActionTemplateMenu(column)\\\">\\n          <span class=\\\"ngx-icon ngx-icon-more\\\"></span>\\n        </a>\\n        <div\\n          class=\\\"ngx-menu ngx-table__table-menu\\\"\\n          *ngIf=\\\"column.key === openedHeaderActionTemplate\\\"\\n        >\\n          <ng-container [ngTemplateOutlet]=\\\"column.headerActionTemplate\\\"> </ng-container>\\n        </div>\\n      </div>\\n      <div class=\\\"ngx-table__column-resizer\\\" *ngIf=\\\"config.resizeColumn && !last\\\"></div>\\n    </th>\\n  </ng-container>\\n  <th\\n    *ngIf=\\\"\\n      config.additionalActions ||\\n      config.detailsTemplate ||\\n      config.collapseAllRows ||\\n      config.groupRows\\n    \\\"\\n    class=\\\"ngx-table__header-cell-additional-actions\\\"\\n  >\\n    <div class=\\\"ngx-dropdown\\\" #additionalActionMenu *ngIf=\\\"config.additionalActions\\\">\\n      <a class=\\\"ngx-btn ngx-btn-link\\\" (click)=\\\"showMenu()\\\">\\n        <span class=\\\"ngx-icon ngx-icon-menu\\\"></span>\\n      </a>\\n      <ul class=\\\"ngx-menu ngx-table__table-menu\\\" *ngIf=\\\"menuActive\\\">\\n        <ng-container\\n          *ngIf=\\\"additionalActionsTemplate\\\"\\n          [ngTemplateOutlet]=\\\"additionalActionsTemplate\\\"\\n        >\\n        </ng-container>\\n      </ul>\\n    </div>\\n  </th>\\n</tr>\\n<tr\\n  class=\\\"ngx-table__header ngx-table__header--draggable\\\"\\n  *ngIf=\\\"config.headerEnabled && config.columnReorder\\\"\\n  cdkDropList\\n  cdkDropListOrientation=\\\"horizontal\\\"\\n  (cdkDropListDropped)=\\\"columnDrop($event)\\\"\\n>\\n  <th *ngIf=\\\"config.checkboxes || config.radio\\\" [style.width]=\\\"'3%'\\\">\\n    <ng-container\\n      *ngIf=\\\"selectAllTemplate && config.checkboxes\\\"\\n      [ngTemplateOutlet]=\\\"selectAllTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: onSelectAllBinded }\\\"\\n    >\\n    </ng-container>\\n    <label\\n      class=\\\"ngx-form-checkbox\\\"\\n      for=\\\"selectAllCheckboxes\\\"\\n      *ngIf=\\\"!selectAllTemplate && config.checkboxes\\\"\\n    >\\n      <input type=\\\"checkbox\\\" id=\\\"selectAllCheckboxesDrag\\\" (change)=\\\"onSelectAll()\\\" />\\n      <em class=\\\"ngx-form-icon\\\" id=\\\"selectAllCheckboxDrag\\\"></em>\\n    </label>\\n  </th>\\n  <ng-container *ngFor=\\\"let column of columns; let colIndex = index; let last = last\\\">\\n    <th\\n      class=\\\"ngx-table__header-cell ngx-table__header-cell--draggable\\\"\\n      cdkDragLockAxis=\\\"x\\\"\\n      cdkDrag\\n      [cdkDragStartDelay]=\\\"config.reorderDelay || 0\\\"\\n      [class.pinned-left]=\\\"column.pinned\\\"\\n      [ngClass]=\\\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\\\"\\n      [style.left]=\\\"styleService.pinnedWidth(column.pinned, colIndex)\\\"\\n      #th\\n      [style.width]=\\\"getColumnWidth(column)\\\"\\n      (mousedown)=\\\"onMouseDown($event, th)\\\"\\n      (mouseup)=\\\"onMouseUp($event)\\\"\\n      (mousemove)=\\\"onMouseMove($event)\\\"\\n    >\\n      <div\\n        (click)=\\\"orderBy(column)\\\"\\n        style=\\\"display: inline\\\"\\n        cdkDragHandle\\n        [class.pointer]=\\\"isOrderEnabled(column)\\\"\\n      >\\n        <div class=\\\"ngx-table__header-title\\\">\\n          {{ column.title }}<span>&nbsp;</span>\\n          <em class=\\\"ngx-icon ngx-icon-pin\\\" *ngIf=\\\"column.pinned\\\"></em>\\n          <div [style.display]=\\\"config.orderEnabled ? 'inline' : 'none'\\\">\\n            <em\\n              *ngIf=\\\"sortKey === column.key && this.sortState.get(sortKey) === 'asc'\\\"\\n              class=\\\"ngx-icon ngx-icon-arrow-up\\\"\\n            >\\n            </em>\\n            <em\\n              *ngIf=\\\"sortKey === column.key && this.sortState.get(sortKey) === 'desc'\\\"\\n              class=\\\"ngx-icon ngx-icon-arrow-down\\\"\\n            >\\n            </em>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"ngx-dropdown\\\" *ngIf=\\\"!!column.headerActionTemplate\\\" #headerDropdown>\\n        <a class=\\\"ngx-btn ngx-btn-link\\\" (click)=\\\"showHeaderActionTemplateMenu(column)\\\">\\n          <span class=\\\"ngx-icon ngx-icon-more\\\"></span>\\n        </a>\\n        <div\\n          class=\\\"ngx-menu ngx-table__table-menu\\\"\\n          *ngIf=\\\"column.key === openedHeaderActionTemplate\\\"\\n        >\\n          <ng-container [ngTemplateOutlet]=\\\"column.headerActionTemplate\\\"> </ng-container>\\n        </div>\\n      </div>\\n      <div class=\\\"ngx-table__column-resizer\\\" *ngIf=\\\"config.resizeColumn && !last\\\"></div>\\n    </th>\\n  </ng-container>\\n  <th\\n    *ngIf=\\\"\\n      config.additionalActions ||\\n      config.detailsTemplate ||\\n      config.collapseAllRows ||\\n      config.groupRows\\n    \\\"\\n    class=\\\"ngx-table__header-cell-additional-actions\\\"\\n  >\\n    <div class=\\\"ngx-dropdown\\\" #additionalActionMenu *ngIf=\\\"config.additionalActions\\\">\\n      <a class=\\\"ngx-btn ngx-btn-link\\\" (click)=\\\"showMenu()\\\">\\n        <span class=\\\"ngx-icon ngx-icon-menu\\\"></span>\\n      </a>\\n      <ul class=\\\"ngx-menu ngx-table__table-menu\\\" *ngIf=\\\"menuActive\\\">\\n        <ng-container\\n          *ngIf=\\\"additionalActionsTemplate\\\"\\n          [ngTemplateOutlet]=\\\"additionalActionsTemplate\\\"\\n        >\\n        </ng-container>\\n      </ul>\\n    </div>\\n  </th>\\n</tr>\\n<tr *ngIf=\\\"config.searchEnabled && !filtersTemplate\\\" class=\\\"ngx-table__sort-header\\\">\\n  <th *ngIf=\\\"config.checkboxes || config.radio\\\"></th>\\n  <ng-container *ngFor=\\\"let column of columns; let colIndex = index\\\">\\n    <th\\n      [ngClass]=\\\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\\\"\\n      [class.pinned-left]=\\\"column.pinned\\\"\\n      [style.left]=\\\"styleService.pinnedWidth(column.pinned, colIndex)\\\"\\n    >\\n      <table-header\\n        *ngIf=\\\"getColumnDefinition(column)\\\"\\n        (update)=\\\"onSearch($event)\\\"\\n        [column]=\\\"column\\\"\\n      >\\n      </table-header>\\n    </th>\\n  </ng-container>\\n  <th *ngIf=\\\"config.additionalActions || config.detailsTemplate\\\"></th>\\n</tr>\\n<ng-container *ngIf=\\\"filtersTemplate\\\">\\n  <tr>\\n    <ng-container [ngTemplateOutlet]=\\\"filtersTemplate\\\"> </ng-container>\\n  </tr>\\n</ng-container>\\n\", styles: [\".cdk-drag-preview{text-align:left;padding-top:9px;padding-left:4px;color:#50596c;border:1px solid #e7e9ed}\\n\"], components: [{ type: HeaderComponent, selector: \"table-header\", inputs: [\"column\"], outputs: [\"update\"] }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i5.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i5.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i5.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i4.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { type: i4.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragData\", \"cdkDragLockAxis\", \"cdkDragRootElement\", \"cdkDragBoundary\", \"cdkDragStartDelay\", \"cdkDragFreeDragPosition\", \"cdkDragDisabled\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragPreviewContainer\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }, { type: i4.CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TableTHeadComponent, decorators: [{\n            type: Component,\n            args: [{ selector: '[table-thead]', styles: [\n                        `\n      .cdk-drag-preview {\n        text-align: left;\n        padding-top: 9px;\n        padding-left: 4px;\n        color: #50596c;\n        border: 1px solid #e7e9ed;\n      }\n    `,\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, providers: [StyleService], template: \"<tr class=\\\"ngx-table__header\\\" *ngIf=\\\"config.headerEnabled && !config.columnReorder\\\">\\n  <th *ngIf=\\\"config.checkboxes || config.radio\\\" [style.width]=\\\"'3%'\\\">\\n    <ng-container\\n      *ngIf=\\\"selectAllTemplate && config.checkboxes\\\"\\n      [ngTemplateOutlet]=\\\"selectAllTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: onSelectAllBinded }\\\"\\n    >\\n    </ng-container>\\n    <label\\n      class=\\\"ngx-form-checkbox\\\"\\n      for=\\\"selectAllCheckboxes\\\"\\n      *ngIf=\\\"!selectAllTemplate && config.checkboxes\\\"\\n    >\\n      <input type=\\\"checkbox\\\" id=\\\"selectAllCheckboxes\\\" (change)=\\\"onSelectAll()\\\" />\\n      <em class=\\\"ngx-form-icon\\\" id=\\\"selectAllCheckbox\\\"></em>\\n    </label>\\n  </th>\\n  <ng-container *ngFor=\\\"let column of columns; let colIndex = index; let last = last\\\">\\n    <th\\n      class=\\\"ngx-table__header-cell\\\"\\n      [class.pinned-left]=\\\"column.pinned\\\"\\n      [ngClass]=\\\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\\\"\\n      [style.left]=\\\"styleService.pinnedWidth(column.pinned, colIndex)\\\"\\n      #th\\n      [style.width]=\\\"getColumnWidth(column)\\\"\\n      (mousedown)=\\\"onMouseDown($event, th)\\\"\\n      (mouseup)=\\\"onMouseUp($event)\\\"\\n      (mousemove)=\\\"onMouseMove($event)\\\"\\n    >\\n      <div\\n        (click)=\\\"orderBy(column)\\\"\\n        style=\\\"display: inline\\\"\\n        [class.pointer]=\\\"isOrderEnabled(column)\\\"\\n      >\\n        <div class=\\\"ngx-table__header-title\\\">\\n          {{ column.title }}<span>&nbsp;</span>\\n          <em class=\\\"ngx-icon ngx-icon-pin\\\" *ngIf=\\\"column.pinned\\\"></em>\\n          <div [style.display]=\\\"config.orderEnabled ? 'inline' : 'none'\\\">\\n            <em\\n              *ngIf=\\\"sortKey === column.key && this.sortState.get(sortKey) === 'asc'\\\"\\n              class=\\\"ngx-icon ngx-icon-arrow-up\\\"\\n            >\\n            </em>\\n            <em\\n              *ngIf=\\\"sortKey === column.key && this.sortState.get(sortKey) === 'desc'\\\"\\n              class=\\\"ngx-icon ngx-icon-arrow-down\\\"\\n            >\\n            </em>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"ngx-dropdown\\\" *ngIf=\\\"!!column.headerActionTemplate\\\" #headerDropdown>\\n        <a class=\\\"ngx-btn ngx-btn-link\\\" (click)=\\\"showHeaderActionTemplateMenu(column)\\\">\\n          <span class=\\\"ngx-icon ngx-icon-more\\\"></span>\\n        </a>\\n        <div\\n          class=\\\"ngx-menu ngx-table__table-menu\\\"\\n          *ngIf=\\\"column.key === openedHeaderActionTemplate\\\"\\n        >\\n          <ng-container [ngTemplateOutlet]=\\\"column.headerActionTemplate\\\"> </ng-container>\\n        </div>\\n      </div>\\n      <div class=\\\"ngx-table__column-resizer\\\" *ngIf=\\\"config.resizeColumn && !last\\\"></div>\\n    </th>\\n  </ng-container>\\n  <th\\n    *ngIf=\\\"\\n      config.additionalActions ||\\n      config.detailsTemplate ||\\n      config.collapseAllRows ||\\n      config.groupRows\\n    \\\"\\n    class=\\\"ngx-table__header-cell-additional-actions\\\"\\n  >\\n    <div class=\\\"ngx-dropdown\\\" #additionalActionMenu *ngIf=\\\"config.additionalActions\\\">\\n      <a class=\\\"ngx-btn ngx-btn-link\\\" (click)=\\\"showMenu()\\\">\\n        <span class=\\\"ngx-icon ngx-icon-menu\\\"></span>\\n      </a>\\n      <ul class=\\\"ngx-menu ngx-table__table-menu\\\" *ngIf=\\\"menuActive\\\">\\n        <ng-container\\n          *ngIf=\\\"additionalActionsTemplate\\\"\\n          [ngTemplateOutlet]=\\\"additionalActionsTemplate\\\"\\n        >\\n        </ng-container>\\n      </ul>\\n    </div>\\n  </th>\\n</tr>\\n<tr\\n  class=\\\"ngx-table__header ngx-table__header--draggable\\\"\\n  *ngIf=\\\"config.headerEnabled && config.columnReorder\\\"\\n  cdkDropList\\n  cdkDropListOrientation=\\\"horizontal\\\"\\n  (cdkDropListDropped)=\\\"columnDrop($event)\\\"\\n>\\n  <th *ngIf=\\\"config.checkboxes || config.radio\\\" [style.width]=\\\"'3%'\\\">\\n    <ng-container\\n      *ngIf=\\\"selectAllTemplate && config.checkboxes\\\"\\n      [ngTemplateOutlet]=\\\"selectAllTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: onSelectAllBinded }\\\"\\n    >\\n    </ng-container>\\n    <label\\n      class=\\\"ngx-form-checkbox\\\"\\n      for=\\\"selectAllCheckboxes\\\"\\n      *ngIf=\\\"!selectAllTemplate && config.checkboxes\\\"\\n    >\\n      <input type=\\\"checkbox\\\" id=\\\"selectAllCheckboxesDrag\\\" (change)=\\\"onSelectAll()\\\" />\\n      <em class=\\\"ngx-form-icon\\\" id=\\\"selectAllCheckboxDrag\\\"></em>\\n    </label>\\n  </th>\\n  <ng-container *ngFor=\\\"let column of columns; let colIndex = index; let last = last\\\">\\n    <th\\n      class=\\\"ngx-table__header-cell ngx-table__header-cell--draggable\\\"\\n      cdkDragLockAxis=\\\"x\\\"\\n      cdkDrag\\n      [cdkDragStartDelay]=\\\"config.reorderDelay || 0\\\"\\n      [class.pinned-left]=\\\"column.pinned\\\"\\n      [ngClass]=\\\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\\\"\\n      [style.left]=\\\"styleService.pinnedWidth(column.pinned, colIndex)\\\"\\n      #th\\n      [style.width]=\\\"getColumnWidth(column)\\\"\\n      (mousedown)=\\\"onMouseDown($event, th)\\\"\\n      (mouseup)=\\\"onMouseUp($event)\\\"\\n      (mousemove)=\\\"onMouseMove($event)\\\"\\n    >\\n      <div\\n        (click)=\\\"orderBy(column)\\\"\\n        style=\\\"display: inline\\\"\\n        cdkDragHandle\\n        [class.pointer]=\\\"isOrderEnabled(column)\\\"\\n      >\\n        <div class=\\\"ngx-table__header-title\\\">\\n          {{ column.title }}<span>&nbsp;</span>\\n          <em class=\\\"ngx-icon ngx-icon-pin\\\" *ngIf=\\\"column.pinned\\\"></em>\\n          <div [style.display]=\\\"config.orderEnabled ? 'inline' : 'none'\\\">\\n            <em\\n              *ngIf=\\\"sortKey === column.key && this.sortState.get(sortKey) === 'asc'\\\"\\n              class=\\\"ngx-icon ngx-icon-arrow-up\\\"\\n            >\\n            </em>\\n            <em\\n              *ngIf=\\\"sortKey === column.key && this.sortState.get(sortKey) === 'desc'\\\"\\n              class=\\\"ngx-icon ngx-icon-arrow-down\\\"\\n            >\\n            </em>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"ngx-dropdown\\\" *ngIf=\\\"!!column.headerActionTemplate\\\" #headerDropdown>\\n        <a class=\\\"ngx-btn ngx-btn-link\\\" (click)=\\\"showHeaderActionTemplateMenu(column)\\\">\\n          <span class=\\\"ngx-icon ngx-icon-more\\\"></span>\\n        </a>\\n        <div\\n          class=\\\"ngx-menu ngx-table__table-menu\\\"\\n          *ngIf=\\\"column.key === openedHeaderActionTemplate\\\"\\n        >\\n          <ng-container [ngTemplateOutlet]=\\\"column.headerActionTemplate\\\"> </ng-container>\\n        </div>\\n      </div>\\n      <div class=\\\"ngx-table__column-resizer\\\" *ngIf=\\\"config.resizeColumn && !last\\\"></div>\\n    </th>\\n  </ng-container>\\n  <th\\n    *ngIf=\\\"\\n      config.additionalActions ||\\n      config.detailsTemplate ||\\n      config.collapseAllRows ||\\n      config.groupRows\\n    \\\"\\n    class=\\\"ngx-table__header-cell-additional-actions\\\"\\n  >\\n    <div class=\\\"ngx-dropdown\\\" #additionalActionMenu *ngIf=\\\"config.additionalActions\\\">\\n      <a class=\\\"ngx-btn ngx-btn-link\\\" (click)=\\\"showMenu()\\\">\\n        <span class=\\\"ngx-icon ngx-icon-menu\\\"></span>\\n      </a>\\n      <ul class=\\\"ngx-menu ngx-table__table-menu\\\" *ngIf=\\\"menuActive\\\">\\n        <ng-container\\n          *ngIf=\\\"additionalActionsTemplate\\\"\\n          [ngTemplateOutlet]=\\\"additionalActionsTemplate\\\"\\n        >\\n        </ng-container>\\n      </ul>\\n    </div>\\n  </th>\\n</tr>\\n<tr *ngIf=\\\"config.searchEnabled && !filtersTemplate\\\" class=\\\"ngx-table__sort-header\\\">\\n  <th *ngIf=\\\"config.checkboxes || config.radio\\\"></th>\\n  <ng-container *ngFor=\\\"let column of columns; let colIndex = index\\\">\\n    <th\\n      [ngClass]=\\\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\\\"\\n      [class.pinned-left]=\\\"column.pinned\\\"\\n      [style.left]=\\\"styleService.pinnedWidth(column.pinned, colIndex)\\\"\\n    >\\n      <table-header\\n        *ngIf=\\\"getColumnDefinition(column)\\\"\\n        (update)=\\\"onSearch($event)\\\"\\n        [column]=\\\"column\\\"\\n      >\\n      </table-header>\\n    </th>\\n  </ng-container>\\n  <th *ngIf=\\\"config.additionalActions || config.detailsTemplate\\\"></th>\\n</tr>\\n<ng-container *ngIf=\\\"filtersTemplate\\\">\\n  <tr>\\n    <ng-container [ngTemplateOutlet]=\\\"filtersTemplate\\\"> </ng-container>\\n  </tr>\\n</ng-container>\\n\" }]\n        }], ctorParameters: function () { return [{ type: StyleService }]; }, propDecorators: { config: [{\n                type: Input\n            }], columns: [{\n                type: Input\n            }], sortKey: [{\n                type: Input\n            }], sortState: [{\n                type: Input\n            }], selectAllTemplate: [{\n                type: Input\n            }], filtersTemplate: [{\n                type: Input\n            }], additionalActionsTemplate: [{\n                type: Input\n            }], filter: [{\n                type: Output\n            }], order: [{\n                type: Output\n            }], selectAll: [{\n                type: Output\n            }], event: [{\n                type: Output\n            }], th: [{\n                type: ViewChild,\n                args: ['th']\n            }], headerDropdown: [{\n                type: ViewChildren,\n                args: ['headerDropdown']\n            }], additionalActionMenu: [{\n                type: ViewChild,\n                args: ['additionalActionMenu']\n            }], onClick: [{\n                type: HostListener,\n                args: ['document:click', ['$event.target']]\n            }] } });\n\nclass PaginationComponent {\n    constructor() {\n        this.updateRange = new EventEmitter();\n        this.ranges = [5, 10, 25, 50, 100];\n        this.showRange = false;\n        this.screenReaderPaginationLabel = 'Pagination';\n        this.screenReaderPageLabel = 'page';\n        this.screenReaderCurrentLabel = 'You are on page';\n        this.previousLabel = '';\n        this.nextLabel = '';\n        this.directionLinks = true;\n    }\n    onClick(targetElement) {\n        if (this.paginationRange && !this.paginationRange.nativeElement.contains(targetElement)) {\n            this.showRange = false;\n        }\n    }\n    ngOnChanges(changes) {\n        const { config } = changes;\n        if (config && config.currentValue) {\n            this.selectedLimit = this.config.rows;\n        }\n    }\n    onPageChange(page) {\n        this.updateRange.emit({\n            page,\n            limit: this.selectedLimit,\n        });\n    }\n    changeLimit(limit, callFromAPI) {\n        if (!callFromAPI) {\n            this.showRange = !this.showRange;\n        }\n        this.selectedLimit = limit;\n        this.updateRange.emit({\n            page: 1,\n            limit,\n        });\n    }\n}\nPaginationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: PaginationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPaginationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: PaginationComponent, selector: \"pagination\", inputs: { pagination: \"pagination\", config: \"config\", id: \"id\" }, outputs: { updateRange: \"updateRange\" }, host: { listeners: { \"document:click\": \"onClick($event.target)\" } }, viewQueries: [{ propertyName: \"paginationDirective\", first: true, predicate: [\"paginationDirective\"], descendants: true, static: true }, { propertyName: \"paginationRange\", first: true, predicate: [\"paginationRange\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<div\\n  class=\\\"ngx-pagination-wrapper\\\"\\n  [style.display]=\\\"config.paginationEnabled ? '' : 'none'\\\"\\n  [class.ngx-table__table--dark-pagination-wrapper]=\\\"config.tableLayout.theme === 'dark'\\\"\\n>\\n  <div class=\\\"ngx-pagination-steps\\\">\\n    <pagination-template\\n      #paginationDirective=\\\"paginationApi\\\"\\n      id=\\\"pagination-controls\\\"\\n      [id]=\\\"id\\\"\\n      [class.ngx-table__table--dark-pagination]=\\\"config.tableLayout.theme === 'dark'\\\"\\n      [maxSize]=\\\"config.paginationMaxSize || 5\\\"\\n      (pageChange)=\\\"onPageChange($event)\\\"\\n    >\\n      <ul\\n        class=\\\"ngx-pagination\\\"\\n        role=\\\"navigation\\\"\\n        [attr.aria-label]=\\\"screenReaderPaginationLabel\\\"\\n        [class.responsive]=\\\"true\\\"\\n      >\\n        <li\\n          class=\\\"pagination-previous\\\"\\n          [class.disabled]=\\\"paginationDirective.isFirstPage()\\\"\\n          *ngIf=\\\"directionLinks\\\"\\n        >\\n          <a\\n            tabindex=\\\"0\\\"\\n            *ngIf=\\\"1 < paginationDirective.getCurrent()\\\"\\n            (keyup.enter)=\\\"paginationDirective.previous()\\\"\\n            (click)=\\\"paginationDirective.previous()\\\"\\n            [attr.aria-label]=\\\"previousLabel + ' ' + screenReaderPageLabel\\\"\\n          >\\n            {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n          </a>\\n          <span *ngIf=\\\"paginationDirective.isFirstPage()\\\">\\n            {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n          </span>\\n        </li>\\n        <li class=\\\"small-screen\\\">\\n          {{ paginationDirective.getCurrent() }} / {{ paginationDirective.getLastPage() }}\\n        </li>\\n        <li\\n          [class.current]=\\\"paginationDirective.getCurrent() === page.value\\\"\\n          [class.ellipsis]=\\\"page.label === '...'\\\"\\n          *ngFor=\\\"let page of paginationDirective.pages\\\"\\n        >\\n          <a\\n            tabindex=\\\"0\\\"\\n            (keyup.enter)=\\\"paginationDirective.setCurrent(page.value)\\\"\\n            (click)=\\\"paginationDirective.setCurrent(page.value)\\\"\\n            *ngIf=\\\"paginationDirective.getCurrent() !== page.value\\\"\\n          >\\n            <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n            <span>{{ page.label }}</span>\\n          </a>\\n          <ng-container *ngIf=\\\"paginationDirective.getCurrent() === page.value\\\">\\n            <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n            <span>{{ page.label }}</span>\\n          </ng-container>\\n        </li>\\n        <li\\n          class=\\\"pagination-next\\\"\\n          [class.disabled]=\\\"paginationDirective.isLastPage()\\\"\\n          *ngIf=\\\"directionLinks\\\"\\n        >\\n          <a\\n            tabindex=\\\"0\\\"\\n            *ngIf=\\\"!paginationDirective.isLastPage()\\\"\\n            (keyup.enter)=\\\"paginationDirective.next()\\\"\\n            (click)=\\\"paginationDirective.next()\\\"\\n            [attr.aria-label]=\\\"nextLabel + ' ' + screenReaderPageLabel\\\"\\n          >\\n            {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n          </a>\\n          <span *ngIf=\\\"paginationDirective.isLastPage()\\\">\\n            {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n          </span>\\n        </li>\\n      </ul>\\n    </pagination-template>\\n  </div>\\n  <div\\n    class=\\\"ngx-pagination-range\\\"\\n    #paginationRange\\n    [class.ngx-table__table--dark-pagination-range]=\\\"config.tableLayout.theme === 'dark'\\\"\\n    *ngIf=\\\"config.paginationRangeEnabled\\\"\\n  >\\n    <div class=\\\"ngx-dropdown ngx-pagination-range-dropdown\\\" id=\\\"rowAmount\\\">\\n      <div class=\\\"ngx-btn-group\\\">\\n        <div class=\\\"ngx-pagination-range-dropdown-button\\\" (click)=\\\"showRange = !showRange\\\">\\n          {{selectedLimit}} <i class=\\\"ngx-icon ngx-icon-arrow-down\\\"></i>\\n        </div>\\n        <ul class=\\\"ngx-menu\\\" *ngIf=\\\"showRange\\\">\\n          <li\\n            class=\\\"ngx-pagination-range-dropdown-button-item\\\"\\n            [class.ngx-pagination-range--selected]=\\\"limit === selectedLimit\\\"\\n            (click)=\\\"changeLimit(limit, false)\\\"\\n            *ngFor=\\\"let limit of ranges\\\"\\n          >\\n            <span>{{limit}}</span>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\", directives: [{ type: i1.PaginationControlsDirective, selector: \"pagination-template,[pagination-template]\", inputs: [\"maxSize\", \"id\"], outputs: [\"pageChange\", \"pageBoundsCorrection\"], exportAs: [\"paginationApi\"] }, { type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i5.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: PaginationComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'pagination', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\n  class=\\\"ngx-pagination-wrapper\\\"\\n  [style.display]=\\\"config.paginationEnabled ? '' : 'none'\\\"\\n  [class.ngx-table__table--dark-pagination-wrapper]=\\\"config.tableLayout.theme === 'dark'\\\"\\n>\\n  <div class=\\\"ngx-pagination-steps\\\">\\n    <pagination-template\\n      #paginationDirective=\\\"paginationApi\\\"\\n      id=\\\"pagination-controls\\\"\\n      [id]=\\\"id\\\"\\n      [class.ngx-table__table--dark-pagination]=\\\"config.tableLayout.theme === 'dark'\\\"\\n      [maxSize]=\\\"config.paginationMaxSize || 5\\\"\\n      (pageChange)=\\\"onPageChange($event)\\\"\\n    >\\n      <ul\\n        class=\\\"ngx-pagination\\\"\\n        role=\\\"navigation\\\"\\n        [attr.aria-label]=\\\"screenReaderPaginationLabel\\\"\\n        [class.responsive]=\\\"true\\\"\\n      >\\n        <li\\n          class=\\\"pagination-previous\\\"\\n          [class.disabled]=\\\"paginationDirective.isFirstPage()\\\"\\n          *ngIf=\\\"directionLinks\\\"\\n        >\\n          <a\\n            tabindex=\\\"0\\\"\\n            *ngIf=\\\"1 < paginationDirective.getCurrent()\\\"\\n            (keyup.enter)=\\\"paginationDirective.previous()\\\"\\n            (click)=\\\"paginationDirective.previous()\\\"\\n            [attr.aria-label]=\\\"previousLabel + ' ' + screenReaderPageLabel\\\"\\n          >\\n            {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n          </a>\\n          <span *ngIf=\\\"paginationDirective.isFirstPage()\\\">\\n            {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n          </span>\\n        </li>\\n        <li class=\\\"small-screen\\\">\\n          {{ paginationDirective.getCurrent() }} / {{ paginationDirective.getLastPage() }}\\n        </li>\\n        <li\\n          [class.current]=\\\"paginationDirective.getCurrent() === page.value\\\"\\n          [class.ellipsis]=\\\"page.label === '...'\\\"\\n          *ngFor=\\\"let page of paginationDirective.pages\\\"\\n        >\\n          <a\\n            tabindex=\\\"0\\\"\\n            (keyup.enter)=\\\"paginationDirective.setCurrent(page.value)\\\"\\n            (click)=\\\"paginationDirective.setCurrent(page.value)\\\"\\n            *ngIf=\\\"paginationDirective.getCurrent() !== page.value\\\"\\n          >\\n            <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n            <span>{{ page.label }}</span>\\n          </a>\\n          <ng-container *ngIf=\\\"paginationDirective.getCurrent() === page.value\\\">\\n            <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n            <span>{{ page.label }}</span>\\n          </ng-container>\\n        </li>\\n        <li\\n          class=\\\"pagination-next\\\"\\n          [class.disabled]=\\\"paginationDirective.isLastPage()\\\"\\n          *ngIf=\\\"directionLinks\\\"\\n        >\\n          <a\\n            tabindex=\\\"0\\\"\\n            *ngIf=\\\"!paginationDirective.isLastPage()\\\"\\n            (keyup.enter)=\\\"paginationDirective.next()\\\"\\n            (click)=\\\"paginationDirective.next()\\\"\\n            [attr.aria-label]=\\\"nextLabel + ' ' + screenReaderPageLabel\\\"\\n          >\\n            {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n          </a>\\n          <span *ngIf=\\\"paginationDirective.isLastPage()\\\">\\n            {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n          </span>\\n        </li>\\n      </ul>\\n    </pagination-template>\\n  </div>\\n  <div\\n    class=\\\"ngx-pagination-range\\\"\\n    #paginationRange\\n    [class.ngx-table__table--dark-pagination-range]=\\\"config.tableLayout.theme === 'dark'\\\"\\n    *ngIf=\\\"config.paginationRangeEnabled\\\"\\n  >\\n    <div class=\\\"ngx-dropdown ngx-pagination-range-dropdown\\\" id=\\\"rowAmount\\\">\\n      <div class=\\\"ngx-btn-group\\\">\\n        <div class=\\\"ngx-pagination-range-dropdown-button\\\" (click)=\\\"showRange = !showRange\\\">\\n          {{selectedLimit}} <i class=\\\"ngx-icon ngx-icon-arrow-down\\\"></i>\\n        </div>\\n        <ul class=\\\"ngx-menu\\\" *ngIf=\\\"showRange\\\">\\n          <li\\n            class=\\\"ngx-pagination-range-dropdown-button-item\\\"\\n            [class.ngx-pagination-range--selected]=\\\"limit === selectedLimit\\\"\\n            (click)=\\\"changeLimit(limit, false)\\\"\\n            *ngFor=\\\"let limit of ranges\\\"\\n          >\\n            <span>{{limit}}</span>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\" }]\n        }], propDecorators: { paginationDirective: [{\n                type: ViewChild,\n                args: ['paginationDirective', { static: true }]\n            }], paginationRange: [{\n                type: ViewChild,\n                args: ['paginationRange']\n            }], pagination: [{\n                type: Input\n            }], config: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], updateRange: [{\n                type: Output\n            }], onClick: [{\n                type: HostListener,\n                args: ['document:click', ['$event.target']]\n            }] } });\n\nclass GlobalSearchPipe {\n    transform(array, filter, filteredCountSubject) {\n        filteredCountSubject.next(0);\n        if (typeof array === 'undefined') {\n            return;\n        }\n        if (typeof filter === 'undefined' || Object.keys(filter).length === 0 || filter === '') {\n            filteredCountSubject.next(array.length);\n            return array;\n        }\n        const arr = array.filter((row) => {\n            const element = JSON.stringify(Object.values(row));\n            const strings = filter.split(',');\n            return strings.some((s) => element.toLocaleLowerCase().indexOf(s.trim().toLocaleLowerCase()) > -1);\n        });\n        filteredCountSubject.next(arr.length);\n        return arr;\n    }\n}\nGlobalSearchPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: GlobalSearchPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nGlobalSearchPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: GlobalSearchPipe, name: \"global\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: GlobalSearchPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'global',\n                }]\n        }] });\n\nclass FiltersService {\n    static getPath(p, o) {\n        // https://github.com/dherges/ng-packagr/issues/696\n        /* eslint-disable-next-line */\n        const result = p.reduce((xs, x) => (xs && typeof xs[x] !== 'undefined' ? xs[x] : null), o);\n        return result;\n    }\n}\nFiltersService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: FiltersService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nFiltersService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: FiltersService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: FiltersService, decorators: [{\n            type: Injectable\n        }] });\n\nclass SearchPipe {\n    constructor() {\n        this.filters = {};\n    }\n    transform(array, filter, filteredCountSubject, config) {\n        filteredCountSubject.next(0);\n        if (typeof array === 'undefined') {\n            return;\n        }\n        if (typeof filter === 'undefined') {\n            filteredCountSubject.next(array.length);\n            return array;\n        }\n        filter.forEach((f) => {\n            this.filters[f.key] = f.value.toString().toLocaleLowerCase();\n            if (Object.keys(f).length === 0 || f.value === '') {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete this.filters[f.key];\n            }\n        });\n        if (config && config.groupRows) {\n            return array.map((arr) => this.filterGroup(arr, filteredCountSubject));\n        }\n        return this.filterGroup(array, filteredCountSubject);\n    }\n    filterGroup(array, filteredCountSubject) {\n        const arr = array.filter((obj) => {\n            return Object.keys(this.filters).every((c) => {\n                const split = c.split('.');\n                const val = FiltersService.getPath(split, obj);\n                const element = typeof val === 'object' ? JSON.stringify(val) : val.toString().toLocaleLowerCase();\n                const strings = this.filters[c].split(',');\n                return strings.some((s) => element.indexOf(s.trim()) > -1);\n            });\n        });\n        filteredCountSubject.next(arr.length);\n        return arr;\n    }\n}\nSearchPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: SearchPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nSearchPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: SearchPipe, name: \"search\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: SearchPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'search',\n                }]\n        }] });\n\nclass SortPipe {\n    constructor() {\n        this.defaultArray = [];\n    }\n    static isNaN(aV, bV) {\n        return isNaN(parseFloat(aV)) || !isFinite(aV) || isNaN(parseFloat(bV)) || !isFinite(bV);\n    }\n    static compare(a, b, key) {\n        const split = key.split('.');\n        const aPath = FiltersService.getPath(split, a);\n        const bPath = FiltersService.getPath(split, b);\n        const aValue = (aPath + '').toLowerCase();\n        const bValue = (bPath + '').toLowerCase();\n        if (SortPipe.isNaN(aPath, bPath)) {\n            return aValue.localeCompare(bValue);\n        }\n        if (parseFloat(aPath) < parseFloat(bPath)) {\n            return -1;\n        }\n        if (parseFloat(aPath) > parseFloat(bPath)) {\n            return 1;\n        }\n        return 0;\n    }\n    transform(array, filter, config) {\n        if (this.defaultArray.length === 0) {\n            this.defaultArray = array;\n        }\n        if (!filter.key || filter.key === '') {\n            return array;\n        }\n        if (filter.order === '') {\n            return this.defaultArray;\n        }\n        if (filter.order === 'asc') {\n            return this.sortAsc(array, filter, config);\n        }\n        return this.sortDesc(array, filter, config);\n    }\n    sortAsc(array, filter, config) {\n        if (config && config.groupRows) {\n            return array.map((arr) => arr.sort((a, b) => SortPipe.compare(a, b, filter.key)));\n        }\n        return array.sort((a, b) => SortPipe.compare(a, b, filter.key));\n    }\n    sortDesc(array, filter, config) {\n        if (config && config.groupRows) {\n            return array.map((arr) => arr.sort((a, b) => SortPipe.compare(b, a, filter.key)));\n        }\n        return array.sort((a, b) => SortPipe.compare(b, a, filter.key));\n    }\n}\nSortPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: SortPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nSortPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: SortPipe, name: \"sort\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: SortPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'sort',\n                }]\n        }] });\n\nclass RenderPipe {\n    transform(row, key) {\n        const split = key.split('.');\n        return FiltersService.getPath(split, row);\n    }\n}\nRenderPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: RenderPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nRenderPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: RenderPipe, name: \"render\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: RenderPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'render',\n                }]\n        }] });\n\nclass BaseComponent {\n    constructor(cdr, scrollDispatcher, styleService) {\n        this.cdr = cdr;\n        this.scrollDispatcher = scrollDispatcher;\n        this.styleService = styleService;\n        this.unsubscribe = new Subject();\n        this.filterCount = -1;\n        this.filteredCountSubject = new Subject();\n        this.tableClass = null;\n        this.grouped = [];\n        this.isSelected = false;\n        this.page = 1;\n        this.count = 0;\n        this.sortState = new Map();\n        this.sortKey = null;\n        this.rowContextMenuPosition = {\n            top: null,\n            left: null,\n            value: null,\n        };\n        this.sortBy = {\n            key: '',\n            order: 'asc',\n        };\n        this.selectedDetailsTemplateRowId = new Set();\n        this.selectedCheckboxes = new Set();\n        this.id = 'table';\n        this.event = new EventEmitter();\n        this.filteredCountSubject.pipe(takeUntil(this.unsubscribe)).subscribe((count) => {\n            setTimeout(() => {\n                this.filterCount = count;\n                this.cdr.detectChanges();\n            });\n        });\n    }\n    onContextMenuClick(targetElement) {\n        if (this.contextMenu && !this.contextMenu.nativeElement.contains(targetElement)) {\n            this.rowContextMenuPosition = {\n                top: null,\n                left: null,\n                value: null,\n            };\n        }\n    }\n    ngOnInit() {\n        if (!this.columns) {\n            console.error('[columns] property required!');\n        }\n        if (this.configuration) {\n            this.config = this.configuration;\n        }\n        else {\n            this.config = DefaultConfigService.config;\n        }\n        this.limit = this.config.rows;\n        if (this.groupRowsBy) {\n            this.grouped = GroupRowsService.doGroupRows(this.data, this.groupRowsBy);\n        }\n        this.doDecodePersistedState();\n    }\n    ngOnDestroy() {\n        this.unsubscribe.next();\n        this.unsubscribe.complete();\n    }\n    ngAfterViewInit() {\n        const throttleValue = this.config.infiniteScrollThrottleTime\n            ? this.config.infiniteScrollThrottleTime\n            : 200;\n        this.scrollDispatcher\n            .scrolled()\n            .pipe(throttleTime(throttleValue), filter((event) => {\n            return (!!event &&\n                this.viewPort &&\n                this.viewPort.getRenderedRange().end === this.viewPort.getDataLength());\n        }), takeUntil(this.unsubscribe))\n            .subscribe(() => {\n            this.emitEvent(Event.onInfiniteScrollEnd, null);\n        });\n    }\n    ngOnChanges(changes) {\n        const { configuration, data, pagination, groupRowsBy } = changes;\n        this.toggleRowIndex = changes.toggleRowIndex;\n        if (configuration && configuration.currentValue) {\n            this.config = configuration.currentValue;\n        }\n        if (data && data.currentValue) {\n            this.doApplyData(data);\n        }\n        if (pagination && pagination.currentValue) {\n            const { count, limit, offset } = pagination.currentValue;\n            this.count = count;\n            this.limit = limit;\n            this.page = offset;\n        }\n        if (groupRowsBy && groupRowsBy.currentValue) {\n            this.grouped = GroupRowsService.doGroupRows(this.data, this.groupRowsBy);\n        }\n        if (this.toggleRowIndex && this.toggleRowIndex.currentValue) {\n            const row = this.toggleRowIndex.currentValue;\n            this.collapseRow(row.index);\n        }\n    }\n    orderBy(column) {\n        if (typeof column.orderEnabled !== 'undefined' && !column.orderEnabled) {\n            return;\n        }\n        this.sortKey = column.key;\n        if (!this.config.orderEnabled || this.sortKey === '') {\n            return;\n        }\n        this.setColumnOrder(column);\n        if (!this.config.orderEventOnly && !column.orderEventOnly) {\n            this.sortBy.key = this.sortKey;\n            this.sortBy.order = this.sortState.get(this.sortKey);\n        }\n        else {\n            this.sortBy.key = '';\n            this.sortBy.order = '';\n        }\n        if (!this.config.serverPagination) {\n            this.data = [...this.data];\n            this.sortBy = Object.assign({}, this.sortBy);\n        }\n        const value = {\n            key: this.sortKey,\n            order: this.sortState.get(this.sortKey),\n        };\n        this.emitEvent(Event.onOrder, value);\n    }\n    onClick($event, row, key, colIndex, rowIndex) {\n        if (this.config.selectRow) {\n            this.selectedRow = rowIndex;\n        }\n        if (this.config.selectCol && colIndex) {\n            this.selectedCol = colIndex;\n        }\n        if (this.config.selectCell && colIndex) {\n            this.selectedRow = rowIndex;\n            this.selectedCol = colIndex;\n        }\n        if (this.config.clickEvent) {\n            const value = {\n                event: $event,\n                row,\n                key,\n                rowId: rowIndex,\n                colId: colIndex,\n            };\n            this.emitEvent(Event.onClick, value);\n        }\n    }\n    onDoubleClick($event, row, key, colIndex, rowIndex) {\n        const value = {\n            event: $event,\n            row,\n            key,\n            rowId: rowIndex,\n            colId: colIndex,\n        };\n        this.emitEvent(Event.onDoubleClick, value);\n    }\n    onCheckboxSelect($event, row, rowIndex) {\n        const value = {\n            event: $event,\n            row,\n            rowId: rowIndex,\n        };\n        this.emitEvent(Event.onCheckboxSelect, value);\n    }\n    onRadioSelect($event, row, rowIndex) {\n        const value = {\n            event: $event,\n            row,\n            rowId: rowIndex,\n        };\n        this.emitEvent(Event.onRadioSelect, value);\n    }\n    onSelectAll() {\n        this.isSelected = !this.isSelected;\n        this.emitEvent(Event.onSelectAll, this.isSelected);\n    }\n    onSearch($event) {\n        if (!this.config.serverPagination) {\n            this.term = $event;\n        }\n        this.emitEvent(Event.onSearch, $event);\n    }\n    onGlobalSearch(value) {\n        if (!this.config.serverPagination) {\n            this.globalSearchTerm = value;\n        }\n        this.emitEvent(Event.onGlobalSearch, value);\n    }\n    onPagination(pagination) {\n        this.page = pagination.page;\n        this.limit = pagination.limit;\n        this.emitEvent(Event.onPagination, pagination);\n    }\n    toggleCheckbox(rowIndex) {\n        /* eslint-disable @typescript-eslint/no-unused-expressions */\n        this.selectedCheckboxes.has(rowIndex)\n            ? this.selectedCheckboxes.delete(rowIndex)\n            : this.selectedCheckboxes.add(rowIndex);\n    }\n    collapseRow(rowIndex) {\n        if (this.selectedDetailsTemplateRowId.has(rowIndex)) {\n            this.selectedDetailsTemplateRowId.delete(rowIndex);\n            this.emitEvent(Event.onRowCollapsedHide, rowIndex);\n        }\n        else {\n            this.selectedDetailsTemplateRowId.add(rowIndex);\n            this.emitEvent(Event.onRowCollapsedShow, rowIndex);\n        }\n    }\n    doDecodePersistedState() {\n        if (!this.config.persistState) {\n            return;\n        }\n        const pagination = localStorage.getItem(Event.onPagination);\n        const sort = localStorage.getItem(Event.onOrder);\n        const search = localStorage.getItem(Event.onSearch);\n        if (pagination) {\n            this.onPagination(JSON.parse(pagination));\n        }\n        if (sort) {\n            const { key, order } = JSON.parse(sort);\n            this.bindApi({\n                type: API.sortBy,\n                value: { column: key, order },\n            });\n        }\n        if (search) {\n            this.bindApi({\n                type: API.setInputValue,\n                value: JSON.parse(search),\n            });\n        }\n    }\n    isRowCollapsed(rowIndex) {\n        if (this.config.collapseAllRows) {\n            return true;\n        }\n        return this.selectedDetailsTemplateRowId.has(rowIndex);\n    }\n    get loadingHeight() {\n        const table = document.getElementById(this.id);\n        if (table && table.rows && table.rows.length > 3) {\n            const searchEnabled = this.config.searchEnabled ? 1 : 0;\n            const headerEnabled = this.config.headerEnabled ? 1 : 0;\n            const borderTrHeight = 1;\n            const borderDivHeight = 2;\n            return ((table.rows.length - searchEnabled - headerEnabled) *\n                (table.rows[3].offsetHeight - borderTrHeight) -\n                borderDivHeight);\n        }\n        return 30;\n    }\n    get arrowDefinition() {\n        return this.config.showDetailsArrow || typeof this.config.showDetailsArrow === 'undefined';\n    }\n    onRowContextMenu($event, row, key, colIndex, rowIndex) {\n        if (!this.config.showContextMenu) {\n            return;\n        }\n        $event.preventDefault();\n        const value = {\n            event: $event,\n            row,\n            key,\n            rowId: rowIndex,\n            colId: colIndex,\n        };\n        this.rowContextMenuPosition = {\n            top: `${$event.pageY - 10}px`,\n            left: `${$event.pageX - 10}px`,\n            value,\n        };\n        this.emitEvent(Event.onRowContextMenu, value);\n    }\n    doApplyData(data) {\n        const order = this.columns.find((c) => !!c.orderBy);\n        if (order) {\n            this.sortState.set(this.sortKey, order.orderBy === 'asc' ? 'desc' : 'asc');\n            this.orderBy(order);\n        }\n        else {\n            this.data = [...data.currentValue];\n        }\n    }\n    onDragStart(event) {\n        this.emitEvent(Event.onReorderStart, event);\n    }\n    onDrop(event) {\n        this.emitEvent(Event.onRowDrop, event);\n        moveItemInArray(this.data, event.previousIndex, event.currentIndex);\n    }\n    // DO NOT REMOVE. It is called from parent component. See src/app/demo/api-doc/api-doc.component.ts\n    apiEvent(event) {\n        return this.bindApi(event);\n    }\n    /* eslint-disable */\n    bindApi(event) {\n        switch (event.type) {\n            case API.rowContextMenuClicked:\n                this.rowContextMenuPosition = {\n                    top: null,\n                    left: null,\n                    value: null,\n                };\n                break;\n            case API.toolPanelClicked:\n                // TODO\n                break;\n            case API.toggleRowIndex:\n                this.collapseRow(event.value);\n                break;\n            case API.toggleCheckbox:\n                this.toggleCheckbox(event.value);\n                break;\n            case API.setInputValue:\n                if (this.config.searchEnabled) {\n                    event.value.forEach((input) => {\n                        const element = document.getElementById(`search_${input.key}`);\n                        if (!element) {\n                            console.error(`Column '${input.key}' not available in the DOM. Have you misspelled a name?`);\n                        }\n                        else {\n                            element.value = input.value;\n                        }\n                    });\n                }\n                this.onSearch(event.value);\n                this.cdr.detectChanges();\n                break;\n            case API.onGlobalSearch:\n                this.onGlobalSearch(event.value);\n                this.cdr.detectChanges();\n                break;\n            case API.setRowClass:\n                if (Array.isArray(event.value)) {\n                    event.value.forEach((val) => this.styleService.setRowClass(val));\n                    break;\n                }\n                this.styleService.setRowClass(event.value);\n                this.cdr.detectChanges();\n                break;\n            case API.setCellClass:\n                if (Array.isArray(event.value)) {\n                    event.value.forEach((val) => this.styleService.setCellClass(val));\n                    break;\n                }\n                this.styleService.setCellClass(event.value);\n                break;\n            case API.setRowStyle:\n                if (Array.isArray(event.value)) {\n                    event.value.forEach((val) => this.styleService.setRowStyle(val));\n                    break;\n                }\n                this.styleService.setRowStyle(event.value);\n                break;\n            case API.setCellStyle:\n                if (Array.isArray(event.value)) {\n                    event.value.forEach((val) => this.styleService.setCellStyle(val));\n                    break;\n                }\n                this.styleService.setCellStyle(event.value);\n                break;\n            case API.setTableClass:\n                this.tableClass = event.value;\n                this.cdr.detectChanges();\n                break;\n            case API.getPaginationTotalItems:\n                return this.paginationComponent.paginationDirective.getTotalItems();\n            case API.getPaginationCurrentPage:\n                return this.paginationComponent.paginationDirective.getCurrent();\n            case API.getPaginationLastPage:\n                return this.paginationComponent.paginationDirective.getLastPage();\n            case API.getNumberOfRowsPerPage:\n                return this.paginationComponent.paginationDirective.isLastPage()\n                    ? this.paginationComponent.paginationDirective.getTotalItems() % this.limit\n                    : this.limit;\n            case API.setPaginationCurrentPage:\n                this.paginationComponent.paginationDirective.setCurrent(event.value);\n                break;\n            case API.setPaginationRange:\n                this.paginationComponent.ranges = event.value;\n                break;\n            case API.setPaginationPreviousLabel:\n                this.paginationComponent.previousLabel = event.value;\n                break;\n            case API.setPaginationNextLabel:\n                this.paginationComponent.nextLabel = event.value;\n                break;\n            case API.setPaginationDisplayLimit:\n                this.paginationComponent.changeLimit(event.value, true);\n                break;\n            case API.sortBy:\n                const column = { title: '', key: event.value.column, orderBy: event.value.order };\n                this.orderBy(column);\n                this.cdr.detectChanges();\n                break;\n            default:\n                break;\n        }\n    }\n    setColumnOrder(column) {\n        const key = column.key;\n        switch (this.sortState.get(key)) {\n            case '':\n            case undefined:\n                this.sortState.set(key, column.orderBy || 'desc');\n                break;\n            case 'asc':\n                this.config.threeWaySort ? this.sortState.set(key, '') : this.sortState.set(key, 'desc');\n                break;\n            case 'desc':\n                this.sortState.set(key, 'asc');\n                break;\n        }\n        if (this.sortState.size > 1) {\n            const temp = this.sortState.get(key);\n            this.sortState.clear();\n            this.sortState.set(key, temp);\n        }\n    }\n    emitEvent(event, value) {\n        this.event.emit({ event, value });\n        if (this.config.persistState) {\n            localStorage.setItem(event, JSON.stringify(value));\n        }\n        if (this.config.logger) {\n            // eslint-disable-next-line no-console\n            console.log({ event, value });\n        }\n    }\n}\nBaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: BaseComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$1.ScrollDispatcher }, { token: StyleService }], target: i0.ɵɵFactoryTarget.Component });\nBaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: BaseComponent, selector: \"ngx-table\", inputs: { configuration: \"configuration\", data: \"data\", pagination: \"pagination\", groupRowsBy: \"groupRowsBy\", id: \"id\", toggleRowIndex: \"toggleRowIndex\", detailsTemplate: \"detailsTemplate\", summaryTemplate: \"summaryTemplate\", groupRowsHeaderTemplate: \"groupRowsHeaderTemplate\", filtersTemplate: \"filtersTemplate\", selectAllTemplate: \"selectAllTemplate\", noResultsTemplate: \"noResultsTemplate\", loadingTemplate: \"loadingTemplate\", additionalActionsTemplate: \"additionalActionsTemplate\", rowContextMenu: \"rowContextMenu\", columns: \"columns\" }, outputs: { event: \"event\" }, host: { listeners: { \"document:click\": \"onContextMenuClick($event.target)\" } }, providers: [DefaultConfigService, GroupRowsService, StyleService], queries: [{ propertyName: \"rowTemplate\", first: true, predicate: TemplateRef, descendants: true, static: true }], viewQueries: [{ propertyName: \"paginationComponent\", first: true, predicate: [\"paginationComponent\"], descendants: true }, { propertyName: \"contextMenu\", first: true, predicate: [\"contextMenu\"], descendants: true }, { propertyName: \"viewPort\", first: true, predicate: CdkVirtualScrollViewport, descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"ngx-container\\\" [class.ngx-container--dark]=\\\"config.tableLayout.theme === 'dark'\\\">\\n  <table\\n    [id]=\\\"id\\\"\\n    [ngClass]=\\\"tableClass === null || tableClass === '' ? 'ngx-table' : tableClass\\\"\\n    [class.ngx-table__table--tiny]=\\\"config.tableLayout.style === 'tiny'\\\"\\n    [class.ngx-table__table--normal]=\\\"config.tableLayout.style === 'normal'\\\"\\n    [class.ngx-table__table--big]=\\\"config.tableLayout.style === 'big'\\\"\\n    [class.ngx-table__table--borderless]=\\\"config.tableLayout.borderless\\\"\\n    [class.ngx-table__table--dark]=\\\"config.tableLayout.theme === 'dark'\\\"\\n    [class.ngx-table__table--hoverable]=\\\"config.tableLayout.hover\\\"\\n    [class.ngx-table__table--striped]=\\\"config.tableLayout.striped\\\"\\n    [class.ngx-table__horizontal-scroll]=\\\"config.horizontalScroll && !config.isLoading\\\"\\n  >\\n    <thead\\n      [class.ngx-infinite-scroll-viewport-thead]=\\\"config.infiniteScroll\\\"\\n      table-thead\\n      [config]=\\\"config\\\"\\n      [sortKey]=\\\"sortKey\\\"\\n      [sortState]=\\\"sortState\\\"\\n      [selectAllTemplate]=\\\"selectAllTemplate\\\"\\n      [filtersTemplate]=\\\"filtersTemplate\\\"\\n      [additionalActionsTemplate]=\\\"additionalActionsTemplate\\\"\\n      [columns]=\\\"columns\\\"\\n      (selectAll)=\\\"onSelectAll()\\\"\\n      (filter)=\\\"onSearch($event)\\\"\\n      (order)=\\\"orderBy($event)\\\"\\n      (event)=\\\"emitEvent($event.event, $event.value)\\\"\\n    ></thead>\\n    <tbody *ngIf=\\\"data && !config.isLoading && !config.rowReorder\\\">\\n      <ng-container *ngIf=\\\"rowTemplate\\\">\\n        <ul\\n          class=\\\"ngx-table__table-row-context-menu\\\"\\n          [ngStyle]=\\\"{\\n            position: 'absolute',\\n            top: rowContextMenuPosition.top,\\n            left: rowContextMenuPosition.left\\n          }\\\"\\n          *ngIf=\\\"rowContextMenuPosition.top\\\"\\n        >\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"rowContextMenu\\\"\\n            [ngTemplateOutletContext]=\\\"{ $implicit: rowContextMenuPosition.value }\\\"\\n          >\\n          </ng-container>\\n        </ul>\\n        <ng-container *ngIf=\\\"!config.infiniteScroll\\\">\\n          <ng-container\\n            *ngFor=\\\"\\n              let row of data\\n                | sort: sortBy\\n                | search: term:filteredCountSubject\\n                | global: globalSearchTerm:filteredCountSubject\\n                | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\\n              let rowIndex = index\\n            \\\"\\n          >\\n            <tr\\n              (click)=\\\"onClick($event, row, '', null, rowIndex)\\\"\\n              #contextMenu\\n              (contextmenu)=\\\"onRowContextMenu($event, row, '', null, rowIndex)\\\"\\n              (dblclick)=\\\"onDoubleClick($event, row, '', null, rowIndex)\\\"\\n              [class.ngx-table__table-row--selected]=\\\"\\n                rowIndex === selectedRow && !config.selectCell\\n              \\\"\\n            >\\n              <ng-container\\n                [ngTemplateOutlet]=\\\"rowTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n              >\\n              </ng-container>\\n              <td *ngIf=\\\"config.detailsTemplate\\\">\\n                <span\\n                  class=\\\"ngx-icon\\\"\\n                  *ngIf=\\\"arrowDefinition\\\"\\n                  [ngClass]=\\\"\\n                    isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\\n                  \\\"\\n                  (click)=\\\"collapseRow(rowIndex)\\\"\\n                >\\n                </span>\\n              </td>\\n            </tr>\\n            <tr\\n              *ngIf=\\\"\\n                (config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) ||\\n                config.collapseAllRows\\n              \\\"\\n            >\\n              <td [attr.colspan]=\\\"columns.length + 1\\\">\\n                <ng-container\\n                  [ngTemplateOutlet]=\\\"detailsTemplate\\\"\\n                  [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n                >\\n                </ng-container>\\n              </td>\\n            </tr>\\n          </ng-container>\\n        </ng-container>\\n        <cdk-virtual-scroll-viewport\\n          itemSize=\\\"50\\\"\\n          *ngIf=\\\"config.infiniteScroll\\\"\\n          class=\\\"ngx-infinite-scroll-viewport\\\"\\n        >\\n          <ng-container\\n            *cdkVirtualFor=\\\"\\n              let row of data\\n                | sort: sortBy\\n                | search: term:filteredCountSubject\\n                | global: globalSearchTerm:filteredCountSubject;\\n              let rowIndex = index\\n            \\\"\\n          >\\n            <tr\\n              (click)=\\\"onClick($event, row, '', null, rowIndex)\\\"\\n              #contextMenu\\n              (contextmenu)=\\\"onRowContextMenu($event, row, '', null, rowIndex)\\\"\\n              (dblclick)=\\\"onDoubleClick($event, row, '', null, rowIndex)\\\"\\n              [class.ngx-table__table-row--selected]=\\\"\\n                rowIndex === selectedRow && !config.selectCell\\n              \\\"\\n            >\\n              <ng-container\\n                [ngTemplateOutlet]=\\\"rowTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n              >\\n              </ng-container>\\n              <td *ngIf=\\\"config.detailsTemplate\\\">\\n                <span\\n                  class=\\\"ngx-icon\\\"\\n                  *ngIf=\\\"arrowDefinition\\\"\\n                  [ngClass]=\\\"\\n                    isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\\n                  \\\"\\n                  (click)=\\\"collapseRow(rowIndex)\\\"\\n                >\\n                </span>\\n              </td>\\n            </tr>\\n            <tr\\n              *ngIf=\\\"\\n                (config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) ||\\n                config.collapseAllRows\\n              \\\"\\n            >\\n              <td [attr.colspan]=\\\"columns.length + 1\\\">\\n                <ng-container\\n                  [ngTemplateOutlet]=\\\"detailsTemplate\\\"\\n                  [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n                >\\n                </ng-container>\\n              </td>\\n            </tr>\\n          </ng-container>\\n        </cdk-virtual-scroll-viewport>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"!rowTemplate && !config.groupRows\\\">\\n        <ul\\n          class=\\\"ngx-table__table-row-context-menu\\\"\\n          [ngStyle]=\\\"{\\n            position: 'absolute',\\n            top: rowContextMenuPosition.top,\\n            left: rowContextMenuPosition.left\\n          }\\\"\\n          *ngIf=\\\"rowContextMenuPosition.top\\\"\\n        >\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"rowContextMenu\\\"\\n            [ngTemplateOutletContext]=\\\"{ $implicit: rowContextMenuPosition.value }\\\"\\n          >\\n          </ng-container>\\n        </ul>\\n        <ng-container *ngIf=\\\"!config.infiniteScroll\\\">\\n          <ng-container\\n            *ngFor=\\\"\\n              let row of data\\n                | sort: sortBy\\n                | search: term:filteredCountSubject\\n                | global: globalSearchTerm:filteredCountSubject\\n                | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\\n              let rowIndex = index\\n            \\\"\\n          >\\n            <tr\\n              [class.ngx-table__table-row--selected]=\\\"\\n                rowIndex === selectedRow && !config.selectCell\\n              \\\"\\n            >\\n              <td *ngIf=\\\"config.checkboxes\\\">\\n                <label class=\\\"ngx-form-checkbox\\\">\\n                  <input\\n                    type=\\\"checkbox\\\"\\n                    id=\\\"checkbox-{{ rowIndex }}\\\"\\n                    [checked]=\\\"isSelected || selectedCheckboxes.has(rowIndex)\\\"\\n                    (change)=\\\"onCheckboxSelect($event, row, rowIndex)\\\"\\n                  />\\n                  <em class=\\\"ngx-form-icon\\\"></em>\\n                </label>\\n              </td>\\n              <td *ngIf=\\\"config.radio\\\">\\n                <label>\\n                  <input\\n                    type=\\\"radio\\\"\\n                    id=\\\"radio-{{ rowIndex }}\\\"\\n                    name=\\\"radio\\\"\\n                    (change)=\\\"onRadioSelect($event, row, rowIndex)\\\"\\n                  />\\n                </label>\\n              </td>\\n              <ng-container *ngFor=\\\"let column of columns; let colIndex = index\\\">\\n                <td\\n                  (click)=\\\"onClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                  #contextMenu\\n                  (contextmenu)=\\\"onRowContextMenu($event, row, column.key, colIndex, rowIndex)\\\"\\n                  (dblclick)=\\\"onDoubleClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                  [class.pinned-left]=\\\"column.pinned\\\"\\n                  [ngClass]=\\\"column.cssClass ? column.cssClass.name : ''\\\"\\n                  [style.left]=\\\"styleService.pinnedWidth(column.pinned, colIndex)\\\"\\n                  [class.ngx-table__table-col--selected]=\\\"\\n                    colIndex === selectedCol && !config.selectCell\\n                  \\\"\\n                  [class.ngx-table__table-cell--selected]=\\\"\\n                    colIndex === selectedCol &&\\n                    rowIndex === selectedRow &&\\n                    !config.selectCol &&\\n                    !config.selectRow\\n                  \\\"\\n                >\\n                  <div *ngIf=\\\"!column.cellTemplate\\\">{{ row | render: column.key }}</div>\\n                  <ng-container\\n                    *ngIf=\\\"column.cellTemplate\\\"\\n                    [ngTemplateOutlet]=\\\"column.cellTemplate\\\"\\n                    [ngTemplateOutletContext]=\\\"{\\n                      $implicit: row,\\n                      rowIndex: rowIndex,\\n                      column: column\\n                    }\\\"\\n                  >\\n                  </ng-container>\\n                </td>\\n              </ng-container>\\n              <td *ngIf=\\\"config.additionalActions || config.detailsTemplate\\\">\\n                <span\\n                  class=\\\"ngx-icon\\\"\\n                  *ngIf=\\\"arrowDefinition\\\"\\n                  [ngClass]=\\\"\\n                    isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\\n                  \\\"\\n                  (click)=\\\"collapseRow(rowIndex)\\\"\\n                >\\n                </span>\\n              </td>\\n            </tr>\\n            <tr\\n              *ngIf=\\\"\\n                (config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) ||\\n                config.collapseAllRows\\n              \\\"\\n            >\\n              <td *ngIf=\\\"config.checkboxes || config.radio\\\"></td>\\n              <td [attr.colspan]=\\\"columns.length + 1\\\">\\n                <ng-container\\n                  [ngTemplateOutlet]=\\\"detailsTemplate\\\"\\n                  [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n                >\\n                </ng-container>\\n              </td>\\n            </tr>\\n          </ng-container>\\n        </ng-container>\\n        <!-- infinite scroll -->\\n        <cdk-virtual-scroll-viewport\\n          itemSize=\\\"50\\\"\\n          *ngIf=\\\"config.infiniteScroll\\\"\\n          class=\\\"ngx-infinite-scroll-viewport\\\"\\n        >\\n          <ng-container\\n            *cdkVirtualFor=\\\"\\n              let row of data\\n                | sort: sortBy\\n                | search: term:filteredCountSubject\\n                | global: globalSearchTerm:filteredCountSubject;\\n              let rowIndex = index\\n            \\\"\\n          >\\n            <tr\\n              [class.ngx-table__table-row--selected]=\\\"\\n                rowIndex === selectedRow && !config.selectCell\\n              \\\"\\n            >\\n              <td *ngIf=\\\"config.checkboxes\\\">\\n                <label class=\\\"ngx-form-checkbox\\\">\\n                  <input\\n                    type=\\\"checkbox\\\"\\n                    id=\\\"checkbox-infinite-scroll-{{ rowIndex }}\\\"\\n                    [checked]=\\\"isSelected || selectedCheckboxes.has(rowIndex)\\\"\\n                    (change)=\\\"onCheckboxSelect($event, row, rowIndex)\\\"\\n                  />\\n                  <em class=\\\"ngx-form-icon\\\"></em>\\n                </label>\\n              </td>\\n              <td *ngIf=\\\"config.radio\\\">\\n                <label>\\n                  <input\\n                    type=\\\"radio\\\"\\n                    id=\\\"radio-infinite-scroll-{{ rowIndex }}\\\"\\n                    name=\\\"radio\\\"\\n                    (change)=\\\"onRadioSelect($event, row, rowIndex)\\\"\\n                  />\\n                </label>\\n              </td>\\n              <ng-container *ngFor=\\\"let column of columns; let colIndex = index\\\">\\n                <td\\n                  (click)=\\\"onClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                  #contextMenu\\n                  (contextmenu)=\\\"onRowContextMenu($event, row, column.key, colIndex, rowIndex)\\\"\\n                  (dblclick)=\\\"onDoubleClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                  [class.pinned-left]=\\\"column.pinned\\\"\\n                  [ngClass]=\\\"column.cssClass ? column.cssClass.name : ''\\\"\\n                  [style.left]=\\\"styleService.pinnedWidth(column.pinned, colIndex)\\\"\\n                  [class.ngx-table__table-col--selected]=\\\"\\n                    colIndex === selectedCol && !config.selectCell\\n                  \\\"\\n                  [class.ngx-table__table-cell--selected]=\\\"\\n                    colIndex === selectedCol &&\\n                    rowIndex === selectedRow &&\\n                    !config.selectCol &&\\n                    !config.selectRow\\n                  \\\"\\n                >\\n                  <div *ngIf=\\\"!column.cellTemplate\\\">{{ row | render: column.key }}</div>\\n                  <ng-container\\n                    *ngIf=\\\"column.cellTemplate\\\"\\n                    [ngTemplateOutlet]=\\\"column.cellTemplate\\\"\\n                    [ngTemplateOutletContext]=\\\"{\\n                      $implicit: row,\\n                      rowIndex: rowIndex,\\n                      column: column\\n                    }\\\"\\n                  >\\n                  </ng-container>\\n                </td>\\n              </ng-container>\\n              <td *ngIf=\\\"config.additionalActions || config.detailsTemplate\\\">\\n                <span\\n                  class=\\\"ngx-icon\\\"\\n                  *ngIf=\\\"arrowDefinition\\\"\\n                  [ngClass]=\\\"\\n                    isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\\n                  \\\"\\n                  (click)=\\\"collapseRow(rowIndex)\\\"\\n                >\\n                </span>\\n              </td>\\n            </tr>\\n            <tr\\n              *ngIf=\\\"\\n                (config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) ||\\n                config.collapseAllRows\\n              \\\"\\n            >\\n              <td *ngIf=\\\"config.checkboxes || config.radio\\\"></td>\\n              <td [attr.colspan]=\\\"columns.length + 1\\\">\\n                <ng-container\\n                  [ngTemplateOutlet]=\\\"detailsTemplate\\\"\\n                  [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n                >\\n                </ng-container>\\n              </td>\\n            </tr>\\n          </ng-container>\\n        </cdk-virtual-scroll-viewport>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"!rowTemplate && config.groupRows\\\">\\n        <ng-container\\n          *ngFor=\\\"\\n            let group of grouped\\n              | sort: sortBy:config\\n              | search: term:filteredCountSubject:config\\n              | global: globalSearchTerm:filteredCountSubject\\n              | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\\n            let rowIndex = index\\n          \\\"\\n        >\\n          <tr>\\n            <ng-container *ngIf=\\\"!groupRowsHeaderTemplate\\\">\\n              <td [attr.colspan]=\\\"columns.length\\\">\\n                <div>{{ group[0][groupRowsBy] }} ({{ group.length }})</div>\\n              </td>\\n            </ng-container>\\n            <ng-container\\n              *ngIf=\\\"groupRowsHeaderTemplate\\\"\\n              [ngTemplateOutlet]=\\\"groupRowsHeaderTemplate\\\"\\n              [ngTemplateOutletContext]=\\\"{\\n                total: group.length,\\n                key: groupRowsBy,\\n                value: group[0] ? group[0][groupRowsBy] : '',\\n                group: group,\\n                index: rowIndex\\n              }\\\"\\n            >\\n            </ng-container>\\n            <td>\\n              <span\\n                class=\\\"ngx-icon\\\"\\n                *ngIf=\\\"arrowDefinition\\\"\\n                [ngClass]=\\\"\\n                  isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\\n                \\\"\\n                (click)=\\\"collapseRow(rowIndex)\\\"\\n              >\\n              </span>\\n            </td>\\n          </tr>\\n          <ng-container *ngIf=\\\"selectedDetailsTemplateRowId.has(rowIndex)\\\">\\n            <tr *ngFor=\\\"let row of group\\\">\\n              <td *ngFor=\\\"let column of columns\\\">\\n                {{ row | render: column.key }}\\n                <!-- TODO allow users to add groupRowsTemplateRef -->\\n              </td>\\n              <td></td>\\n            </tr>\\n          </ng-container>\\n        </ng-container>\\n      </ng-container>\\n    </tbody>\\n    <tbody\\n      *ngIf=\\\"data && !config.isLoading && config.rowReorder\\\"\\n      class=\\\"ngx-draggable-row-area\\\"\\n      cdkDropList\\n      (cdkDropListDropped)=\\\"onDrop($event)\\\"\\n    >\\n      <ng-container *ngIf=\\\"!rowTemplate && !config.groupRows\\\">\\n        <ng-container\\n          *ngFor=\\\"\\n            let row of data\\n              | sort: sortBy\\n              | search: term:filteredCountSubject\\n              | global: globalSearchTerm:filteredCountSubject\\n              | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\\n            let rowIndex = index\\n          \\\"\\n        >\\n          <tr class=\\\"ngx-draggable-row\\\"\\n              cdkDrag\\n              (cdkDragStarted)=\\\"onDragStart($event)\\\"\\n              [cdkDragStartDelay]=\\\"config.reorderDelay || 0\\\"\\n              cdkDragLockAxis=\\\"y\\\">\\n            <td *ngIf=\\\"config.checkboxes\\\">\\n              <label class=\\\"ngx-form-checkbox\\\">\\n                <input\\n                  type=\\\"checkbox\\\"\\n                  id=\\\"checkbox-draggable-{{ rowIndex }}\\\"\\n                  [checked]=\\\"isSelected || selectedCheckboxes.has(rowIndex)\\\"\\n                  (change)=\\\"onCheckboxSelect($event, row, rowIndex)\\\"\\n                />\\n                <em class=\\\"ngx-form-icon\\\"></em>\\n              </label>\\n            </td>\\n            <td *ngIf=\\\"config.radio\\\">\\n              <label>\\n                <input\\n                  type=\\\"radio\\\"\\n                  id=\\\"radio-draggable-{{ rowIndex }}\\\"\\n                  name=\\\"radio\\\"\\n                  (change)=\\\"onRadioSelect($event, row, rowIndex)\\\"\\n                />\\n              </label>\\n            </td>\\n            <ng-container *ngFor=\\\"let column of columns; let colIndex = index\\\">\\n              <td\\n                (click)=\\\"onClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                (dblclick)=\\\"onDoubleClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                [class.ngx-table__table-col--selected]=\\\"\\n                  colIndex === selectedCol && !config.selectCell\\n                \\\"\\n                [class.ngx-table__table-cell--selected]=\\\"\\n                  colIndex === selectedCol &&\\n                  rowIndex === selectedRow &&\\n                  !config.selectCol &&\\n                  !config.selectRow\\n                \\\"\\n              >\\n                <div *ngIf=\\\"!column.cellTemplate\\\">{{ row | render: column.key }}</div>\\n                <ng-container\\n                  *ngIf=\\\"column.cellTemplate\\\"\\n                  [ngTemplateOutlet]=\\\"column.cellTemplate\\\"\\n                  [ngTemplateOutletContext]=\\\"{\\n                    $implicit: row,\\n                    rowIndex: rowIndex,\\n                    column: column\\n                  }\\\"\\n                >\\n                </ng-container>\\n              </td>\\n            </ng-container>\\n          </tr>\\n        </ng-container>\\n      </ng-container>\\n    </tbody>\\n    <tbody *ngIf=\\\"filterCount === 0\\\">\\n      <tr class=\\\"ngx-table__body-empty\\\">\\n        <ng-container *ngIf=\\\"noResultsTemplate\\\" [ngTemplateOutlet]=\\\"noResultsTemplate\\\">\\n        </ng-container>\\n        <td [attr.colspan]=\\\"columns && columns.length + 1\\\" *ngIf=\\\"!noResultsTemplate\\\">\\n          <div class=\\\"ngx-table__table-no-results\\\">No results</div>\\n        </td>\\n      </tr>\\n    </tbody>\\n    <tbody *ngIf=\\\"config.isLoading\\\">\\n      <tr class=\\\"ngx-table__body-loading\\\">\\n        <ng-container *ngIf=\\\"loadingTemplate\\\" [ngTemplateOutlet]=\\\"loadingTemplate\\\"> </ng-container>\\n        <td [attr.colspan]=\\\"columns && columns.length + 1\\\" *ngIf=\\\"!loadingTemplate\\\">\\n          <div [style.height.px]=\\\"loadingHeight\\\" class=\\\"ngx-table__table-loader-wrapper\\\">\\n            <div class=\\\"ngx-table__table-loader\\\"></div>\\n          </div>\\n        </td>\\n      </tr>\\n    </tbody>\\n    <tfoot *ngIf=\\\"summaryTemplate\\\">\\n      <tr>\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"summaryTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{ total: data.length, limit: limit, page: page }\\\"\\n        >\\n        </ng-container>\\n      </tr>\\n    </tfoot>\\n  </table>\\n  <pagination\\n    [attr.id]=\\\"'pagination' + id\\\"\\n    [id]=\\\"id\\\"\\n    #paginationComponent\\n    [config]=\\\"config\\\"\\n    [pagination]=\\\"pagination\\\"\\n    (updateRange)=\\\"onPagination($event)\\\"\\n  >\\n  </pagination>\\n</div>\\n\", components: [{ type: TableTHeadComponent, selector: \"[table-thead]\", inputs: [\"config\", \"columns\", \"sortKey\", \"sortState\", \"selectAllTemplate\", \"filtersTemplate\", \"additionalActionsTemplate\"], outputs: [\"filter\", \"order\", \"selectAll\", \"event\"] }, { type: i1$1.CdkVirtualScrollViewport, selector: \"cdk-virtual-scroll-viewport\", inputs: [\"orientation\", \"appendOnly\"], outputs: [\"scrolledIndexChange\"] }, { type: PaginationComponent, selector: \"pagination\", inputs: [\"pagination\", \"config\", \"id\"], outputs: [\"updateRange\"] }], directives: [{ type: i5.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i5.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i5.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i5.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1$1.CdkFixedSizeVirtualScroll, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: [\"itemSize\", \"minBufferPx\", \"maxBufferPx\"] }, { type: i1$1.CdkVirtualForOf, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: [\"cdkVirtualForOf\", \"cdkVirtualForTrackBy\", \"cdkVirtualForTemplate\", \"cdkVirtualForTemplateCacheSize\"] }, { type: i4.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { type: i4.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragData\", \"cdkDragLockAxis\", \"cdkDragRootElement\", \"cdkDragBoundary\", \"cdkDragStartDelay\", \"cdkDragFreeDragPosition\", \"cdkDragDisabled\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragPreviewContainer\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }], pipes: { \"paginate\": i1.PaginatePipe, \"global\": GlobalSearchPipe, \"search\": SearchPipe, \"sort\": SortPipe, \"render\": RenderPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: BaseComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-table', providers: [DefaultConfigService, GroupRowsService, StyleService], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"ngx-container\\\" [class.ngx-container--dark]=\\\"config.tableLayout.theme === 'dark'\\\">\\n  <table\\n    [id]=\\\"id\\\"\\n    [ngClass]=\\\"tableClass === null || tableClass === '' ? 'ngx-table' : tableClass\\\"\\n    [class.ngx-table__table--tiny]=\\\"config.tableLayout.style === 'tiny'\\\"\\n    [class.ngx-table__table--normal]=\\\"config.tableLayout.style === 'normal'\\\"\\n    [class.ngx-table__table--big]=\\\"config.tableLayout.style === 'big'\\\"\\n    [class.ngx-table__table--borderless]=\\\"config.tableLayout.borderless\\\"\\n    [class.ngx-table__table--dark]=\\\"config.tableLayout.theme === 'dark'\\\"\\n    [class.ngx-table__table--hoverable]=\\\"config.tableLayout.hover\\\"\\n    [class.ngx-table__table--striped]=\\\"config.tableLayout.striped\\\"\\n    [class.ngx-table__horizontal-scroll]=\\\"config.horizontalScroll && !config.isLoading\\\"\\n  >\\n    <thead\\n      [class.ngx-infinite-scroll-viewport-thead]=\\\"config.infiniteScroll\\\"\\n      table-thead\\n      [config]=\\\"config\\\"\\n      [sortKey]=\\\"sortKey\\\"\\n      [sortState]=\\\"sortState\\\"\\n      [selectAllTemplate]=\\\"selectAllTemplate\\\"\\n      [filtersTemplate]=\\\"filtersTemplate\\\"\\n      [additionalActionsTemplate]=\\\"additionalActionsTemplate\\\"\\n      [columns]=\\\"columns\\\"\\n      (selectAll)=\\\"onSelectAll()\\\"\\n      (filter)=\\\"onSearch($event)\\\"\\n      (order)=\\\"orderBy($event)\\\"\\n      (event)=\\\"emitEvent($event.event, $event.value)\\\"\\n    ></thead>\\n    <tbody *ngIf=\\\"data && !config.isLoading && !config.rowReorder\\\">\\n      <ng-container *ngIf=\\\"rowTemplate\\\">\\n        <ul\\n          class=\\\"ngx-table__table-row-context-menu\\\"\\n          [ngStyle]=\\\"{\\n            position: 'absolute',\\n            top: rowContextMenuPosition.top,\\n            left: rowContextMenuPosition.left\\n          }\\\"\\n          *ngIf=\\\"rowContextMenuPosition.top\\\"\\n        >\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"rowContextMenu\\\"\\n            [ngTemplateOutletContext]=\\\"{ $implicit: rowContextMenuPosition.value }\\\"\\n          >\\n          </ng-container>\\n        </ul>\\n        <ng-container *ngIf=\\\"!config.infiniteScroll\\\">\\n          <ng-container\\n            *ngFor=\\\"\\n              let row of data\\n                | sort: sortBy\\n                | search: term:filteredCountSubject\\n                | global: globalSearchTerm:filteredCountSubject\\n                | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\\n              let rowIndex = index\\n            \\\"\\n          >\\n            <tr\\n              (click)=\\\"onClick($event, row, '', null, rowIndex)\\\"\\n              #contextMenu\\n              (contextmenu)=\\\"onRowContextMenu($event, row, '', null, rowIndex)\\\"\\n              (dblclick)=\\\"onDoubleClick($event, row, '', null, rowIndex)\\\"\\n              [class.ngx-table__table-row--selected]=\\\"\\n                rowIndex === selectedRow && !config.selectCell\\n              \\\"\\n            >\\n              <ng-container\\n                [ngTemplateOutlet]=\\\"rowTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n              >\\n              </ng-container>\\n              <td *ngIf=\\\"config.detailsTemplate\\\">\\n                <span\\n                  class=\\\"ngx-icon\\\"\\n                  *ngIf=\\\"arrowDefinition\\\"\\n                  [ngClass]=\\\"\\n                    isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\\n                  \\\"\\n                  (click)=\\\"collapseRow(rowIndex)\\\"\\n                >\\n                </span>\\n              </td>\\n            </tr>\\n            <tr\\n              *ngIf=\\\"\\n                (config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) ||\\n                config.collapseAllRows\\n              \\\"\\n            >\\n              <td [attr.colspan]=\\\"columns.length + 1\\\">\\n                <ng-container\\n                  [ngTemplateOutlet]=\\\"detailsTemplate\\\"\\n                  [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n                >\\n                </ng-container>\\n              </td>\\n            </tr>\\n          </ng-container>\\n        </ng-container>\\n        <cdk-virtual-scroll-viewport\\n          itemSize=\\\"50\\\"\\n          *ngIf=\\\"config.infiniteScroll\\\"\\n          class=\\\"ngx-infinite-scroll-viewport\\\"\\n        >\\n          <ng-container\\n            *cdkVirtualFor=\\\"\\n              let row of data\\n                | sort: sortBy\\n                | search: term:filteredCountSubject\\n                | global: globalSearchTerm:filteredCountSubject;\\n              let rowIndex = index\\n            \\\"\\n          >\\n            <tr\\n              (click)=\\\"onClick($event, row, '', null, rowIndex)\\\"\\n              #contextMenu\\n              (contextmenu)=\\\"onRowContextMenu($event, row, '', null, rowIndex)\\\"\\n              (dblclick)=\\\"onDoubleClick($event, row, '', null, rowIndex)\\\"\\n              [class.ngx-table__table-row--selected]=\\\"\\n                rowIndex === selectedRow && !config.selectCell\\n              \\\"\\n            >\\n              <ng-container\\n                [ngTemplateOutlet]=\\\"rowTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n              >\\n              </ng-container>\\n              <td *ngIf=\\\"config.detailsTemplate\\\">\\n                <span\\n                  class=\\\"ngx-icon\\\"\\n                  *ngIf=\\\"arrowDefinition\\\"\\n                  [ngClass]=\\\"\\n                    isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\\n                  \\\"\\n                  (click)=\\\"collapseRow(rowIndex)\\\"\\n                >\\n                </span>\\n              </td>\\n            </tr>\\n            <tr\\n              *ngIf=\\\"\\n                (config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) ||\\n                config.collapseAllRows\\n              \\\"\\n            >\\n              <td [attr.colspan]=\\\"columns.length + 1\\\">\\n                <ng-container\\n                  [ngTemplateOutlet]=\\\"detailsTemplate\\\"\\n                  [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n                >\\n                </ng-container>\\n              </td>\\n            </tr>\\n          </ng-container>\\n        </cdk-virtual-scroll-viewport>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"!rowTemplate && !config.groupRows\\\">\\n        <ul\\n          class=\\\"ngx-table__table-row-context-menu\\\"\\n          [ngStyle]=\\\"{\\n            position: 'absolute',\\n            top: rowContextMenuPosition.top,\\n            left: rowContextMenuPosition.left\\n          }\\\"\\n          *ngIf=\\\"rowContextMenuPosition.top\\\"\\n        >\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"rowContextMenu\\\"\\n            [ngTemplateOutletContext]=\\\"{ $implicit: rowContextMenuPosition.value }\\\"\\n          >\\n          </ng-container>\\n        </ul>\\n        <ng-container *ngIf=\\\"!config.infiniteScroll\\\">\\n          <ng-container\\n            *ngFor=\\\"\\n              let row of data\\n                | sort: sortBy\\n                | search: term:filteredCountSubject\\n                | global: globalSearchTerm:filteredCountSubject\\n                | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\\n              let rowIndex = index\\n            \\\"\\n          >\\n            <tr\\n              [class.ngx-table__table-row--selected]=\\\"\\n                rowIndex === selectedRow && !config.selectCell\\n              \\\"\\n            >\\n              <td *ngIf=\\\"config.checkboxes\\\">\\n                <label class=\\\"ngx-form-checkbox\\\">\\n                  <input\\n                    type=\\\"checkbox\\\"\\n                    id=\\\"checkbox-{{ rowIndex }}\\\"\\n                    [checked]=\\\"isSelected || selectedCheckboxes.has(rowIndex)\\\"\\n                    (change)=\\\"onCheckboxSelect($event, row, rowIndex)\\\"\\n                  />\\n                  <em class=\\\"ngx-form-icon\\\"></em>\\n                </label>\\n              </td>\\n              <td *ngIf=\\\"config.radio\\\">\\n                <label>\\n                  <input\\n                    type=\\\"radio\\\"\\n                    id=\\\"radio-{{ rowIndex }}\\\"\\n                    name=\\\"radio\\\"\\n                    (change)=\\\"onRadioSelect($event, row, rowIndex)\\\"\\n                  />\\n                </label>\\n              </td>\\n              <ng-container *ngFor=\\\"let column of columns; let colIndex = index\\\">\\n                <td\\n                  (click)=\\\"onClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                  #contextMenu\\n                  (contextmenu)=\\\"onRowContextMenu($event, row, column.key, colIndex, rowIndex)\\\"\\n                  (dblclick)=\\\"onDoubleClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                  [class.pinned-left]=\\\"column.pinned\\\"\\n                  [ngClass]=\\\"column.cssClass ? column.cssClass.name : ''\\\"\\n                  [style.left]=\\\"styleService.pinnedWidth(column.pinned, colIndex)\\\"\\n                  [class.ngx-table__table-col--selected]=\\\"\\n                    colIndex === selectedCol && !config.selectCell\\n                  \\\"\\n                  [class.ngx-table__table-cell--selected]=\\\"\\n                    colIndex === selectedCol &&\\n                    rowIndex === selectedRow &&\\n                    !config.selectCol &&\\n                    !config.selectRow\\n                  \\\"\\n                >\\n                  <div *ngIf=\\\"!column.cellTemplate\\\">{{ row | render: column.key }}</div>\\n                  <ng-container\\n                    *ngIf=\\\"column.cellTemplate\\\"\\n                    [ngTemplateOutlet]=\\\"column.cellTemplate\\\"\\n                    [ngTemplateOutletContext]=\\\"{\\n                      $implicit: row,\\n                      rowIndex: rowIndex,\\n                      column: column\\n                    }\\\"\\n                  >\\n                  </ng-container>\\n                </td>\\n              </ng-container>\\n              <td *ngIf=\\\"config.additionalActions || config.detailsTemplate\\\">\\n                <span\\n                  class=\\\"ngx-icon\\\"\\n                  *ngIf=\\\"arrowDefinition\\\"\\n                  [ngClass]=\\\"\\n                    isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\\n                  \\\"\\n                  (click)=\\\"collapseRow(rowIndex)\\\"\\n                >\\n                </span>\\n              </td>\\n            </tr>\\n            <tr\\n              *ngIf=\\\"\\n                (config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) ||\\n                config.collapseAllRows\\n              \\\"\\n            >\\n              <td *ngIf=\\\"config.checkboxes || config.radio\\\"></td>\\n              <td [attr.colspan]=\\\"columns.length + 1\\\">\\n                <ng-container\\n                  [ngTemplateOutlet]=\\\"detailsTemplate\\\"\\n                  [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n                >\\n                </ng-container>\\n              </td>\\n            </tr>\\n          </ng-container>\\n        </ng-container>\\n        <!-- infinite scroll -->\\n        <cdk-virtual-scroll-viewport\\n          itemSize=\\\"50\\\"\\n          *ngIf=\\\"config.infiniteScroll\\\"\\n          class=\\\"ngx-infinite-scroll-viewport\\\"\\n        >\\n          <ng-container\\n            *cdkVirtualFor=\\\"\\n              let row of data\\n                | sort: sortBy\\n                | search: term:filteredCountSubject\\n                | global: globalSearchTerm:filteredCountSubject;\\n              let rowIndex = index\\n            \\\"\\n          >\\n            <tr\\n              [class.ngx-table__table-row--selected]=\\\"\\n                rowIndex === selectedRow && !config.selectCell\\n              \\\"\\n            >\\n              <td *ngIf=\\\"config.checkboxes\\\">\\n                <label class=\\\"ngx-form-checkbox\\\">\\n                  <input\\n                    type=\\\"checkbox\\\"\\n                    id=\\\"checkbox-infinite-scroll-{{ rowIndex }}\\\"\\n                    [checked]=\\\"isSelected || selectedCheckboxes.has(rowIndex)\\\"\\n                    (change)=\\\"onCheckboxSelect($event, row, rowIndex)\\\"\\n                  />\\n                  <em class=\\\"ngx-form-icon\\\"></em>\\n                </label>\\n              </td>\\n              <td *ngIf=\\\"config.radio\\\">\\n                <label>\\n                  <input\\n                    type=\\\"radio\\\"\\n                    id=\\\"radio-infinite-scroll-{{ rowIndex }}\\\"\\n                    name=\\\"radio\\\"\\n                    (change)=\\\"onRadioSelect($event, row, rowIndex)\\\"\\n                  />\\n                </label>\\n              </td>\\n              <ng-container *ngFor=\\\"let column of columns; let colIndex = index\\\">\\n                <td\\n                  (click)=\\\"onClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                  #contextMenu\\n                  (contextmenu)=\\\"onRowContextMenu($event, row, column.key, colIndex, rowIndex)\\\"\\n                  (dblclick)=\\\"onDoubleClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                  [class.pinned-left]=\\\"column.pinned\\\"\\n                  [ngClass]=\\\"column.cssClass ? column.cssClass.name : ''\\\"\\n                  [style.left]=\\\"styleService.pinnedWidth(column.pinned, colIndex)\\\"\\n                  [class.ngx-table__table-col--selected]=\\\"\\n                    colIndex === selectedCol && !config.selectCell\\n                  \\\"\\n                  [class.ngx-table__table-cell--selected]=\\\"\\n                    colIndex === selectedCol &&\\n                    rowIndex === selectedRow &&\\n                    !config.selectCol &&\\n                    !config.selectRow\\n                  \\\"\\n                >\\n                  <div *ngIf=\\\"!column.cellTemplate\\\">{{ row | render: column.key }}</div>\\n                  <ng-container\\n                    *ngIf=\\\"column.cellTemplate\\\"\\n                    [ngTemplateOutlet]=\\\"column.cellTemplate\\\"\\n                    [ngTemplateOutletContext]=\\\"{\\n                      $implicit: row,\\n                      rowIndex: rowIndex,\\n                      column: column\\n                    }\\\"\\n                  >\\n                  </ng-container>\\n                </td>\\n              </ng-container>\\n              <td *ngIf=\\\"config.additionalActions || config.detailsTemplate\\\">\\n                <span\\n                  class=\\\"ngx-icon\\\"\\n                  *ngIf=\\\"arrowDefinition\\\"\\n                  [ngClass]=\\\"\\n                    isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\\n                  \\\"\\n                  (click)=\\\"collapseRow(rowIndex)\\\"\\n                >\\n                </span>\\n              </td>\\n            </tr>\\n            <tr\\n              *ngIf=\\\"\\n                (config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) ||\\n                config.collapseAllRows\\n              \\\"\\n            >\\n              <td *ngIf=\\\"config.checkboxes || config.radio\\\"></td>\\n              <td [attr.colspan]=\\\"columns.length + 1\\\">\\n                <ng-container\\n                  [ngTemplateOutlet]=\\\"detailsTemplate\\\"\\n                  [ngTemplateOutletContext]=\\\"{ $implicit: row, index: rowIndex }\\\"\\n                >\\n                </ng-container>\\n              </td>\\n            </tr>\\n          </ng-container>\\n        </cdk-virtual-scroll-viewport>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"!rowTemplate && config.groupRows\\\">\\n        <ng-container\\n          *ngFor=\\\"\\n            let group of grouped\\n              | sort: sortBy:config\\n              | search: term:filteredCountSubject:config\\n              | global: globalSearchTerm:filteredCountSubject\\n              | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\\n            let rowIndex = index\\n          \\\"\\n        >\\n          <tr>\\n            <ng-container *ngIf=\\\"!groupRowsHeaderTemplate\\\">\\n              <td [attr.colspan]=\\\"columns.length\\\">\\n                <div>{{ group[0][groupRowsBy] }} ({{ group.length }})</div>\\n              </td>\\n            </ng-container>\\n            <ng-container\\n              *ngIf=\\\"groupRowsHeaderTemplate\\\"\\n              [ngTemplateOutlet]=\\\"groupRowsHeaderTemplate\\\"\\n              [ngTemplateOutletContext]=\\\"{\\n                total: group.length,\\n                key: groupRowsBy,\\n                value: group[0] ? group[0][groupRowsBy] : '',\\n                group: group,\\n                index: rowIndex\\n              }\\\"\\n            >\\n            </ng-container>\\n            <td>\\n              <span\\n                class=\\\"ngx-icon\\\"\\n                *ngIf=\\\"arrowDefinition\\\"\\n                [ngClass]=\\\"\\n                  isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\\n                \\\"\\n                (click)=\\\"collapseRow(rowIndex)\\\"\\n              >\\n              </span>\\n            </td>\\n          </tr>\\n          <ng-container *ngIf=\\\"selectedDetailsTemplateRowId.has(rowIndex)\\\">\\n            <tr *ngFor=\\\"let row of group\\\">\\n              <td *ngFor=\\\"let column of columns\\\">\\n                {{ row | render: column.key }}\\n                <!-- TODO allow users to add groupRowsTemplateRef -->\\n              </td>\\n              <td></td>\\n            </tr>\\n          </ng-container>\\n        </ng-container>\\n      </ng-container>\\n    </tbody>\\n    <tbody\\n      *ngIf=\\\"data && !config.isLoading && config.rowReorder\\\"\\n      class=\\\"ngx-draggable-row-area\\\"\\n      cdkDropList\\n      (cdkDropListDropped)=\\\"onDrop($event)\\\"\\n    >\\n      <ng-container *ngIf=\\\"!rowTemplate && !config.groupRows\\\">\\n        <ng-container\\n          *ngFor=\\\"\\n            let row of data\\n              | sort: sortBy\\n              | search: term:filteredCountSubject\\n              | global: globalSearchTerm:filteredCountSubject\\n              | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\\n            let rowIndex = index\\n          \\\"\\n        >\\n          <tr class=\\\"ngx-draggable-row\\\"\\n              cdkDrag\\n              (cdkDragStarted)=\\\"onDragStart($event)\\\"\\n              [cdkDragStartDelay]=\\\"config.reorderDelay || 0\\\"\\n              cdkDragLockAxis=\\\"y\\\">\\n            <td *ngIf=\\\"config.checkboxes\\\">\\n              <label class=\\\"ngx-form-checkbox\\\">\\n                <input\\n                  type=\\\"checkbox\\\"\\n                  id=\\\"checkbox-draggable-{{ rowIndex }}\\\"\\n                  [checked]=\\\"isSelected || selectedCheckboxes.has(rowIndex)\\\"\\n                  (change)=\\\"onCheckboxSelect($event, row, rowIndex)\\\"\\n                />\\n                <em class=\\\"ngx-form-icon\\\"></em>\\n              </label>\\n            </td>\\n            <td *ngIf=\\\"config.radio\\\">\\n              <label>\\n                <input\\n                  type=\\\"radio\\\"\\n                  id=\\\"radio-draggable-{{ rowIndex }}\\\"\\n                  name=\\\"radio\\\"\\n                  (change)=\\\"onRadioSelect($event, row, rowIndex)\\\"\\n                />\\n              </label>\\n            </td>\\n            <ng-container *ngFor=\\\"let column of columns; let colIndex = index\\\">\\n              <td\\n                (click)=\\\"onClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                (dblclick)=\\\"onDoubleClick($event, row, column.key, colIndex, rowIndex)\\\"\\n                [class.ngx-table__table-col--selected]=\\\"\\n                  colIndex === selectedCol && !config.selectCell\\n                \\\"\\n                [class.ngx-table__table-cell--selected]=\\\"\\n                  colIndex === selectedCol &&\\n                  rowIndex === selectedRow &&\\n                  !config.selectCol &&\\n                  !config.selectRow\\n                \\\"\\n              >\\n                <div *ngIf=\\\"!column.cellTemplate\\\">{{ row | render: column.key }}</div>\\n                <ng-container\\n                  *ngIf=\\\"column.cellTemplate\\\"\\n                  [ngTemplateOutlet]=\\\"column.cellTemplate\\\"\\n                  [ngTemplateOutletContext]=\\\"{\\n                    $implicit: row,\\n                    rowIndex: rowIndex,\\n                    column: column\\n                  }\\\"\\n                >\\n                </ng-container>\\n              </td>\\n            </ng-container>\\n          </tr>\\n        </ng-container>\\n      </ng-container>\\n    </tbody>\\n    <tbody *ngIf=\\\"filterCount === 0\\\">\\n      <tr class=\\\"ngx-table__body-empty\\\">\\n        <ng-container *ngIf=\\\"noResultsTemplate\\\" [ngTemplateOutlet]=\\\"noResultsTemplate\\\">\\n        </ng-container>\\n        <td [attr.colspan]=\\\"columns && columns.length + 1\\\" *ngIf=\\\"!noResultsTemplate\\\">\\n          <div class=\\\"ngx-table__table-no-results\\\">No results</div>\\n        </td>\\n      </tr>\\n    </tbody>\\n    <tbody *ngIf=\\\"config.isLoading\\\">\\n      <tr class=\\\"ngx-table__body-loading\\\">\\n        <ng-container *ngIf=\\\"loadingTemplate\\\" [ngTemplateOutlet]=\\\"loadingTemplate\\\"> </ng-container>\\n        <td [attr.colspan]=\\\"columns && columns.length + 1\\\" *ngIf=\\\"!loadingTemplate\\\">\\n          <div [style.height.px]=\\\"loadingHeight\\\" class=\\\"ngx-table__table-loader-wrapper\\\">\\n            <div class=\\\"ngx-table__table-loader\\\"></div>\\n          </div>\\n        </td>\\n      </tr>\\n    </tbody>\\n    <tfoot *ngIf=\\\"summaryTemplate\\\">\\n      <tr>\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"summaryTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{ total: data.length, limit: limit, page: page }\\\"\\n        >\\n        </ng-container>\\n      </tr>\\n    </tfoot>\\n  </table>\\n  <pagination\\n    [attr.id]=\\\"'pagination' + id\\\"\\n    [id]=\\\"id\\\"\\n    #paginationComponent\\n    [config]=\\\"config\\\"\\n    [pagination]=\\\"pagination\\\"\\n    (updateRange)=\\\"onPagination($event)\\\"\\n  >\\n  </pagination>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1$1.ScrollDispatcher }, { type: StyleService }]; }, propDecorators: { configuration: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], pagination: [{\n                type: Input\n            }], groupRowsBy: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], toggleRowIndex: [{\n                type: Input\n            }], detailsTemplate: [{\n                type: Input\n            }], summaryTemplate: [{\n                type: Input\n            }], groupRowsHeaderTemplate: [{\n                type: Input\n            }], filtersTemplate: [{\n                type: Input\n            }], selectAllTemplate: [{\n                type: Input\n            }], noResultsTemplate: [{\n                type: Input\n            }], loadingTemplate: [{\n                type: Input\n            }], additionalActionsTemplate: [{\n                type: Input\n            }], rowContextMenu: [{\n                type: Input\n            }], columns: [{\n                type: Input\n            }], event: [{\n                type: Output\n            }], rowTemplate: [{\n                type: ContentChild,\n                args: [TemplateRef, { static: true }]\n            }], paginationComponent: [{\n                type: ViewChild,\n                args: ['paginationComponent']\n            }], contextMenu: [{\n                type: ViewChild,\n                args: ['contextMenu']\n            }], viewPort: [{\n                type: ViewChild,\n                args: [CdkVirtualScrollViewport]\n            }], onContextMenuClick: [{\n                type: HostListener,\n                args: ['document:click', ['$event.target']]\n            }] } });\n\nclass BaseModule {\n}\nBaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: BaseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: BaseModule, declarations: [BaseComponent,\n        HeaderComponent,\n        PaginationComponent,\n        TableTHeadComponent,\n        // Pipes\n        SearchPipe,\n        RenderPipe,\n        GlobalSearchPipe,\n        SortPipe], imports: [CommonModule, NgxPaginationModule, DragDropModule, ScrollingModule], exports: [BaseComponent] });\nBaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: BaseModule, imports: [[CommonModule, NgxPaginationModule, DragDropModule, ScrollingModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: BaseModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        BaseComponent,\n                        HeaderComponent,\n                        PaginationComponent,\n                        TableTHeadComponent,\n                        // Pipes\n                        SearchPipe,\n                        RenderPipe,\n                        GlobalSearchPipe,\n                        SortPipe,\n                    ],\n                    imports: [CommonModule, NgxPaginationModule, DragDropModule, ScrollingModule],\n                    exports: [BaseComponent],\n                }]\n        }] });\n\nclass TableModule {\n}\nTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TableModule, imports: [CommonModule, BaseModule], exports: [BaseComponent] });\nTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TableModule, providers: [], imports: [[CommonModule, BaseModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, BaseModule],\n                    exports: [BaseComponent],\n                    providers: [],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { API, BaseComponent, DefaultConfig, Event, STYLE, THEME, TableModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}